// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * parser/module.go: transpiled from html/parser.py
 */

package parser

import (
	Ωencoding "github.com/tenta-browser/go-video-downloader/lib/encoding"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	HTMLParse      λ.Object
	HTMLParseError λ.Object
	HTMLParser     λ.Object
)

func init() {
	λ.InitModule(func() {
		HTMLParse = Ωencoding.HTMLParse
		HTMLParseError = Ωencoding.HTMLParseErrorType
		HTMLParser = λ.Cal(λ.TypeType, λ.NewStr("HTMLParser"), λ.NewTuple(), func() λ.Dict {
			var (
				HTMLParser___init__ λ.Object
				HTMLParser_close    λ.Object
				HTMLParser_feed     λ.Object
			)
			HTMLParser___init__ = λ.NewFunction("__init__",
				[]λ.Param{
					{Name: "self"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒself = λargs[0]
					)
					_ = ϒself
					// pass
					return λ.None
				})
			HTMLParser_feed = λ.NewFunction("feed",
				[]λ.Param{
					{Name: "self"},
					{Name: "s"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒs    = λargs[1]
						ϒself = λargs[0]
					)
					λ.Cal(HTMLParse, ϒs, λ.GetAttr(ϒself, "handle_starttag", nil))
					return λ.None
				})
			HTMLParser_close = λ.NewFunction("close",
				[]λ.Param{
					{Name: "self"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒself = λargs[0]
					)
					_ = ϒself
					// pass
					return λ.None
				})
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("__init__"): HTMLParser___init__,
				λ.NewStr("close"):    HTMLParser_close,
				λ.NewStr("feed"):     HTMLParser_feed,
			})
		}())
	})
}
