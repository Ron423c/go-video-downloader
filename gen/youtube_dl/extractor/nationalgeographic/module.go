// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * nationalgeographic/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/nationalgeographic.py
 */

package nationalgeographic

import (
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωfox "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/fox"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	FOXIE                     λ.Object
	InfoExtractor             λ.Object
	NationalGeographicTVIE    λ.Object
	NationalGeographicVideoIE λ.Object
	ϒsmuggle_url              λ.Object
	ϒurl_basename             λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		FOXIE = Ωfox.FOXIE
		ϒsmuggle_url = Ωutils.ϒsmuggle_url
		ϒurl_basename = Ωutils.ϒurl_basename
		NationalGeographicVideoIE = λ.Cal(λ.TypeType, λ.NewStr("NationalGeographicVideoIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				NationalGeographicVideoIE_IE_NAME       λ.Object
				NationalGeographicVideoIE__VALID_URL    λ.Object
				NationalGeographicVideoIE__real_extract λ.Object
			)
			NationalGeographicVideoIE_IE_NAME = λ.NewStr("natgeo:video")
			NationalGeographicVideoIE__VALID_URL = λ.NewStr("https?://video\\.nationalgeographic\\.com/.*?")
			NationalGeographicVideoIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒguid    λ.Object
						ϒname    λ.Object
						ϒself    = λargs[0]
						ϒurl     = λargs[1]
						ϒwebpage λ.Object
					)
					ϒname = λ.Cal(ϒurl_basename, ϒurl)
					ϒwebpage = λ.Cal(λ.GetAttr(ϒself, "_download_webpage", nil), ϒurl, ϒname)
					ϒguid = λ.Cal(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewStr("id=\"(?:videoPlayer|player-container)\"[^>]+data-guid=\"([^\"]+)\""), ϒwebpage, λ.NewStr("guid"))
					return λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("_type"):  λ.NewStr("url_transparent"),
						λ.NewStr("ie_key"): λ.NewStr("ThePlatform"),
						λ.NewStr("url"): λ.Cal(ϒsmuggle_url, λ.Mod(λ.NewStr("http://link.theplatform.com/s/ngs/media/guid/2423130747/%s?mbr=true"), ϒguid), λ.NewDictWithTable(map[λ.Object]λ.Object{
							λ.NewStr("force_smil_url"): λ.True,
						})),
						λ.NewStr("id"): ϒguid,
					})
				})
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("IE_NAME"):       NationalGeographicVideoIE_IE_NAME,
				λ.NewStr("_VALID_URL"):    NationalGeographicVideoIE__VALID_URL,
				λ.NewStr("_real_extract"): NationalGeographicVideoIE__real_extract,
			})
		}())
		NationalGeographicTVIE = λ.Cal(λ.TypeType, λ.NewStr("NationalGeographicTVIE"), λ.NewTuple(FOXIE), func() λ.Dict {
			var (
				NationalGeographicTVIE__VALID_URL λ.Object
			)
			NationalGeographicTVIE__VALID_URL = λ.NewStr("https?://(?:www\\.)?nationalgeographic\\.com/tv/watch/(?P<id>[\\da-fA-F]+)")
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_VALID_URL"): NationalGeographicTVIE__VALID_URL,
			})
		}())
	})
}
