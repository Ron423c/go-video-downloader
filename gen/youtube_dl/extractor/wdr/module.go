// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2018 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * wdr/module.go: transpiled from https://github.com/rg3/youtube-dl/blob/master/youtube_dl/extractor/wdr.py
 */

package wdr

import (
	Ωre "github.com/tenta-browser/go-video-downloader/gen/re"
	Ωcompat "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/compat"
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	ExtractorError    λ.Object
	InfoExtractor     λ.Object
	WDRElefantIE      λ.Object
	WDRIE             λ.Object
	WDRMobileIE       λ.Object
	WDRPageIE         λ.Object
	ϒcompat_str       λ.Object
	ϒdetermine_ext    λ.Object
	ϒjs_to_json       λ.Object
	ϒstrip_jsonp      λ.Object
	ϒtry_get          λ.Object
	ϒunified_strdate  λ.Object
	ϒupdate_url_query λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ϒcompat_str = Ωcompat.ϒcompat_str
		ϒdetermine_ext = Ωutils.ϒdetermine_ext
		ExtractorError = Ωutils.ExtractorError
		ϒjs_to_json = Ωutils.ϒjs_to_json
		ϒstrip_jsonp = Ωutils.ϒstrip_jsonp
		ϒtry_get = Ωutils.ϒtry_get
		ϒunified_strdate = Ωutils.ϒunified_strdate
		ϒupdate_url_query = Ωutils.ϒupdate_url_query
		WDRIE = λ.Cal(λ.TypeType, λ.NewStr("WDRIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				WDRIE__VALID_URL λ.Object
			)
			WDRIE__VALID_URL = λ.NewStr("https?://deviceids-medp\\.wdr\\.de/ondemand/\\d+/(?P<id>\\d+)\\.js")
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_VALID_URL"): WDRIE__VALID_URL,
			})
		}())
		WDRPageIE = λ.Cal(λ.TypeType, λ.NewStr("WDRPageIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				WDRPageIE__CURRENT_MAUS_URL λ.Object
				WDRPageIE__PAGE_REGEX       λ.Object
				WDRPageIE__VALID_URL        λ.Object
			)
			WDRPageIE__CURRENT_MAUS_URL = λ.NewStr("https?://(?:www\\.)wdrmaus.de/(?:[^/]+/){1,2}[^/?#]+\\.php5")
			WDRPageIE__PAGE_REGEX = λ.NewStr("/(?:mediathek/)?(?:[^/]+/)*(?P<display_id>[^/]+)\\.html")
			WDRPageIE__VALID_URL = λ.Add(λ.Add(λ.Add(λ.NewStr("https?://(?:www\\d?\\.)?(?:wdr\\d?|sportschau)\\.de"), WDRPageIE__PAGE_REGEX), λ.NewStr("|")), WDRPageIE__CURRENT_MAUS_URL)
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_CURRENT_MAUS_URL"): WDRPageIE__CURRENT_MAUS_URL,
				λ.NewStr("_PAGE_REGEX"):       WDRPageIE__PAGE_REGEX,
				λ.NewStr("_VALID_URL"):        WDRPageIE__VALID_URL,
			})
		}())
		WDRElefantIE = λ.Cal(λ.TypeType, λ.NewStr("WDRElefantIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				WDRElefantIE__VALID_URL λ.Object
			)
			WDRElefantIE__VALID_URL = λ.NewStr("https?://(?:www\\.)wdrmaus\\.de/elefantenseite/#(?P<id>.+)")
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_VALID_URL"): WDRElefantIE__VALID_URL,
			})
		}())
		WDRMobileIE = λ.Cal(λ.TypeType, λ.NewStr("WDRMobileIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				WDRMobileIE_IE_NAME       λ.Object
				WDRMobileIE__TEST         λ.Object
				WDRMobileIE__VALID_URL    λ.Object
				WDRMobileIE__real_extract λ.Object
			)
			WDRMobileIE__VALID_URL = λ.NewStr("(?x)\n        https?://mobile-ondemand\\.wdr\\.de/\n        .*?/fsk(?P<age_limit>[0-9]+)\n        /[0-9]+/[0-9]+/\n        (?P<id>[0-9]+)_(?P<title>[0-9]+)")
			WDRMobileIE_IE_NAME = λ.NewStr("wdr:mobile")
			WDRMobileIE__TEST = λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("url"): λ.NewStr("http://mobile-ondemand.wdr.de/CMS2010/mdb/ondemand/weltweit/fsk0/42/421735/421735_4283021.mp4"),
				λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("title"):     λ.NewStr("4283021"),
					λ.NewStr("id"):        λ.NewStr("421735"),
					λ.NewStr("ext"):       λ.NewStr("mp4"),
					λ.NewStr("age_limit"): λ.NewInt(0),
				}),
				λ.NewStr("skip"): λ.NewStr("Problems with loading data."),
			})
			WDRMobileIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒmobj λ.Object
						ϒself = λargs[0]
						ϒurl  = λargs[1]
					)
					ϒmobj = λ.Cal(Ωre.ϒmatch, λ.GetAttr(ϒself, "_VALID_URL", nil), ϒurl)
					return λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):        λ.Cal(λ.GetAttr(ϒmobj, "group", nil), λ.NewStr("id")),
						λ.NewStr("title"):     λ.Cal(λ.GetAttr(ϒmobj, "group", nil), λ.NewStr("title")),
						λ.NewStr("age_limit"): λ.Cal(λ.IntType, λ.Cal(λ.GetAttr(ϒmobj, "group", nil), λ.NewStr("age_limit"))),
						λ.NewStr("url"):       ϒurl,
						λ.NewStr("http_headers"): λ.NewDictWithTable(map[λ.Object]λ.Object{
							λ.NewStr("User-Agent"): λ.NewStr("mobile"),
						}),
					})
				})
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("IE_NAME"):       WDRMobileIE_IE_NAME,
				λ.NewStr("_TEST"):         WDRMobileIE__TEST,
				λ.NewStr("_VALID_URL"):    WDRMobileIE__VALID_URL,
				λ.NewStr("_real_extract"): WDRMobileIE__real_extract,
			})
		}())
	})
}
