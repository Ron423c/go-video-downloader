// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2018 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * uol/module.go: transpiled from https://github.com/rg3/youtube-dl/blob/master/youtube_dl/extractor/uol.py
 */

package uol

import (
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	InfoExtractor     λ.Object
	UOLIE             λ.Object
	ϒclean_html       λ.Object
	ϒint_or_none      λ.Object
	ϒparse_duration   λ.Object
	ϒstr_or_none      λ.Object
	ϒupdate_url_query λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ϒclean_html = Ωutils.ϒclean_html
		ϒint_or_none = Ωutils.ϒint_or_none
		ϒparse_duration = Ωutils.ϒparse_duration
		ϒupdate_url_query = Ωutils.ϒupdate_url_query
		ϒstr_or_none = Ωutils.ϒstr_or_none
		UOLIE = λ.Cal(λ.TypeType, λ.NewStr("UOLIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				UOLIE_IE_NAME       λ.Object
				UOLIE__FORMATS      λ.Object
				UOLIE__TESTS        λ.Object
				UOLIE__VALID_URL    λ.Object
				UOLIE__real_extract λ.Object
			)
			UOLIE_IE_NAME = λ.NewStr("uol.com.br")
			UOLIE__VALID_URL = λ.NewStr("https?://(?:.+?\\.)?uol\\.com\\.br/.*?(?:(?:mediaId|v)=|view/(?:[a-z0-9]+/)?|video(?:=|/(?:\\d{4}/\\d{2}/\\d{2}/)?))(?P<id>\\d+|[\\w-]+-[A-Z0-9]+)")
			UOLIE__TESTS = λ.NewList(
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("http://player.mais.uol.com.br/player_video_v3.swf?mediaId=15951931"),
					λ.NewStr("md5"): λ.NewStr("25291da27dc45e0afb5718a8603d3816"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("15951931"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("Miss simpatia é encontrada morta"),
						λ.NewStr("description"): λ.NewStr("md5:3f8c11a0c0556d66daf7e5b45ef823b2"),
					}),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("http://tvuol.uol.com.br/video/incendio-destroi-uma-das-maiores-casas-noturnas-de-londres-04024E9A3268D4C95326"),
					λ.NewStr("md5"): λ.NewStr("e41a2fb7b7398a3a46b6af37b15c00c9"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("15954259"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("Incêndio destrói uma das maiores casas noturnas de Londres"),
						λ.NewStr("description"): λ.NewStr("Em Londres, um incêndio destruiu uma das maiores boates da cidade. Não há informações sobre vítimas."),
					}),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("http://mais.uol.com.br/static/uolplayer/index.html?mediaId=15951931"),
					λ.NewStr("only_matching"): λ.True,
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("http://mais.uol.com.br/view/15954259"),
					λ.NewStr("only_matching"): λ.True,
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("http://noticias.band.uol.com.br/brasilurgente/video/2016/08/05/15951931/miss-simpatia-e-encontrada-morta.html"),
					λ.NewStr("only_matching"): λ.True,
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("http://videos.band.uol.com.br/programa.asp?e=noticias&pr=brasil-urgente&v=15951931&t=Policia-desmonte-base-do-PCC-na-Cracolandia"),
					λ.NewStr("only_matching"): λ.True,
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("http://mais.uol.com.br/view/cphaa0gl2x8r/incendio-destroi-uma-das-maiores-casas-noturnas-de-londres-04024E9A3268D4C95326"),
					λ.NewStr("only_matching"): λ.True,
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("http://noticias.uol.com.br//videos/assistir.htm?video=rafaela-silva-inspira-criancas-no-judo-04024D983968D4C95326"),
					λ.NewStr("only_matching"): λ.True,
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("http://mais.uol.com.br/view/e0qbgxid79uv/15275470"),
					λ.NewStr("only_matching"): λ.True,
				}),
			)
			UOLIE__FORMATS = λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("2"): λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("width"):  λ.NewInt(640),
					λ.NewStr("height"): λ.NewInt(360),
				}),
				λ.NewStr("5"): λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("width"):  λ.NewInt(1280),
					λ.NewStr("height"): λ.NewInt(720),
				}),
				λ.NewStr("6"): λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("width"):  λ.NewInt(426),
					λ.NewStr("height"): λ.NewInt(240),
				}),
				λ.NewStr("7"): λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("width"):  λ.NewInt(1920),
					λ.NewStr("height"): λ.NewInt(1080),
				}),
				λ.NewStr("8"): λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("width"):  λ.NewInt(192),
					λ.NewStr("height"): λ.NewInt(144),
				}),
				λ.NewStr("9"): λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("width"):  λ.NewInt(568),
					λ.NewStr("height"): λ.NewInt(320),
				}),
				λ.NewStr("11"): λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("width"):  λ.NewInt(640),
					λ.NewStr("height"): λ.NewInt(360),
				}),
			})
			UOLIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒembed_page      λ.Object
						ϒf               λ.Object
						ϒf_url           λ.Object
						ϒfmt             λ.Object
						ϒformat_id       λ.Object
						ϒformats         λ.Object
						ϒk               λ.Object
						ϒmedia_id        λ.Object
						ϒquery           λ.Object
						ϒself            = λargs[0]
						ϒtag             λ.Object
						ϒtag_description λ.Object
						ϒtags            λ.Object
						ϒtitle           λ.Object
						ϒurl             = λargs[1]
						ϒv               λ.Object
						ϒvideo_data      λ.Object
						ϒvideo_id        λ.Object
						ϒwebpage         λ.Object
						τmp0             λ.Object
						τmp1             λ.Object
					)
					ϒvideo_id = λ.Cal(λ.GetAttr(ϒself, "_match_id", nil), ϒurl)
					ϒmedia_id = λ.None
					if λ.IsTrue(λ.Cal(λ.GetAttr(ϒvideo_id, "isdigit", nil))) {
						ϒmedia_id = ϒvideo_id
					}
					if λ.IsTrue(λ.NewBool(!λ.IsTrue(ϒmedia_id))) {
						ϒembed_page = λ.Call(λ.GetAttr(ϒself, "_download_webpage", nil), λ.NewArgs(
							λ.Mod(λ.NewStr("https://jsuol.com.br/c/tv/uol/embed/?params=[embed,%s]"), ϒvideo_id),
							ϒvideo_id,
							λ.NewStr("Downloading embed page"),
						), λ.KWArgs{
							{Name: "fatal", Value: λ.False},
						})
						if λ.IsTrue(ϒembed_page) {
							ϒmedia_id = λ.Call(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewArgs(
								λ.NewTuple(
									λ.NewStr("uol\\.com\\.br/(\\d+)"),
									λ.NewStr("mediaId=(\\d+)"),
								),
								ϒembed_page,
								λ.NewStr("media id"),
							), λ.KWArgs{
								{Name: "default", Value: λ.None},
							})
						}
					}
					if λ.IsTrue(λ.NewBool(!λ.IsTrue(ϒmedia_id))) {
						ϒwebpage = λ.Cal(λ.GetAttr(ϒself, "_download_webpage", nil), ϒurl, ϒvideo_id)
						ϒmedia_id = λ.Cal(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewStr("mediaId=(\\d+)"), ϒwebpage, λ.NewStr("media id"))
					}
					ϒvideo_data = λ.GetItem(λ.Cal(λ.GetAttr(ϒself, "_download_json", nil), λ.Mod(λ.NewStr("http://mais.uol.com.br/apiuol/v3/player/getMedia/%s.json"), ϒmedia_id), ϒmedia_id), λ.NewStr("item"))
					ϒtitle = λ.GetItem(ϒvideo_data, λ.NewStr("title"))
					ϒquery = λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("ver"): λ.Cal(λ.GetAttr(ϒvideo_data, "get", nil), λ.NewStr("numRevision"), λ.NewInt(2)),
						λ.NewStr("r"):   λ.NewStr("http://mais.uol.com.br"),
					})
					τmp0 = λ.Cal(λ.BuiltinIter, λ.NewTuple(
						λ.NewStr("token"),
						λ.NewStr("sign"),
					))
					for {
						if τmp1 = λ.NextDefault(τmp0, λ.AfterLast); τmp1 == λ.AfterLast {
							break
						}
						ϒk = τmp1
						ϒv = λ.Cal(λ.GetAttr(ϒvideo_data, "get", nil), ϒk)
						if λ.IsTrue(ϒv) {
							λ.SetItem(ϒquery, ϒk, ϒv)
						}
					}
					ϒformats = λ.NewList()
					τmp0 = λ.Cal(λ.BuiltinIter, λ.Cal(λ.GetAttr(ϒvideo_data, "get", nil), λ.NewStr("formats"), λ.NewList()))
					for {
						if τmp1 = λ.NextDefault(τmp0, λ.AfterLast); τmp1 == λ.AfterLast {
							break
						}
						ϒf = τmp1
						ϒf_url = func() λ.Object {
							if λv := λ.Cal(λ.GetAttr(ϒf, "get", nil), λ.NewStr("url")); λ.IsTrue(λv) {
								return λv
							} else {
								return λ.Cal(λ.GetAttr(ϒf, "get", nil), λ.NewStr("secureUrl"))
							}
						}()
						if λ.IsTrue(λ.NewBool(!λ.IsTrue(ϒf_url))) {
							continue
						}
						ϒf_url = λ.Cal(ϒupdate_url_query, ϒf_url, ϒquery)
						ϒformat_id = λ.Cal(ϒstr_or_none, λ.Cal(λ.GetAttr(ϒf, "get", nil), λ.NewStr("id")))
						if λ.IsTrue(λ.Eq(ϒformat_id, λ.NewStr("10"))) {
							λ.Cal(λ.GetAttr(ϒformats, "extend", nil), λ.Call(λ.GetAttr(ϒself, "_extract_m3u8_formats", nil), λ.NewArgs(
								ϒf_url,
								ϒvideo_id,
								λ.NewStr("mp4"),
								λ.NewStr("m3u8_native"),
							), λ.KWArgs{
								{Name: "m3u8_id", Value: λ.NewStr("hls")},
								{Name: "fatal", Value: λ.False},
							}))
							continue
						}
						ϒfmt = λ.NewDictWithTable(map[λ.Object]λ.Object{
							λ.NewStr("format_id"):         ϒformat_id,
							λ.NewStr("url"):               ϒf_url,
							λ.NewStr("source_preference"): λ.NewInt(1),
						})
						λ.Cal(λ.GetAttr(ϒfmt, "update", nil), λ.Cal(λ.GetAttr(λ.GetAttr(ϒself, "_FORMATS", nil), "get", nil), ϒformat_id, λ.NewDictWithTable(map[λ.Object]λ.Object{})))
						λ.Cal(λ.GetAttr(ϒformats, "append", nil), ϒfmt)
					}
					λ.Cal(λ.GetAttr(ϒself, "_sort_formats", nil), ϒformats, λ.NewTuple(
						λ.NewStr("height"),
						λ.NewStr("width"),
						λ.NewStr("source_preference"),
						λ.NewStr("tbr"),
						λ.NewStr("ext"),
					))
					ϒtags = λ.NewList()
					τmp0 = λ.Cal(λ.BuiltinIter, λ.Cal(λ.GetAttr(ϒvideo_data, "get", nil), λ.NewStr("tags"), λ.NewList()))
					for {
						if τmp1 = λ.NextDefault(τmp0, λ.AfterLast); τmp1 == λ.AfterLast {
							break
						}
						ϒtag = τmp1
						ϒtag_description = λ.Cal(λ.GetAttr(ϒtag, "get", nil), λ.NewStr("description"))
						if λ.IsTrue(λ.NewBool(!λ.IsTrue(ϒtag_description))) {
							continue
						}
						λ.Cal(λ.GetAttr(ϒtags, "append", nil), ϒtag_description)
					}
					return λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          ϒmedia_id,
						λ.NewStr("title"):       ϒtitle,
						λ.NewStr("description"): λ.Cal(ϒclean_html, λ.Cal(λ.GetAttr(ϒvideo_data, "get", nil), λ.NewStr("desMedia"))),
						λ.NewStr("thumbnail"):   λ.Cal(λ.GetAttr(ϒvideo_data, "get", nil), λ.NewStr("thumbnail")),
						λ.NewStr("duration"): func() λ.Object {
							if λv := λ.Cal(ϒint_or_none, λ.Cal(λ.GetAttr(ϒvideo_data, "get", nil), λ.NewStr("durationSeconds"))); λ.IsTrue(λv) {
								return λv
							} else {
								return λ.Cal(ϒparse_duration, λ.Cal(λ.GetAttr(ϒvideo_data, "get", nil), λ.NewStr("duration")))
							}
						}(),
						λ.NewStr("tags"):    ϒtags,
						λ.NewStr("formats"): ϒformats,
					})
				})
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("IE_NAME"):       UOLIE_IE_NAME,
				λ.NewStr("_FORMATS"):      UOLIE__FORMATS,
				λ.NewStr("_TESTS"):        UOLIE__TESTS,
				λ.NewStr("_VALID_URL"):    UOLIE__VALID_URL,
				λ.NewStr("_real_extract"): UOLIE__real_extract,
			})
		}())
	})
}
