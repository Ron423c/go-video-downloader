// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * veoh/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/veoh.py
 */

package veoh

import (
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	InfoExtractor   λ.Object
	VeohIE          λ.Object
	ϒint_or_none    λ.Object
	ϒparse_duration λ.Object
	ϒqualities      λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ϒint_or_none = Ωutils.ϒint_or_none
		ϒparse_duration = Ωutils.ϒparse_duration
		ϒqualities = Ωutils.ϒqualities
		VeohIE = λ.Cal(λ.TypeType, λ.NewStr("VeohIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				VeohIE__TESTS        λ.Object
				VeohIE__VALID_URL    λ.Object
				VeohIE__real_extract λ.Object
			)
			VeohIE__VALID_URL = λ.NewStr("https?://(?:www\\.)?veoh\\.com/(?:watch|embed|iphone/#_Watch)/(?P<id>(?:v|e|yapi-)[\\da-zA-Z]+)")
			VeohIE__TESTS = λ.NewList(
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("http://www.veoh.com/watch/v56314296nk7Zdmz3"),
					λ.NewStr("md5"): λ.NewStr("9e7ecc0fd8bbee7a69fe38953aeebd30"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("v56314296nk7Zdmz3"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("Straight Backs Are Stronger"),
						λ.NewStr("uploader"):    λ.NewStr("LUMOback"),
						λ.NewStr("description"): λ.NewStr("At LUMOback, we believe straight backs are stronger.  The LUMOback Posture & Movement Sensor:  It gently vibrates when you slouch, inspiring improved posture and mobility.  Use the app to track your data and improve your posture over time. "),
					}),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("http://www.veoh.com/embed/v56314296nk7Zdmz3"),
					λ.NewStr("only_matching"): λ.True,
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("http://www.veoh.com/watch/v27701988pbTc4wzN?h1=Chile+workers+cover+up+to+avoid+skin+damage"),
					λ.NewStr("md5"): λ.NewStr("4a6ff84b87d536a6a71e6aa6c0ad07fa"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("27701988"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("Chile workers cover up to avoid skin damage"),
						λ.NewStr("description"): λ.NewStr("md5:2bd151625a60a32822873efc246ba20d"),
						λ.NewStr("uploader"):    λ.NewStr("afp-news"),
						λ.NewStr("duration"):    λ.NewInt(123),
					}),
					λ.NewStr("skip"): λ.NewStr("This video has been deleted."),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):  λ.NewStr("http://www.veoh.com/watch/v69525809F6Nc4frX"),
					λ.NewStr("md5"):  λ.NewStr("4fde7b9e33577bab2f2f8f260e30e979"),
					λ.NewStr("note"): λ.NewStr("Embedded ooyala video"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("69525809"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("Doctors Alter Plan For Preteen's Weight Loss Surgery"),
						λ.NewStr("description"): λ.NewStr("md5:f5a11c51f8fb51d2315bca0937526891"),
						λ.NewStr("uploader"):    λ.NewStr("newsy-videos"),
					}),
					λ.NewStr("skip"): λ.NewStr("This video has been deleted."),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("http://www.veoh.com/watch/e152215AJxZktGS"),
					λ.NewStr("only_matching"): λ.True,
				}),
			)
			VeohIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒf_id          λ.Object
						ϒf_url         λ.Object
						ϒformats       λ.Object
						ϒq             λ.Object
						ϒself          = λargs[0]
						ϒthumbnail_url λ.Object
						ϒtitle         λ.Object
						ϒurl           = λargs[1]
						ϒvideo         λ.Object
						ϒvideo_id      λ.Object
						τmp0           λ.Object
						τmp1           λ.Object
						τmp2           λ.Object
					)
					ϒvideo_id = λ.Cal(λ.GetAttr(ϒself, "_match_id", nil), ϒurl)
					ϒvideo = λ.GetItem(λ.Cal(λ.GetAttr(ϒself, "_download_json", nil), λ.Add(λ.NewStr("https://www.veoh.com/watch/getVideo/"), ϒvideo_id), ϒvideo_id), λ.NewStr("video"))
					ϒtitle = λ.GetItem(ϒvideo, λ.NewStr("title"))
					ϒthumbnail_url = λ.None
					ϒq = λ.Cal(ϒqualities, λ.NewList(
						λ.NewStr("HQ"),
						λ.NewStr("Regular"),
					))
					ϒformats = λ.NewList()
					τmp0 = λ.Cal(λ.BuiltinIter, λ.Cal(λ.GetAttr(λ.Cal(λ.GetAttr(ϒvideo, "get", nil), λ.NewStr("src"), λ.NewDictWithTable(map[λ.Object]λ.Object{})), "items", nil)))
					for {
						if τmp1 = λ.NextDefault(τmp0, λ.AfterLast); τmp1 == λ.AfterLast {
							break
						}
						τmp2 = τmp1
						ϒf_id = λ.GetItem(τmp2, λ.NewInt(0))
						ϒf_url = λ.GetItem(τmp2, λ.NewInt(1))
						if λ.IsTrue(λ.NewBool(!λ.IsTrue(ϒf_url))) {
							continue
						}
						if λ.IsTrue(λ.Eq(ϒf_id, λ.NewStr("poster"))) {
							ϒthumbnail_url = ϒf_url
						} else {
							λ.Cal(λ.GetAttr(ϒformats, "append", nil), λ.NewDictWithTable(map[λ.Object]λ.Object{
								λ.NewStr("format_id"): ϒf_id,
								λ.NewStr("quality"):   λ.Cal(ϒq, ϒf_id),
								λ.NewStr("url"):       ϒf_url,
							}))
						}
					}
					λ.Cal(λ.GetAttr(ϒself, "_sort_formats", nil), ϒformats)
					return λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          ϒvideo_id,
						λ.NewStr("title"):       ϒtitle,
						λ.NewStr("description"): λ.Cal(λ.GetAttr(ϒvideo, "get", nil), λ.NewStr("description")),
						λ.NewStr("thumbnail"):   ϒthumbnail_url,
						λ.NewStr("uploader"):    λ.Cal(λ.GetAttr(λ.Cal(λ.GetAttr(ϒvideo, "get", nil), λ.NewStr("author"), λ.NewDictWithTable(map[λ.Object]λ.Object{})), "get", nil), λ.NewStr("nickname")),
						λ.NewStr("duration"): func() λ.Object {
							if λv := λ.Cal(ϒint_or_none, λ.Cal(λ.GetAttr(ϒvideo, "get", nil), λ.NewStr("lengthBySec"))); λ.IsTrue(λv) {
								return λv
							} else {
								return λ.Cal(ϒparse_duration, λ.Cal(λ.GetAttr(ϒvideo, "get", nil), λ.NewStr("length")))
							}
						}(),
						λ.NewStr("view_count"):     λ.Cal(ϒint_or_none, λ.Cal(λ.GetAttr(ϒvideo, "get", nil), λ.NewStr("views"))),
						λ.NewStr("formats"):        ϒformats,
						λ.NewStr("average_rating"): λ.Cal(ϒint_or_none, λ.Cal(λ.GetAttr(ϒvideo, "get", nil), λ.NewStr("rating"))),
						λ.NewStr("comment_count"):  λ.Cal(ϒint_or_none, λ.Cal(λ.GetAttr(ϒvideo, "get", nil), λ.NewStr("numOfComments"))),
					})
				})
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_TESTS"):        VeohIE__TESTS,
				λ.NewStr("_VALID_URL"):    VeohIE__VALID_URL,
				λ.NewStr("_real_extract"): VeohIE__real_extract,
			})
		}())
	})
}
