// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2018 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * megaphone/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/megaphone.py
 */

package megaphone

import (
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	InfoExtractor λ.Object
	MegaphoneIE   λ.Object
	ϒjs_to_json   λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ϒjs_to_json = Ωutils.ϒjs_to_json
		MegaphoneIE = λ.Cal(λ.TypeType, λ.NewStr("MegaphoneIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				MegaphoneIE_IE_NAME       λ.Object
				MegaphoneIE__TEST         λ.Object
				MegaphoneIE__VALID_URL    λ.Object
				MegaphoneIE__real_extract λ.Object
			)
			MegaphoneIE_IE_NAME = λ.NewStr("megaphone.fm")
			MegaphoneIE__VALID_URL = λ.NewStr("https://player\\.megaphone\\.fm/(?P<id>[A-Z0-9]+)")
			MegaphoneIE__TEST = λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("url"): λ.NewStr("https://player.megaphone.fm/GLT9749789991?\""),
				λ.NewStr("md5"): λ.NewStr("4816a0de523eb3e972dc0dda2c191f96"),
				λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("id"):        λ.NewStr("GLT9749789991"),
					λ.NewStr("ext"):       λ.NewStr("mp3"),
					λ.NewStr("title"):     λ.NewStr("#97 What Kind Of Idiot Gets Phished?"),
					λ.NewStr("thumbnail"): λ.NewStr("re:^https://.*\\.png.*$"),
					λ.NewStr("duration"):  λ.NewFloat(1776.26375),
					λ.NewStr("author"):    λ.NewStr("Reply All"),
				}),
			})
			MegaphoneIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒauthor       λ.Object
						ϒepisode_data λ.Object
						ϒepisode_json λ.Object
						ϒformats      λ.Object
						ϒself         = λargs[0]
						ϒthumbnail    λ.Object
						ϒtitle        λ.Object
						ϒurl          = λargs[1]
						ϒvideo_id     λ.Object
						ϒvideo_url    λ.Object
						ϒwebpage      λ.Object
					)
					ϒvideo_id = λ.Cal(λ.GetAttr(ϒself, "_match_id", nil), ϒurl)
					ϒwebpage = λ.Cal(λ.GetAttr(ϒself, "_download_webpage", nil), ϒurl, ϒvideo_id)
					ϒtitle = λ.Cal(λ.GetAttr(ϒself, "_og_search_property", nil), λ.NewStr("audio:title"), ϒwebpage)
					ϒauthor = λ.Cal(λ.GetAttr(ϒself, "_og_search_property", nil), λ.NewStr("audio:artist"), ϒwebpage)
					ϒthumbnail = λ.Cal(λ.GetAttr(ϒself, "_og_search_thumbnail", nil), ϒwebpage)
					ϒepisode_json = λ.Cal(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewStr("(?s)var\\s+episode\\s*=\\s*(\\{.+?\\});"), ϒwebpage, λ.NewStr("episode JSON"))
					ϒepisode_data = λ.Cal(λ.GetAttr(ϒself, "_parse_json", nil), ϒepisode_json, ϒvideo_id, ϒjs_to_json)
					ϒvideo_url = λ.Cal(λ.GetAttr(ϒself, "_proto_relative_url", nil), λ.GetItem(ϒepisode_data, λ.NewStr("mediaUrl")), λ.NewStr("https:"))
					ϒformats = λ.NewList(λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("url"): ϒvideo_url,
					}))
					return λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):        ϒvideo_id,
						λ.NewStr("thumbnail"): ϒthumbnail,
						λ.NewStr("title"):     ϒtitle,
						λ.NewStr("author"):    ϒauthor,
						λ.NewStr("duration"):  λ.GetItem(ϒepisode_data, λ.NewStr("duration")),
						λ.NewStr("formats"):   ϒformats,
					})
				})
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("IE_NAME"):       MegaphoneIE_IE_NAME,
				λ.NewStr("_TEST"):         MegaphoneIE__TEST,
				λ.NewStr("_VALID_URL"):    MegaphoneIE__VALID_URL,
				λ.NewStr("_real_extract"): MegaphoneIE__real_extract,
			})
		}())
	})
}
