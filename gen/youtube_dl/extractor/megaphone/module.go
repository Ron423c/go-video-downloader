// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * megaphone/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/megaphone.py
 */

package megaphone

import (
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	InfoExtractor λ.Object
	MegaphoneIE   λ.Object
	ϒjs_to_json   λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ϒjs_to_json = Ωutils.ϒjs_to_json
		MegaphoneIE = λ.Cal(λ.TypeType, λ.StrLiteral("MegaphoneIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				MegaphoneIE_IE_NAME       λ.Object
				MegaphoneIE__VALID_URL    λ.Object
				MegaphoneIE__real_extract λ.Object
			)
			MegaphoneIE_IE_NAME = λ.StrLiteral("megaphone.fm")
			MegaphoneIE__VALID_URL = λ.StrLiteral("https://player\\.megaphone\\.fm/(?P<id>[A-Z0-9]+)")
			MegaphoneIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒauthor       λ.Object
						ϒepisode_data λ.Object
						ϒepisode_json λ.Object
						ϒformats      λ.Object
						ϒself         = λargs[0]
						ϒthumbnail    λ.Object
						ϒtitle        λ.Object
						ϒurl          = λargs[1]
						ϒvideo_id     λ.Object
						ϒvideo_url    λ.Object
						ϒwebpage      λ.Object
					)
					ϒvideo_id = λ.Calm(ϒself, "_match_id", ϒurl)
					ϒwebpage = λ.Calm(ϒself, "_download_webpage", ϒurl, ϒvideo_id)
					ϒtitle = λ.Calm(ϒself, "_og_search_property", λ.StrLiteral("audio:title"), ϒwebpage)
					ϒauthor = λ.Calm(ϒself, "_og_search_property", λ.StrLiteral("audio:artist"), ϒwebpage)
					ϒthumbnail = λ.Calm(ϒself, "_og_search_thumbnail", ϒwebpage)
					ϒepisode_json = λ.Calm(ϒself, "_search_regex", λ.StrLiteral("(?s)var\\s+episode\\s*=\\s*(\\{.+?\\});"), ϒwebpage, λ.StrLiteral("episode JSON"))
					ϒepisode_data = λ.Calm(ϒself, "_parse_json", ϒepisode_json, ϒvideo_id, ϒjs_to_json)
					ϒvideo_url = λ.Calm(ϒself, "_proto_relative_url", λ.GetItem(ϒepisode_data, λ.StrLiteral("mediaUrl")), λ.StrLiteral("https:"))
					ϒformats = λ.NewList(λ.DictLiteral(map[string]λ.Object{
						"url": ϒvideo_url,
					}))
					return λ.DictLiteral(map[string]λ.Object{
						"id":        ϒvideo_id,
						"thumbnail": ϒthumbnail,
						"title":     ϒtitle,
						"author":    ϒauthor,
						"duration":  λ.GetItem(ϒepisode_data, λ.StrLiteral("duration")),
						"formats":   ϒformats,
					})
				})
			return λ.DictLiteral(map[string]λ.Object{
				"IE_NAME":       MegaphoneIE_IE_NAME,
				"_VALID_URL":    MegaphoneIE__VALID_URL,
				"_real_extract": MegaphoneIE__real_extract,
			})
		}())
	})
}
