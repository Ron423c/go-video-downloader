// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * thisoldhouse/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/thisoldhouse.py
 */

package thisoldhouse

import (
	Ωcompat "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/compat"
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	InfoExtractor  λ.Object
	ThisOldHouseIE λ.Object
	ϒcompat_str    λ.Object
	ϒtry_get       λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ϒcompat_str = Ωcompat.ϒcompat_str
		ϒtry_get = Ωutils.ϒtry_get
		ThisOldHouseIE = λ.Cal(λ.TypeType, λ.StrLiteral("ThisOldHouseIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				ThisOldHouseIE__VALID_URL    λ.Object
				ThisOldHouseIE__real_extract λ.Object
			)
			ThisOldHouseIE__VALID_URL = λ.StrLiteral("https?://(?:www\\.)?thisoldhouse\\.com/(?:watch|how-to|tv-episode)/(?P<id>[^/?#]+)")
			ThisOldHouseIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒdisplay_id      λ.Object
						ϒdrupal_settings λ.Object
						ϒself            = λargs[0]
						ϒurl             = λargs[1]
						ϒvideo_id        λ.Object
						ϒwebpage         λ.Object
					)
					ϒdisplay_id = λ.Calm(ϒself, "_match_id", ϒurl)
					ϒwebpage = λ.Calm(ϒself, "_download_webpage", ϒurl, ϒdisplay_id)
					ϒvideo_id = λ.Call(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewArgs(
						λ.NewTuple(
							λ.StrLiteral("data-mid=([\"\\'])(?P<id>(?:(?!\\1).)+)\\1"),
							λ.StrLiteral("id=([\"\\'])inline-video-player-(?P<id>(?:(?!\\1).)+)\\1"),
						),
						ϒwebpage,
						λ.StrLiteral("video id"),
					), λ.KWArgs{
						{Name: "default", Value: λ.None},
						{Name: "group", Value: λ.StrLiteral("id")},
					})
					if !λ.IsTrue(ϒvideo_id) {
						ϒdrupal_settings = λ.Calm(ϒself, "_parse_json", λ.Calm(ϒself, "_search_regex", λ.StrLiteral("jQuery\\.extend\\(Drupal\\.settings\\s*,\\s*({.+?})\\);"), ϒwebpage, λ.StrLiteral("drupal settings")), ϒdisplay_id)
						ϒvideo_id = func() λ.Object {
							if λv := λ.Cal(ϒtry_get, ϒdrupal_settings, λ.NewFunction("<lambda>",
								[]λ.Param{
									{Name: "x"},
								},
								0, false, false,
								func(λargs []λ.Object) λ.Object {
									var (
										ϒx = λargs[0]
									)
									return λ.GetItem(λ.GetItem(ϒx, λ.StrLiteral("jwplatform")), λ.StrLiteral("video_id"))
								}), ϒcompat_str); λ.IsTrue(λv) {
								return λv
							} else {
								return λ.GetItem(λ.Cal(λ.ListType, λ.GetItem(ϒdrupal_settings, λ.StrLiteral("comScore"))), λ.IntLiteral(0))
							}
						}()
					}
					return λ.Calm(ϒself, "url_result", λ.Add(λ.StrLiteral("jwplatform:"), ϒvideo_id), λ.StrLiteral("JWPlatform"), ϒvideo_id)
				})
			return λ.DictLiteral(map[string]λ.Object{
				"_VALID_URL":    ThisOldHouseIE__VALID_URL,
				"_real_extract": ThisOldHouseIE__real_extract,
			})
		}())
	})
}
