// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2018 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * ina/module.go: transpiled from https://github.com/rg3/youtube-dl/blob/master/youtube_dl/extractor/ina.py
 */

package ina

import (
	Ωre "github.com/tenta-browser/go-video-downloader/gen/re"
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	InaIE         λ.Object
	InfoExtractor λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		InaIE = λ.Cal(λ.TypeType, λ.NewStr("InaIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				InaIE__TEST         λ.Object
				InaIE__VALID_URL    λ.Object
				InaIE__real_extract λ.Object
			)
			InaIE__VALID_URL = λ.NewStr("https?://(?:www\\.)?ina\\.fr/video/(?P<id>I?[A-Z0-9]+)")
			InaIE__TEST = λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("url"): λ.NewStr("http://www.ina.fr/video/I12055569/francois-hollande-je-crois-que-c-est-clair-video.html"),
				λ.NewStr("md5"): λ.NewStr("a667021bf2b41f8dc6049479d9bb38a3"),
				λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("id"):    λ.NewStr("I12055569"),
					λ.NewStr("ext"):   λ.NewStr("mp4"),
					λ.NewStr("title"): λ.NewStr("François Hollande \"Je crois que c'est clair\""),
				}),
			})
			InaIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒinfo_doc  λ.Object
						ϒmobj      λ.Object
						ϒmrss_url  λ.Object
						ϒself      = λargs[0]
						ϒurl       = λargs[1]
						ϒvideo_id  λ.Object
						ϒvideo_url λ.Object
					)
					ϒmobj = λ.Cal(Ωre.ϒmatch, λ.GetAttr(ϒself, "_VALID_URL", nil), ϒurl)
					ϒvideo_id = λ.Cal(λ.GetAttr(ϒmobj, "group", nil), λ.NewStr("id"))
					ϒmrss_url = λ.Mod(λ.NewStr("http://player.ina.fr/notices/%s.mrss"), ϒvideo_id)
					ϒinfo_doc = λ.Cal(λ.GetAttr(ϒself, "_download_xml", nil), ϒmrss_url, ϒvideo_id)
					λ.Cal(λ.GetAttr(ϒself, "report_extraction", nil), ϒvideo_id)
					ϒvideo_url = λ.GetItem(λ.GetAttr(λ.Cal(λ.GetAttr(ϒinfo_doc, "find", nil), λ.NewStr(".//{http://search.yahoo.com/mrss/}player")), "attrib", nil), λ.NewStr("url"))
					return λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):    ϒvideo_id,
						λ.NewStr("url"):   ϒvideo_url,
						λ.NewStr("title"): λ.GetAttr(λ.Cal(λ.GetAttr(ϒinfo_doc, "find", nil), λ.NewStr(".//title")), "text", nil),
					})
				})
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_TEST"):         InaIE__TEST,
				λ.NewStr("_VALID_URL"):    InaIE__VALID_URL,
				λ.NewStr("_real_extract"): InaIE__real_extract,
			})
		}())
	})
}
