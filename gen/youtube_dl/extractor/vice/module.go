// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2018 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * vice/module.go: transpiled from https://github.com/rg3/youtube-dl/blob/master/youtube_dl/extractor/vice.py
 */

package vice

import (
	Ωcompat "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/compat"
	Ωadobepass "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/adobepass"
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωyoutube "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/youtube"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	AdobePassIE      λ.Object
	ExtractorError   λ.Object
	InfoExtractor    λ.Object
	ViceArticleIE    λ.Object
	ViceIE           λ.Object
	ViceShowIE       λ.Object
	YoutubeIE        λ.Object
	ϒcompat_str      λ.Object
	ϒint_or_none     λ.Object
	ϒparse_age_limit λ.Object
	ϒstr_or_none     λ.Object
	ϒtry_get         λ.Object
)

func init() {
	λ.InitModule(func() {
		AdobePassIE = Ωadobepass.AdobePassIE
		YoutubeIE = Ωyoutube.YoutubeIE
		InfoExtractor = Ωcommon.InfoExtractor
		ϒcompat_str = Ωcompat.ϒcompat_str
		ExtractorError = Ωutils.ExtractorError
		ϒint_or_none = Ωutils.ϒint_or_none
		ϒparse_age_limit = Ωutils.ϒparse_age_limit
		ϒstr_or_none = Ωutils.ϒstr_or_none
		ϒtry_get = Ωutils.ϒtry_get
		ViceIE = λ.Cal(λ.TypeType, λ.NewStr("ViceIE"), λ.NewTuple(AdobePassIE), func() λ.Dict {
			var (
				ViceIE__VALID_URL λ.Object
			)
			ViceIE__VALID_URL = λ.NewStr("https?://(?:(?:video|vms)\\.vice|(?:www\\.)?viceland)\\.com/(?P<locale>[^/]+)/(?:video/[^/]+|embed)/(?P<id>[\\da-f]+)")
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_VALID_URL"): ViceIE__VALID_URL,
			})
		}())
		ViceShowIE = λ.Cal(λ.TypeType, λ.NewStr("ViceShowIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				ViceShowIE__VALID_URL λ.Object
			)
			ViceShowIE__VALID_URL = λ.NewStr("https?://(?:.+?\\.)?vice\\.com/(?:[^/]+/)?show/(?P<id>[^/?#&]+)")
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_VALID_URL"): ViceShowIE__VALID_URL,
			})
		}())
		ViceArticleIE = λ.Cal(λ.TypeType, λ.NewStr("ViceArticleIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				ViceArticleIE__VALID_URL λ.Object
			)
			ViceArticleIE__VALID_URL = λ.NewStr("https://www\\.vice\\.com/[^/]+/article/(?P<id>[^?#]+)")
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_VALID_URL"): ViceArticleIE__VALID_URL,
			})
		}())
	})
}
