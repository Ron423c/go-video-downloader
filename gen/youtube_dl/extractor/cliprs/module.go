// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * cliprs/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/cliprs.py
 */

package cliprs

import (
	Ωonet "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/onet"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	ClipRsIE   λ.Object
	OnetBaseIE λ.Object
)

func init() {
	λ.InitModule(func() {
		OnetBaseIE = Ωonet.OnetBaseIE
		ClipRsIE = λ.Cal(λ.TypeType, λ.NewStr("ClipRsIE"), λ.NewTuple(OnetBaseIE), func() λ.Dict {
			var (
				ClipRsIE__TEST         λ.Object
				ClipRsIE__VALID_URL    λ.Object
				ClipRsIE__real_extract λ.Object
			)
			ClipRsIE__VALID_URL = λ.NewStr("https?://(?:www\\.)?clip\\.rs/(?P<id>[^/]+)/\\d+")
			ClipRsIE__TEST = λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("url"): λ.NewStr("http://www.clip.rs/premijera-frajle-predstavljaju-novi-spot-za-pesmu-moli-me-moli/3732"),
				λ.NewStr("md5"): λ.NewStr("c412d57815ba07b56f9edc7b5d6a14e5"),
				λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("id"):          λ.NewStr("1488842.1399140381"),
					λ.NewStr("ext"):         λ.NewStr("mp4"),
					λ.NewStr("title"):       λ.NewStr("PREMIJERA Frajle predstavljaju novi spot za pesmu Moli me, moli"),
					λ.NewStr("description"): λ.NewStr("md5:56ce2c3b4ab31c5a2e0b17cb9a453026"),
					λ.NewStr("duration"):    λ.NewInt(229),
					λ.NewStr("timestamp"):   λ.NewInt(1459850243),
					λ.NewStr("upload_date"): λ.NewStr("20160405"),
				}),
			})
			ClipRsIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒdisplay_id λ.Object
						ϒinfo_dict  λ.Object
						ϒmvp_id     λ.Object
						ϒself       = λargs[0]
						ϒurl        = λargs[1]
						ϒwebpage    λ.Object
					)
					ϒdisplay_id = λ.Cal(λ.GetAttr(ϒself, "_match_id", nil), ϒurl)
					ϒwebpage = λ.Cal(λ.GetAttr(ϒself, "_download_webpage", nil), ϒurl, ϒdisplay_id)
					ϒmvp_id = λ.Cal(λ.GetAttr(ϒself, "_search_mvp_id", nil), ϒwebpage)
					ϒinfo_dict = λ.Cal(λ.GetAttr(ϒself, "_extract_from_id", nil), ϒmvp_id, ϒwebpage)
					λ.SetItem(ϒinfo_dict, λ.NewStr("display_id"), ϒdisplay_id)
					return ϒinfo_dict
				})
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_TEST"):         ClipRsIE__TEST,
				λ.NewStr("_VALID_URL"):    ClipRsIE__VALID_URL,
				λ.NewStr("_real_extract"): ClipRsIE__real_extract,
			})
		}())
	})
}
