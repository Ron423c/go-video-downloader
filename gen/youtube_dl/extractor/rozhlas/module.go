// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * rozhlas/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/rozhlas.py
 */

package rozhlas

import (
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	InfoExtractor λ.Object
	RozhlasIE     λ.Object
	ϒint_or_none  λ.Object
	ϒremove_start λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ϒint_or_none = Ωutils.ϒint_or_none
		ϒremove_start = Ωutils.ϒremove_start
		RozhlasIE = λ.Cal(λ.TypeType, λ.NewStr("RozhlasIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				RozhlasIE__TESTS        λ.Object
				RozhlasIE__VALID_URL    λ.Object
				RozhlasIE__real_extract λ.Object
			)
			RozhlasIE__VALID_URL = λ.NewStr("https?://(?:www\\.)?prehravac\\.rozhlas\\.cz/audio/(?P<id>[0-9]+)")
			RozhlasIE__TESTS = λ.NewList(
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("http://prehravac.rozhlas.cz/audio/3421320"),
					λ.NewStr("md5"): λ.NewStr("504c902dbc9e9a1fd50326eccf02a7e2"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("3421320"),
						λ.NewStr("ext"):         λ.NewStr("mp3"),
						λ.NewStr("title"):       λ.NewStr("Echo Pavla Klusáka (30.06.2015 21:00)"),
						λ.NewStr("description"): λ.NewStr("Osmdesátiny Terryho Rileyho jsou skvělou příležitostí proletět se elektronickými i akustickými díly zakladatatele minimalismu, který je aktivní už přes padesát let"),
					}),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("http://prehravac.rozhlas.cz/audio/3421320/embed"),
					λ.NewStr("only_matching"): λ.True,
				}),
			)
			RozhlasIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒaudio_id    λ.Object
						ϒdescription λ.Object
						ϒduration    λ.Object
						ϒself        = λargs[0]
						ϒtitle       λ.Object
						ϒurl         = λargs[1]
						ϒwebpage     λ.Object
					)
					ϒaudio_id = λ.Cal(λ.GetAttr(ϒself, "_match_id", nil), ϒurl)
					ϒwebpage = λ.Cal(λ.GetAttr(ϒself, "_download_webpage", nil), λ.Mod(λ.NewStr("http://prehravac.rozhlas.cz/audio/%s"), ϒaudio_id), ϒaudio_id)
					ϒtitle = func() λ.Object {
						if λv := λ.Call(λ.GetAttr(ϒself, "_html_search_regex", nil), λ.NewArgs(
							λ.NewStr("<h3>(.+?)</h3>\\s*<p[^>]*>.*?</p>\\s*<div[^>]+id=[\"\\']player-track"),
							ϒwebpage,
							λ.NewStr("title"),
						), λ.KWArgs{
							{Name: "default", Value: λ.None},
						}); λ.IsTrue(λv) {
							return λv
						} else {
							return λ.Cal(ϒremove_start, λ.Cal(λ.GetAttr(ϒself, "_og_search_title", nil), ϒwebpage), λ.NewStr("Radio Wave - "))
						}
					}()
					ϒdescription = λ.Call(λ.GetAttr(ϒself, "_html_search_regex", nil), λ.NewArgs(
						λ.NewStr("<p[^>]+title=([\"\\'])(?P<url>(?:(?!\\1).)+)\\1[^>]*>.*?</p>\\s*<div[^>]+id=[\"\\']player-track"),
						ϒwebpage,
						λ.NewStr("description"),
					), λ.KWArgs{
						{Name: "fatal", Value: λ.False},
						{Name: "group", Value: λ.NewStr("url")},
					})
					ϒduration = λ.Cal(ϒint_or_none, λ.Call(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewArgs(
						λ.NewStr("data-duration=[\"\\'](\\d+)"),
						ϒwebpage,
						λ.NewStr("duration"),
					), λ.KWArgs{
						{Name: "default", Value: λ.None},
					}))
					return λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          ϒaudio_id,
						λ.NewStr("url"):         λ.Mod(λ.NewStr("http://media.rozhlas.cz/_audio/%s.mp3"), ϒaudio_id),
						λ.NewStr("title"):       ϒtitle,
						λ.NewStr("description"): ϒdescription,
						λ.NewStr("duration"):    ϒduration,
						λ.NewStr("vcodec"):      λ.NewStr("none"),
					})
				})
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_TESTS"):        RozhlasIE__TESTS,
				λ.NewStr("_VALID_URL"):    RozhlasIE__VALID_URL,
				λ.NewStr("_real_extract"): RozhlasIE__real_extract,
			})
		}())
	})
}
