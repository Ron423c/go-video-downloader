// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * tastytrade/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/tastytrade.py
 */

package tastytrade

import (
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωooyala "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/ooyala"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	InfoExtractor λ.Object
	OoyalaIE      λ.Object
	TastyTradeIE  λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		OoyalaIE = Ωooyala.OoyalaIE
		TastyTradeIE = λ.Cal(λ.TypeType, λ.NewStr("TastyTradeIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				TastyTradeIE__TESTS        λ.Object
				TastyTradeIE__VALID_URL    λ.Object
				TastyTradeIE__real_extract λ.Object
			)
			TastyTradeIE__VALID_URL = λ.NewStr("https?://(?:www\\.)?tastytrade\\.com/tt/shows/[^/]+/episodes/(?P<id>[^/?#&]+)")
			TastyTradeIE__TESTS = λ.NewList(
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("https://www.tastytrade.com/tt/shows/market-measures/episodes/correlation-in-short-volatility-06-28-2017"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("F3bnlzbToeI6pLEfRyrlfooIILUjz4nM"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("A History of Teaming"),
						λ.NewStr("description"): λ.NewStr("md5:2a9033db8da81f2edffa4c99888140b3"),
						λ.NewStr("duration"):    λ.NewFloat(422.255),
					}),
					λ.NewStr("params"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("skip_download"): λ.True,
					}),
					λ.NewStr("add_ie"): λ.NewList(λ.NewStr("Ooyala")),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("https://www.tastytrade.com/tt/shows/daily-dose/episodes/daily-dose-06-30-2017"),
					λ.NewStr("only_matching"): λ.True,
				}),
			)
			TastyTradeIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒdisplay_id  λ.Object
						ϒinfo        λ.Object
						ϒooyala_code λ.Object
						ϒself        = λargs[0]
						ϒurl         = λargs[1]
						ϒwebpage     λ.Object
					)
					ϒdisplay_id = λ.Cal(λ.GetAttr(ϒself, "_match_id", nil), ϒurl)
					ϒwebpage = λ.Cal(λ.GetAttr(ϒself, "_download_webpage", nil), ϒurl, ϒdisplay_id)
					ϒooyala_code = λ.Call(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewArgs(
						λ.NewStr("data-media-id=([\"\\'])(?P<code>(?:(?!\\1).)+)\\1"),
						ϒwebpage,
						λ.NewStr("ooyala code"),
					), λ.KWArgs{
						{Name: "group", Value: λ.NewStr("code")},
					})
					ϒinfo = λ.Call(λ.GetAttr(ϒself, "_search_json_ld", nil), λ.NewArgs(
						ϒwebpage,
						ϒdisplay_id,
					), λ.KWArgs{
						{Name: "fatal", Value: λ.False},
					})
					λ.Cal(λ.GetAttr(ϒinfo, "update", nil), λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("_type"):      λ.NewStr("url_transparent"),
						λ.NewStr("ie_key"):     λ.Cal(λ.GetAttr(OoyalaIE, "ie_key", nil)),
						λ.NewStr("url"):        λ.Mod(λ.NewStr("ooyala:%s"), ϒooyala_code),
						λ.NewStr("display_id"): ϒdisplay_id,
					}))
					return ϒinfo
				})
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_TESTS"):        TastyTradeIE__TESTS,
				λ.NewStr("_VALID_URL"):    TastyTradeIE__VALID_URL,
				λ.NewStr("_real_extract"): TastyTradeIE__real_extract,
			})
		}())
	})
}
