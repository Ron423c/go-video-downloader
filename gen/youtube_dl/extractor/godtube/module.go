// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2018 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * godtube/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/godtube.py
 */

package godtube

import (
	Ωre "github.com/tenta-browser/go-video-downloader/gen/re"
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	GodTubeIE       λ.Object
	InfoExtractor   λ.Object
	ϒparse_duration λ.Object
	ϒparse_iso8601  λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ϒparse_duration = Ωutils.ϒparse_duration
		ϒparse_iso8601 = Ωutils.ϒparse_iso8601
		GodTubeIE = λ.Cal(λ.TypeType, λ.NewStr("GodTubeIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				GodTubeIE__TESTS        λ.Object
				GodTubeIE__VALID_URL    λ.Object
				GodTubeIE__real_extract λ.Object
			)
			GodTubeIE__VALID_URL = λ.NewStr("https?://(?:www\\.)?godtube\\.com/watch/\\?v=(?P<id>[\\da-zA-Z]+)")
			GodTubeIE__TESTS = λ.NewList(λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("url"): λ.NewStr("https://www.godtube.com/watch/?v=0C0CNNNU"),
				λ.NewStr("md5"): λ.NewStr("77108c1e4ab58f48031101a1a2119789"),
				λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("id"):          λ.NewStr("0C0CNNNU"),
					λ.NewStr("ext"):         λ.NewStr("mp4"),
					λ.NewStr("title"):       λ.NewStr("Woman at the well."),
					λ.NewStr("duration"):    λ.NewInt(159),
					λ.NewStr("timestamp"):   λ.NewInt(1205712000),
					λ.NewStr("uploader"):    λ.NewStr("beverlybmusic"),
					λ.NewStr("upload_date"): λ.NewStr("20080317"),
					λ.NewStr("thumbnail"):   λ.NewStr("re:^https?://.*\\.jpg$"),
				}),
			}))
			GodTubeIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒconfig    λ.Object
						ϒduration  λ.Object
						ϒmedia     λ.Object
						ϒmobj      λ.Object
						ϒself      = λargs[0]
						ϒthumbnail λ.Object
						ϒtimestamp λ.Object
						ϒtitle     λ.Object
						ϒuploader  λ.Object
						ϒurl       = λargs[1]
						ϒvideo_id  λ.Object
						ϒvideo_url λ.Object
					)
					ϒmobj = λ.Cal(Ωre.ϒmatch, λ.GetAttr(ϒself, "_VALID_URL", nil), ϒurl)
					ϒvideo_id = λ.Cal(λ.GetAttr(ϒmobj, "group", nil), λ.NewStr("id"))
					ϒconfig = λ.Cal(λ.GetAttr(ϒself, "_download_xml", nil), λ.Mod(λ.NewStr("http://www.godtube.com/resource/mediaplayer/%s.xml"), λ.Cal(λ.GetAttr(ϒvideo_id, "lower", nil))), ϒvideo_id, λ.NewStr("Downloading player config XML"))
					ϒvideo_url = λ.GetAttr(λ.Cal(λ.GetAttr(ϒconfig, "find", nil), λ.NewStr("file")), "text", nil)
					ϒuploader = λ.GetAttr(λ.Cal(λ.GetAttr(ϒconfig, "find", nil), λ.NewStr("author")), "text", nil)
					ϒtimestamp = λ.Cal(ϒparse_iso8601, λ.GetAttr(λ.Cal(λ.GetAttr(ϒconfig, "find", nil), λ.NewStr("date")), "text", nil))
					ϒduration = λ.Cal(ϒparse_duration, λ.GetAttr(λ.Cal(λ.GetAttr(ϒconfig, "find", nil), λ.NewStr("duration")), "text", nil))
					ϒthumbnail = λ.GetAttr(λ.Cal(λ.GetAttr(ϒconfig, "find", nil), λ.NewStr("image")), "text", nil)
					ϒmedia = λ.Cal(λ.GetAttr(ϒself, "_download_xml", nil), λ.Mod(λ.NewStr("http://www.godtube.com/media/xml/?v=%s"), ϒvideo_id), ϒvideo_id, λ.NewStr("Downloading media XML"))
					ϒtitle = λ.GetAttr(λ.Cal(λ.GetAttr(ϒmedia, "find", nil), λ.NewStr("title")), "text", nil)
					return λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):        ϒvideo_id,
						λ.NewStr("url"):       ϒvideo_url,
						λ.NewStr("title"):     ϒtitle,
						λ.NewStr("thumbnail"): ϒthumbnail,
						λ.NewStr("timestamp"): ϒtimestamp,
						λ.NewStr("uploader"):  ϒuploader,
						λ.NewStr("duration"):  ϒduration,
					})
				})
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_TESTS"):        GodTubeIE__TESTS,
				λ.NewStr("_VALID_URL"):    GodTubeIE__VALID_URL,
				λ.NewStr("_real_extract"): GodTubeIE__real_extract,
			})
		}())
	})
}
