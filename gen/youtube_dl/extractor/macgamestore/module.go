// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * macgamestore/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/macgamestore.py
 */

package macgamestore

import (
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	ExtractorError λ.Object
	InfoExtractor  λ.Object
	MacGameStoreIE λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ExtractorError = Ωutils.ExtractorError
		MacGameStoreIE = λ.Cal(λ.TypeType, λ.NewStr("MacGameStoreIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				MacGameStoreIE_IE_NAME       λ.Object
				MacGameStoreIE__TEST         λ.Object
				MacGameStoreIE__VALID_URL    λ.Object
				MacGameStoreIE__real_extract λ.Object
			)
			MacGameStoreIE_IE_NAME = λ.NewStr("macgamestore")
			MacGameStoreIE__VALID_URL = λ.NewStr("https?://(?:www\\.)?macgamestore\\.com/mediaviewer\\.php\\?trailer=(?P<id>\\d+)")
			MacGameStoreIE__TEST = λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("url"): λ.NewStr("http://www.macgamestore.com/mediaviewer.php?trailer=2450"),
				λ.NewStr("md5"): λ.NewStr("8649b8ea684b6666b4c5be736ecddc61"),
				λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("id"):    λ.NewStr("2450"),
					λ.NewStr("ext"):   λ.NewStr("m4v"),
					λ.NewStr("title"): λ.NewStr("Crow"),
				}),
			})
			MacGameStoreIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒself        = λargs[0]
						ϒurl         = λargs[1]
						ϒvideo_id    λ.Object
						ϒvideo_title λ.Object
						ϒvideo_url   λ.Object
						ϒwebpage     λ.Object
					)
					ϒvideo_id = λ.Cal(λ.GetAttr(ϒself, "_match_id", nil), ϒurl)
					ϒwebpage = λ.Cal(λ.GetAttr(ϒself, "_download_webpage", nil), ϒurl, ϒvideo_id, λ.NewStr("Downloading trailer page"))
					if λ.IsTrue(λ.NewBool(λ.Contains(ϒwebpage, λ.NewStr(">Missing Media<")))) {
						panic(λ.Raise(λ.Call(ExtractorError, λ.NewArgs(λ.Mod(λ.NewStr("Trailer %s does not exist"), ϒvideo_id)), λ.KWArgs{
							{Name: "expected", Value: λ.True},
						})))
					}
					ϒvideo_title = λ.Cal(λ.GetAttr(ϒself, "_html_search_regex", nil), λ.NewStr("<title>MacGameStore: (.*?) Trailer</title>"), ϒwebpage, λ.NewStr("title"))
					ϒvideo_url = λ.Cal(λ.GetAttr(ϒself, "_html_search_regex", nil), λ.NewStr("(?s)<div\\s+id=\"video-player\".*?href=\"([^\"]+)\"\\s*>"), ϒwebpage, λ.NewStr("video URL"))
					return λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):    ϒvideo_id,
						λ.NewStr("url"):   ϒvideo_url,
						λ.NewStr("title"): ϒvideo_title,
					})
				})
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("IE_NAME"):       MacGameStoreIE_IE_NAME,
				λ.NewStr("_TEST"):         MacGameStoreIE__TEST,
				λ.NewStr("_VALID_URL"):    MacGameStoreIE__VALID_URL,
				λ.NewStr("_real_extract"): MacGameStoreIE__real_extract,
			})
		}())
	})
}
