// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2018 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * charlierose/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/charlierose.py
 */

package charlierose

import (
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	CharlieRoseIE λ.Object
	InfoExtractor λ.Object
	ϒremove_end   λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ϒremove_end = Ωutils.ϒremove_end
		CharlieRoseIE = λ.Cal(λ.TypeType, λ.NewStr("CharlieRoseIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				CharlieRoseIE__PLAYER_BASE  λ.Object
				CharlieRoseIE__TESTS        λ.Object
				CharlieRoseIE__VALID_URL    λ.Object
				CharlieRoseIE__real_extract λ.Object
			)
			CharlieRoseIE__VALID_URL = λ.NewStr("https?://(?:www\\.)?charlierose\\.com/(?:video|episode)(?:s|/player)/(?P<id>\\d+)")
			CharlieRoseIE__TESTS = λ.NewList(
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("https://charlierose.com/videos/27996"),
					λ.NewStr("md5"): λ.NewStr("fda41d49e67d4ce7c2411fd2c4702e09"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("27996"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("Remembering Zaha Hadid"),
						λ.NewStr("thumbnail"):   λ.NewStr("re:^https?://.*\\.jpg\\?\\d+"),
						λ.NewStr("description"): λ.NewStr("We revisit past conversations with Zaha Hadid, in memory of the world renowned Iraqi architect."),
						λ.NewStr("subtitles"): λ.NewDictWithTable(map[λ.Object]λ.Object{
							λ.NewStr("en"): λ.NewList(λ.NewDictWithTable(map[λ.Object]λ.Object{
								λ.NewStr("ext"): λ.NewStr("vtt"),
							})),
						}),
					}),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("https://charlierose.com/videos/27996"),
					λ.NewStr("only_matching"): λ.True,
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("https://charlierose.com/episodes/30887?autoplay=true"),
					λ.NewStr("only_matching"): λ.True,
				}),
			)
			CharlieRoseIE__PLAYER_BASE = λ.NewStr("https://charlierose.com/video/player/%s")
			CharlieRoseIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒinfo_dict λ.Object
						ϒself      = λargs[0]
						ϒtitle     λ.Object
						ϒurl       = λargs[1]
						ϒvideo_id  λ.Object
						ϒwebpage   λ.Object
					)
					ϒvideo_id = λ.Cal(λ.GetAttr(ϒself, "_match_id", nil), ϒurl)
					ϒwebpage = λ.Cal(λ.GetAttr(ϒself, "_download_webpage", nil), λ.Mod(λ.GetAttr(ϒself, "_PLAYER_BASE", nil), ϒvideo_id), ϒvideo_id)
					ϒtitle = λ.Cal(ϒremove_end, λ.Cal(λ.GetAttr(ϒself, "_og_search_title", nil), ϒwebpage), λ.NewStr(" - Charlie Rose"))
					ϒinfo_dict = λ.GetItem(λ.Call(λ.GetAttr(ϒself, "_parse_html5_media_entries", nil), λ.NewArgs(
						λ.Mod(λ.GetAttr(ϒself, "_PLAYER_BASE", nil), ϒvideo_id),
						ϒwebpage,
						ϒvideo_id,
					), λ.KWArgs{
						{Name: "m3u8_entry_protocol", Value: λ.NewStr("m3u8_native")},
					}), λ.NewInt(0))
					λ.Cal(λ.GetAttr(ϒself, "_sort_formats", nil), λ.GetItem(ϒinfo_dict, λ.NewStr("formats")))
					λ.Cal(λ.GetAttr(ϒself, "_remove_duplicate_formats", nil), λ.GetItem(ϒinfo_dict, λ.NewStr("formats")))
					λ.Cal(λ.GetAttr(ϒinfo_dict, "update", nil), λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          ϒvideo_id,
						λ.NewStr("title"):       ϒtitle,
						λ.NewStr("thumbnail"):   λ.Cal(λ.GetAttr(ϒself, "_og_search_thumbnail", nil), ϒwebpage),
						λ.NewStr("description"): λ.Cal(λ.GetAttr(ϒself, "_og_search_description", nil), ϒwebpage),
					}))
					return ϒinfo_dict
				})
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_PLAYER_BASE"):  CharlieRoseIE__PLAYER_BASE,
				λ.NewStr("_TESTS"):        CharlieRoseIE__TESTS,
				λ.NewStr("_VALID_URL"):    CharlieRoseIE__VALID_URL,
				λ.NewStr("_real_extract"): CharlieRoseIE__real_extract,
			})
		}())
	})
}
