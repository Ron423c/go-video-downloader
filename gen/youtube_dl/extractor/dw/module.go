// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2018 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * dw/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/dw.py
 */

package dw

import (
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	DWArticleIE      λ.Object
	DWIE             λ.Object
	InfoExtractor    λ.Object
	ϒint_or_none     λ.Object
	ϒunified_strdate λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ϒint_or_none = Ωutils.ϒint_or_none
		ϒunified_strdate = Ωutils.ϒunified_strdate
		DWIE = λ.Cal(λ.TypeType, λ.NewStr("DWIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				DWIE_IE_NAME       λ.Object
				DWIE__TESTS        λ.Object
				DWIE__VALID_URL    λ.Object
				DWIE__real_extract λ.Object
			)
			DWIE_IE_NAME = λ.NewStr("dw")
			DWIE__VALID_URL = λ.NewStr("https?://(?:www\\.)?dw\\.com/(?:[^/]+/)+(?:av|e)-(?P<id>\\d+)")
			DWIE__TESTS = λ.NewList(
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("http://www.dw.com/en/intelligent-light/av-19112290"),
					λ.NewStr("md5"): λ.NewStr("7372046e1815c5a534b43f3c3c36e6e9"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("19112290"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("Intelligent light"),
						λ.NewStr("description"): λ.NewStr("md5:90e00d5881719f2a6a5827cb74985af1"),
						λ.NewStr("upload_date"): λ.NewStr("20160311"),
					}),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("http://www.dw.com/en/worldlink-my-business/av-19111941"),
					λ.NewStr("md5"): λ.NewStr("2814c9a1321c3a51f8a7aeb067a360dd"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("19111941"),
						λ.NewStr("ext"):         λ.NewStr("mp3"),
						λ.NewStr("title"):       λ.NewStr("WorldLink: My business"),
						λ.NewStr("description"): λ.NewStr("md5:bc9ca6e4e063361e21c920c53af12405"),
						λ.NewStr("upload_date"): λ.NewStr("20160311"),
					}),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("http://www.dw.com/en/documentaries-welcome-to-the-90s-2016-05-21/e-19220158-9798"),
					λ.NewStr("md5"): λ.NewStr("56b6214ef463bfb9a3b71aeb886f3cf1"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("19274438"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("Welcome to the 90s – Hip Hop"),
						λ.NewStr("description"): λ.NewStr("Welcome to the 90s - The Golden Decade of Hip Hop"),
						λ.NewStr("upload_date"): λ.NewStr("20160521"),
					}),
					λ.NewStr("skip"): λ.NewStr("Video removed"),
				}),
			)
			DWIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒformats       λ.Object
						ϒhidden_inputs λ.Object
						ϒmedia_id      λ.Object
						ϒself          = λargs[0]
						ϒtitle         λ.Object
						ϒupload_date   λ.Object
						ϒurl           = λargs[1]
						ϒwebpage       λ.Object
					)
					ϒmedia_id = λ.Cal(λ.GetAttr(ϒself, "_match_id", nil), ϒurl)
					ϒwebpage = λ.Cal(λ.GetAttr(ϒself, "_download_webpage", nil), ϒurl, ϒmedia_id)
					ϒhidden_inputs = λ.Cal(λ.GetAttr(ϒself, "_hidden_inputs", nil), ϒwebpage)
					ϒtitle = λ.GetItem(ϒhidden_inputs, λ.NewStr("media_title"))
					ϒmedia_id = func() λ.Object {
						if λv := λ.Cal(λ.GetAttr(ϒhidden_inputs, "get", nil), λ.NewStr("media_id")); λ.IsTrue(λv) {
							return λv
						} else {
							return ϒmedia_id
						}
					}()
					if λ.IsTrue(func() λ.Object {
						if λv := λ.Eq(λ.Cal(λ.GetAttr(ϒhidden_inputs, "get", nil), λ.NewStr("player_type")), λ.NewStr("video")); !λ.IsTrue(λv) {
							return λv
						} else {
							return λ.Eq(λ.Cal(λ.GetAttr(ϒhidden_inputs, "get", nil), λ.NewStr("stream_file")), λ.NewStr("1"))
						}
					}()) {
						ϒformats = λ.Call(λ.GetAttr(ϒself, "_extract_smil_formats", nil), λ.NewArgs(
							λ.Mod(λ.NewStr("http://www.dw.com/smil/v-%s"), ϒmedia_id),
							ϒmedia_id,
						), λ.KWArgs{
							{Name: "transform_source", Value: λ.NewFunction("<lambda>",
								[]λ.Param{
									{Name: "s"},
								},
								0, false, false,
								func(λargs []λ.Object) λ.Object {
									var (
										ϒs = λargs[0]
									)
									return λ.Cal(λ.GetAttr(ϒs, "replace", nil), λ.NewStr("rtmp://tv-od.dw.de/flash/"), λ.NewStr("http://tv-download.dw.de/dwtv_video/flv/"))
								})},
						})
						λ.Cal(λ.GetAttr(ϒself, "_sort_formats", nil), ϒformats)
					} else {
						ϒformats = λ.NewList(λ.NewDictWithTable(map[λ.Object]λ.Object{
							λ.NewStr("url"): λ.GetItem(ϒhidden_inputs, λ.NewStr("file_name")),
						}))
					}
					ϒupload_date = λ.Cal(λ.GetAttr(ϒhidden_inputs, "get", nil), λ.NewStr("display_date"))
					if λ.IsTrue(λ.NewBool(!λ.IsTrue(ϒupload_date))) {
						ϒupload_date = λ.Call(λ.GetAttr(ϒself, "_html_search_regex", nil), λ.NewArgs(
							λ.NewStr("<span[^>]+class=\"date\">([0-9.]+)\\s*\\|"),
							ϒwebpage,
							λ.NewStr("upload date"),
						), λ.KWArgs{
							{Name: "default", Value: λ.None},
						})
						ϒupload_date = λ.Cal(ϒunified_strdate, ϒupload_date)
					}
					return λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          ϒmedia_id,
						λ.NewStr("title"):       ϒtitle,
						λ.NewStr("description"): λ.Cal(λ.GetAttr(ϒself, "_og_search_description", nil), ϒwebpage),
						λ.NewStr("thumbnail"):   λ.Cal(λ.GetAttr(ϒhidden_inputs, "get", nil), λ.NewStr("preview_image")),
						λ.NewStr("duration"):    λ.Cal(ϒint_or_none, λ.Cal(λ.GetAttr(ϒhidden_inputs, "get", nil), λ.NewStr("file_duration"))),
						λ.NewStr("upload_date"): ϒupload_date,
						λ.NewStr("formats"):     ϒformats,
					})
				})
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("IE_NAME"):       DWIE_IE_NAME,
				λ.NewStr("_TESTS"):        DWIE__TESTS,
				λ.NewStr("_VALID_URL"):    DWIE__VALID_URL,
				λ.NewStr("_real_extract"): DWIE__real_extract,
			})
		}())
		DWArticleIE = λ.Cal(λ.TypeType, λ.NewStr("DWArticleIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				DWArticleIE__VALID_URL λ.Object
			)
			DWArticleIE__VALID_URL = λ.NewStr("https?://(?:www\\.)?dw\\.com/(?:[^/]+/)+a-(?P<id>\\d+)")
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_VALID_URL"): DWArticleIE__VALID_URL,
			})
		}())
	})
}
