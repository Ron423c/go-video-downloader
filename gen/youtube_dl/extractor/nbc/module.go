// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * nbc/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/nbc.py
 */

package nbc

import (
	Ωcompat "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/compat"
	Ωadobepass "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/adobepass"
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωtheplatform "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/theplatform"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	AdobePassIE                  λ.Object
	CSNNEIE                      λ.Object
	InfoExtractor                λ.Object
	NBCIE                        λ.Object
	NBCNewsIE                    λ.Object
	NBCOlympicsIE                λ.Object
	NBCOlympicsStreamIE          λ.Object
	NBCSportsIE                  λ.Object
	NBCSportsStreamIE            λ.Object
	NBCSportsVPlayerIE           λ.Object
	ThePlatformIE                λ.Object
	ϒcompat_urllib_parse_unquote λ.Object
	ϒint_or_none                 λ.Object
	ϒjs_to_json                  λ.Object
	ϒparse_duration              λ.Object
	ϒsmuggle_url                 λ.Object
	ϒtry_get                     λ.Object
	ϒunified_timestamp           λ.Object
	ϒupdate_url_query            λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ThePlatformIE = Ωtheplatform.ThePlatformIE
		AdobePassIE = Ωadobepass.AdobePassIE
		ϒcompat_urllib_parse_unquote = Ωcompat.ϒcompat_urllib_parse_unquote
		ϒint_or_none = Ωutils.ϒint_or_none
		ϒjs_to_json = Ωutils.ϒjs_to_json
		ϒparse_duration = Ωutils.ϒparse_duration
		ϒsmuggle_url = Ωutils.ϒsmuggle_url
		ϒtry_get = Ωutils.ϒtry_get
		ϒunified_timestamp = Ωutils.ϒunified_timestamp
		ϒupdate_url_query = Ωutils.ϒupdate_url_query
		NBCIE = λ.Cal(λ.TypeType, λ.NewStr("NBCIE"), λ.NewTuple(AdobePassIE), func() λ.Dict {
			var (
				NBCIE__VALID_URL λ.Object
			)
			NBCIE__VALID_URL = λ.NewStr("https?(?P<permalink>://(?:www\\.)?nbc\\.com/(?:classic-tv/)?[^/]+/video/[^/]+/(?P<id>n?\\d+))")
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_VALID_URL"): NBCIE__VALID_URL,
			})
		}())
		NBCSportsVPlayerIE = λ.Cal(λ.TypeType, λ.NewStr("NBCSportsVPlayerIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				NBCSportsVPlayerIE__TESTS        λ.Object
				NBCSportsVPlayerIE__VALID_URL    λ.Object
				NBCSportsVPlayerIE__real_extract λ.Object
			)
			NBCSportsVPlayerIE__VALID_URL = λ.NewStr("https?://vplayer\\.nbcsports\\.com/(?:[^/]+/)+(?P<id>[0-9a-zA-Z_]+)")
			NBCSportsVPlayerIE__TESTS = λ.NewList(
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("https://vplayer.nbcsports.com/p/BxmELC/nbcsports_embed/select/9CsDKds0kvHI"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("9CsDKds0kvHI"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("description"): λ.NewStr("md5:df390f70a9ba7c95ff1daace988f0d8d"),
						λ.NewStr("title"):       λ.NewStr("Tyler Kalinoski hits buzzer-beater to lift Davidson"),
						λ.NewStr("timestamp"):   λ.NewInt(1426270238),
						λ.NewStr("upload_date"): λ.NewStr("20150313"),
						λ.NewStr("uploader"):    λ.NewStr("NBCU-SPORTS"),
					}),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("https://vplayer.nbcsports.com/p/BxmELC/nbcsports_embed/select/media/_hqLjQ95yx8Z"),
					λ.NewStr("only_matching"): λ.True,
				}),
			)
			NBCSportsVPlayerIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒself            = λargs[0]
						ϒtheplatform_url λ.Object
						ϒurl             = λargs[1]
						ϒvideo_id        λ.Object
						ϒwebpage         λ.Object
					)
					ϒvideo_id = λ.Cal(λ.GetAttr(ϒself, "_match_id", nil), ϒurl)
					ϒwebpage = λ.Cal(λ.GetAttr(ϒself, "_download_webpage", nil), ϒurl, ϒvideo_id)
					ϒtheplatform_url = λ.Cal(λ.GetAttr(λ.Cal(λ.GetAttr(ϒself, "_og_search_video_url", nil), ϒwebpage), "replace", nil), λ.NewStr("vplayer.nbcsports.com"), λ.NewStr("player.theplatform.com"))
					return λ.Cal(λ.GetAttr(ϒself, "url_result", nil), ϒtheplatform_url, λ.NewStr("ThePlatform"))
				})
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_TESTS"):        NBCSportsVPlayerIE__TESTS,
				λ.NewStr("_VALID_URL"):    NBCSportsVPlayerIE__VALID_URL,
				λ.NewStr("_real_extract"): NBCSportsVPlayerIE__real_extract,
			})
		}())
		NBCSportsIE = λ.Cal(λ.TypeType, λ.NewStr("NBCSportsIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				NBCSportsIE__VALID_URL λ.Object
			)
			NBCSportsIE__VALID_URL = λ.NewStr("https?://(?:www\\.)?nbcsports\\.com//?(?:[^/]+/)+(?P<id>[0-9a-z-]+)")
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_VALID_URL"): NBCSportsIE__VALID_URL,
			})
		}())
		NBCSportsStreamIE = λ.Cal(λ.TypeType, λ.NewStr("NBCSportsStreamIE"), λ.NewTuple(AdobePassIE), func() λ.Dict {
			var (
				NBCSportsStreamIE__VALID_URL λ.Object
			)
			NBCSportsStreamIE__VALID_URL = λ.NewStr("https?://stream\\.nbcsports\\.com/.+?\\bpid=(?P<id>\\d+)")
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_VALID_URL"): NBCSportsStreamIE__VALID_URL,
			})
		}())
		CSNNEIE = λ.Cal(λ.TypeType, λ.NewStr("CSNNEIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				CSNNEIE__TEST         λ.Object
				CSNNEIE__VALID_URL    λ.Object
				CSNNEIE__real_extract λ.Object
			)
			CSNNEIE__VALID_URL = λ.NewStr("https?://(?:www\\.)?csnne\\.com/video/(?P<id>[0-9a-z-]+)")
			CSNNEIE__TEST = λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("url"): λ.NewStr("http://www.csnne.com/video/snc-evening-update-wright-named-red-sox-no-5-starter"),
				λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("id"):          λ.NewStr("yvBLLUgQ8WU0"),
					λ.NewStr("ext"):         λ.NewStr("mp4"),
					λ.NewStr("title"):       λ.NewStr("SNC evening update: Wright named Red Sox' No. 5 starter."),
					λ.NewStr("description"): λ.NewStr("md5:1753cfee40d9352b19b4c9b3e589b9e3"),
					λ.NewStr("timestamp"):   λ.NewInt(1459369979),
					λ.NewStr("upload_date"): λ.NewStr("20160330"),
					λ.NewStr("uploader"):    λ.NewStr("NBCU-SPORTS"),
				}),
			})
			CSNNEIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒdisplay_id λ.Object
						ϒself       = λargs[0]
						ϒurl        = λargs[1]
						ϒwebpage    λ.Object
					)
					ϒdisplay_id = λ.Cal(λ.GetAttr(ϒself, "_match_id", nil), ϒurl)
					ϒwebpage = λ.Cal(λ.GetAttr(ϒself, "_download_webpage", nil), ϒurl, ϒdisplay_id)
					return λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("_type"):      λ.NewStr("url_transparent"),
						λ.NewStr("ie_key"):     λ.NewStr("ThePlatform"),
						λ.NewStr("url"):        λ.Cal(λ.GetAttr(ϒself, "_html_search_meta", nil), λ.NewStr("twitter:player:stream"), ϒwebpage),
						λ.NewStr("display_id"): ϒdisplay_id,
					})
				})
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_TEST"):         CSNNEIE__TEST,
				λ.NewStr("_VALID_URL"):    CSNNEIE__VALID_URL,
				λ.NewStr("_real_extract"): CSNNEIE__real_extract,
			})
		}())
		NBCNewsIE = λ.Cal(λ.TypeType, λ.NewStr("NBCNewsIE"), λ.NewTuple(ThePlatformIE), func() λ.Dict {
			var (
				NBCNewsIE__TESTS        λ.Object
				NBCNewsIE__VALID_URL    λ.Object
				NBCNewsIE__real_extract λ.Object
			)
			NBCNewsIE__VALID_URL = λ.NewStr("(?x)https?://(?:www\\.)?(?:nbcnews|today|msnbc)\\.com/([^/]+/)*(?:.*-)?(?P<id>[^/?]+)")
			NBCNewsIE__TESTS = λ.NewList(
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("http://www.nbcnews.com/watch/nbcnews-com/how-twitter-reacted-to-the-snowden-interview-269389891880"),
					λ.NewStr("md5"): λ.NewStr("cf4bc9e6ce0130f00f545d80ecedd4bf"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("269389891880"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("How Twitter Reacted To The Snowden Interview"),
						λ.NewStr("description"): λ.NewStr("md5:65a0bd5d76fe114f3c2727aa3a81fe64"),
						λ.NewStr("timestamp"):   λ.NewInt(1401363060),
						λ.NewStr("upload_date"): λ.NewStr("20140529"),
					}),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("http://www.nbcnews.com/feature/dateline-full-episodes/full-episode-family-business-n285156"),
					λ.NewStr("md5"): λ.NewStr("fdbf39ab73a72df5896b6234ff98518a"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("529953347624"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("FULL EPISODE: Family Business"),
						λ.NewStr("description"): λ.NewStr("md5:757988edbaae9d7be1d585eb5d55cc04"),
					}),
					λ.NewStr("skip"): λ.NewStr("This page is unavailable."),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("http://www.nbcnews.com/nightly-news/video/nightly-news-with-brian-williams-full-broadcast-february-4-394064451844"),
					λ.NewStr("md5"): λ.NewStr("8eb831eca25bfa7d25ddd83e85946548"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("394064451844"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("Nightly News with Brian Williams Full Broadcast (February 4)"),
						λ.NewStr("description"): λ.NewStr("md5:1c10c1eccbe84a26e5debb4381e2d3c5"),
						λ.NewStr("timestamp"):   λ.NewInt(1423104900),
						λ.NewStr("upload_date"): λ.NewStr("20150205"),
					}),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("http://www.nbcnews.com/business/autos/volkswagen-11-million-vehicles-could-have-suspect-software-emissions-scandal-n431456"),
					λ.NewStr("md5"): λ.NewStr("4a8c4cec9e1ded51060bdda36ff0a5c0"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("n431456"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("Volkswagen U.S. Chief:  We 'Totally Screwed Up'"),
						λ.NewStr("description"): λ.NewStr("md5:d22d1281a24f22ea0880741bb4dd6301"),
						λ.NewStr("upload_date"): λ.NewStr("20150922"),
						λ.NewStr("timestamp"):   λ.NewInt(1442917800),
					}),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("http://www.today.com/video/see-the-aurora-borealis-from-space-in-stunning-new-nasa-video-669831235788"),
					λ.NewStr("md5"): λ.NewStr("118d7ca3f0bea6534f119c68ef539f71"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("669831235788"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("See the aurora borealis from space in stunning new NASA video"),
						λ.NewStr("description"): λ.NewStr("md5:74752b7358afb99939c5f8bb2d1d04b1"),
						λ.NewStr("upload_date"): λ.NewStr("20160420"),
						λ.NewStr("timestamp"):   λ.NewInt(1461152093),
					}),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("http://www.msnbc.com/all-in-with-chris-hayes/watch/the-chaotic-gop-immigration-vote-314487875924"),
					λ.NewStr("md5"): λ.NewStr("6d236bf4f3dddc226633ce6e2c3f814d"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("314487875924"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("The chaotic GOP immigration vote"),
						λ.NewStr("description"): λ.NewStr("The Republican House votes on a border bill that has no chance of getting through the Senate or signed by the President and is drawing criticism from all sides."),
						λ.NewStr("thumbnail"):   λ.NewStr("re:^https?://.*\\.jpg$"),
						λ.NewStr("timestamp"):   λ.NewInt(1406937606),
						λ.NewStr("upload_date"): λ.NewStr("20140802"),
					}),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("http://www.nbcnews.com/watch/dateline/full-episode--deadly-betrayal-386250819952"),
					λ.NewStr("only_matching"): λ.True,
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("http://www.nbcnews.com/widget/video-embed/701714499682"),
					λ.NewStr("only_matching"): λ.True,
				}),
			)
			NBCNewsIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒcc_url            λ.Object
						ϒclosed_captioning λ.Object
						ϒdata              λ.Object
						ϒformat_id         λ.Object
						ϒformats           λ.Object
						ϒpublic_url        λ.Object
						ϒself              = λargs[0]
						ϒsubtitles         λ.Object
						ϒtbr               λ.Object
						ϒtitle             λ.Object
						ϒurl               = λargs[1]
						ϒva                λ.Object
						ϒvideo_data        λ.Object
						ϒvideo_id          λ.Object
						ϒwebpage           λ.Object
						τmp0               λ.Object
						τmp1               λ.Object
						τmp2               λ.Object
					)
					ϒvideo_id = λ.Cal(λ.GetAttr(ϒself, "_match_id", nil), ϒurl)
					ϒwebpage = λ.Cal(λ.GetAttr(ϒself, "_download_webpage", nil), ϒurl, ϒvideo_id)
					ϒdata = λ.Cal(λ.GetAttr(ϒself, "_parse_json", nil), λ.Cal(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewStr("window\\.__data\\s*=\\s*({.+});"), ϒwebpage, λ.NewStr("bootstrap json")), ϒvideo_id, ϒjs_to_json)
					ϒvideo_data = λ.Cal(ϒtry_get, ϒdata, λ.NewFunction("<lambda>",
						[]λ.Param{
							{Name: "x"},
						},
						0, false, false,
						func(λargs []λ.Object) λ.Object {
							var (
								ϒx = λargs[0]
							)
							return λ.GetItem(λ.GetItem(ϒx, λ.NewStr("video")), λ.NewStr("current"))
						}), λ.DictType)
					if λ.IsTrue(λ.NewBool(!λ.IsTrue(ϒvideo_data))) {
						ϒvideo_data = λ.GetItem(λ.GetItem(λ.GetItem(λ.GetItem(λ.GetItem(ϒdata, λ.NewStr("article")), λ.NewStr("content")), λ.NewInt(0)), λ.NewStr("primaryMedia")), λ.NewStr("video"))
					}
					ϒtitle = λ.GetItem(λ.GetItem(ϒvideo_data, λ.NewStr("headline")), λ.NewStr("primary"))
					ϒformats = λ.NewList()
					τmp0 = λ.Cal(λ.BuiltinIter, λ.Cal(λ.GetAttr(ϒvideo_data, "get", nil), λ.NewStr("videoAssets"), λ.NewList()))
					for {
						if τmp1 = λ.NextDefault(τmp0, λ.AfterLast); τmp1 == λ.AfterLast {
							break
						}
						ϒva = τmp1
						ϒpublic_url = λ.Cal(λ.GetAttr(ϒva, "get", nil), λ.NewStr("publicUrl"))
						if λ.IsTrue(λ.NewBool(!λ.IsTrue(ϒpublic_url))) {
							continue
						}
						if λ.IsTrue(λ.NewBool(λ.Contains(ϒpublic_url, λ.NewStr("://link.theplatform.com/")))) {
							ϒpublic_url = λ.Cal(ϒupdate_url_query, ϒpublic_url, λ.NewDictWithTable(map[λ.Object]λ.Object{
								λ.NewStr("format"): λ.NewStr("redirect"),
							}))
						}
						ϒformat_id = λ.Cal(λ.GetAttr(ϒva, "get", nil), λ.NewStr("format"))
						if λ.IsTrue(λ.Eq(ϒformat_id, λ.NewStr("M3U"))) {
							λ.Cal(λ.GetAttr(ϒformats, "extend", nil), λ.Call(λ.GetAttr(ϒself, "_extract_m3u8_formats", nil), λ.NewArgs(
								ϒpublic_url,
								ϒvideo_id,
								λ.NewStr("mp4"),
								λ.NewStr("m3u8_native"),
							), λ.KWArgs{
								{Name: "m3u8_id", Value: ϒformat_id},
								{Name: "fatal", Value: λ.False},
							}))
							continue
						}
						ϒtbr = λ.Cal(ϒint_or_none, λ.Cal(λ.GetAttr(ϒva, "get", nil), λ.NewStr("bitrate")), λ.NewInt(1000))
						if λ.IsTrue(ϒtbr) {
							τmp2 = λ.IAdd(ϒformat_id, λ.Mod(λ.NewStr("-%d"), ϒtbr))
							ϒformat_id = τmp2
						}
						λ.Cal(λ.GetAttr(ϒformats, "append", nil), λ.NewDictWithTable(map[λ.Object]λ.Object{
							λ.NewStr("format_id"): ϒformat_id,
							λ.NewStr("url"):       ϒpublic_url,
							λ.NewStr("width"):     λ.Cal(ϒint_or_none, λ.Cal(λ.GetAttr(ϒva, "get", nil), λ.NewStr("width"))),
							λ.NewStr("height"):    λ.Cal(ϒint_or_none, λ.Cal(λ.GetAttr(ϒva, "get", nil), λ.NewStr("height"))),
							λ.NewStr("tbr"):       ϒtbr,
							λ.NewStr("ext"):       λ.NewStr("mp4"),
						}))
					}
					λ.Cal(λ.GetAttr(ϒself, "_sort_formats", nil), ϒformats)
					ϒsubtitles = λ.NewDictWithTable(map[λ.Object]λ.Object{})
					ϒclosed_captioning = λ.Cal(λ.GetAttr(ϒvideo_data, "get", nil), λ.NewStr("closedCaptioning"))
					if λ.IsTrue(ϒclosed_captioning) {
						τmp0 = λ.Cal(λ.BuiltinIter, λ.Cal(λ.GetAttr(ϒclosed_captioning, "values", nil)))
						for {
							if τmp1 = λ.NextDefault(τmp0, λ.AfterLast); τmp1 == λ.AfterLast {
								break
							}
							ϒcc_url = τmp1
							if λ.IsTrue(λ.NewBool(!λ.IsTrue(ϒcc_url))) {
								continue
							}
							λ.Cal(λ.GetAttr(λ.Cal(λ.GetAttr(ϒsubtitles, "setdefault", nil), λ.NewStr("en"), λ.NewList()), "append", nil), λ.NewDictWithTable(map[λ.Object]λ.Object{
								λ.NewStr("url"): ϒcc_url,
							}))
						}
					}
					return λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):    ϒvideo_id,
						λ.NewStr("title"): ϒtitle,
						λ.NewStr("description"): λ.Cal(ϒtry_get, ϒvideo_data, λ.NewFunction("<lambda>",
							[]λ.Param{
								{Name: "x"},
							},
							0, false, false,
							func(λargs []λ.Object) λ.Object {
								var (
									ϒx = λargs[0]
								)
								return λ.GetItem(λ.GetItem(ϒx, λ.NewStr("description")), λ.NewStr("primary"))
							})),
						λ.NewStr("thumbnail"): λ.Cal(ϒtry_get, ϒvideo_data, λ.NewFunction("<lambda>",
							[]λ.Param{
								{Name: "x"},
							},
							0, false, false,
							func(λargs []λ.Object) λ.Object {
								var (
									ϒx = λargs[0]
								)
								return λ.GetItem(λ.GetItem(λ.GetItem(ϒx, λ.NewStr("primaryImage")), λ.NewStr("url")), λ.NewStr("primary"))
							})),
						λ.NewStr("duration"):  λ.Cal(ϒparse_duration, λ.Cal(λ.GetAttr(ϒvideo_data, "get", nil), λ.NewStr("duration"))),
						λ.NewStr("timestamp"): λ.Cal(ϒunified_timestamp, λ.Cal(λ.GetAttr(ϒvideo_data, "get", nil), λ.NewStr("datePublished"))),
						λ.NewStr("formats"):   ϒformats,
						λ.NewStr("subtitles"): ϒsubtitles,
					})
				})
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_TESTS"):        NBCNewsIE__TESTS,
				λ.NewStr("_VALID_URL"):    NBCNewsIE__VALID_URL,
				λ.NewStr("_real_extract"): NBCNewsIE__real_extract,
			})
		}())
		NBCOlympicsIE = λ.Cal(λ.TypeType, λ.NewStr("NBCOlympicsIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				NBCOlympicsIE__VALID_URL λ.Object
			)
			NBCOlympicsIE__VALID_URL = λ.NewStr("https?://www\\.nbcolympics\\.com/video/(?P<id>[a-z-]+)")
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_VALID_URL"): NBCOlympicsIE__VALID_URL,
			})
		}())
		NBCOlympicsStreamIE = λ.Cal(λ.TypeType, λ.NewStr("NBCOlympicsStreamIE"), λ.NewTuple(AdobePassIE), func() λ.Dict {
			var (
				NBCOlympicsStreamIE__VALID_URL λ.Object
			)
			NBCOlympicsStreamIE__VALID_URL = λ.NewStr("https?://stream\\.nbcolympics\\.com/(?P<id>[0-9a-z-]+)")
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_VALID_URL"): NBCOlympicsStreamIE__VALID_URL,
			})
		}())
	})
}
