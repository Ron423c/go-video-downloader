// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * nbc/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/nbc.py
 */

package nbc

import (
	Ωcompat "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/compat"
	Ωadobepass "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/adobepass"
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωtheplatform "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/theplatform"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	AdobePassIE                  λ.Object
	CSNNEIE                      λ.Object
	InfoExtractor                λ.Object
	NBCIE                        λ.Object
	NBCNewsIE                    λ.Object
	NBCOlympicsIE                λ.Object
	NBCOlympicsStreamIE          λ.Object
	NBCSportsIE                  λ.Object
	NBCSportsStreamIE            λ.Object
	NBCSportsVPlayerIE           λ.Object
	ThePlatformIE                λ.Object
	ϒcompat_urllib_parse_unquote λ.Object
	ϒint_or_none                 λ.Object
	ϒjs_to_json                  λ.Object
	ϒparse_duration              λ.Object
	ϒsmuggle_url                 λ.Object
	ϒtry_get                     λ.Object
	ϒunified_timestamp           λ.Object
	ϒupdate_url_query            λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ThePlatformIE = Ωtheplatform.ThePlatformIE
		AdobePassIE = Ωadobepass.AdobePassIE
		ϒcompat_urllib_parse_unquote = Ωcompat.ϒcompat_urllib_parse_unquote
		ϒint_or_none = Ωutils.ϒint_or_none
		ϒjs_to_json = Ωutils.ϒjs_to_json
		ϒparse_duration = Ωutils.ϒparse_duration
		ϒsmuggle_url = Ωutils.ϒsmuggle_url
		ϒtry_get = Ωutils.ϒtry_get
		ϒunified_timestamp = Ωutils.ϒunified_timestamp
		ϒupdate_url_query = Ωutils.ϒupdate_url_query
		NBCIE = λ.Cal(λ.TypeType, λ.StrLiteral("NBCIE"), λ.NewTuple(AdobePassIE), func() λ.Dict {
			var (
				NBCIE__VALID_URL λ.Object
			)
			NBCIE__VALID_URL = λ.StrLiteral("https?(?P<permalink>://(?:www\\.)?nbc\\.com/(?:classic-tv/)?[^/]+/video/[^/]+/(?P<id>n?\\d+))")
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL": NBCIE__VALID_URL,
			})
		}())
		NBCSportsVPlayerIE = λ.Cal(λ.TypeType, λ.StrLiteral("NBCSportsVPlayerIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				NBCSportsVPlayerIE__VALID_URL    λ.Object
				NBCSportsVPlayerIE__real_extract λ.Object
			)
			NBCSportsVPlayerIE__VALID_URL = λ.StrLiteral("https?://vplayer\\.nbcsports\\.com/(?:[^/]+/)+(?P<id>[0-9a-zA-Z_]+)")
			NBCSportsVPlayerIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒself            = λargs[0]
						ϒtheplatform_url λ.Object
						ϒurl             = λargs[1]
						ϒvideo_id        λ.Object
						ϒwebpage         λ.Object
					)
					ϒvideo_id = λ.Calm(ϒself, "_match_id", ϒurl)
					ϒwebpage = λ.Calm(ϒself, "_download_webpage", ϒurl, ϒvideo_id)
					ϒtheplatform_url = λ.Calm(λ.Calm(ϒself, "_og_search_video_url", ϒwebpage), "replace", λ.StrLiteral("vplayer.nbcsports.com"), λ.StrLiteral("player.theplatform.com"))
					return λ.Calm(ϒself, "url_result", ϒtheplatform_url, λ.StrLiteral("ThePlatform"))
				})
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL":    NBCSportsVPlayerIE__VALID_URL,
				"_real_extract": NBCSportsVPlayerIE__real_extract,
			})
		}())
		NBCSportsIE = λ.Cal(λ.TypeType, λ.StrLiteral("NBCSportsIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				NBCSportsIE__VALID_URL λ.Object
			)
			NBCSportsIE__VALID_URL = λ.StrLiteral("https?://(?:www\\.)?nbcsports\\.com//?(?:[^/]+/)+(?P<id>[0-9a-z-]+)")
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL": NBCSportsIE__VALID_URL,
			})
		}())
		NBCSportsStreamIE = λ.Cal(λ.TypeType, λ.StrLiteral("NBCSportsStreamIE"), λ.NewTuple(AdobePassIE), func() λ.Dict {
			var (
				NBCSportsStreamIE__VALID_URL λ.Object
			)
			NBCSportsStreamIE__VALID_URL = λ.StrLiteral("https?://stream\\.nbcsports\\.com/.+?\\bpid=(?P<id>\\d+)")
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL": NBCSportsStreamIE__VALID_URL,
			})
		}())
		CSNNEIE = λ.Cal(λ.TypeType, λ.StrLiteral("CSNNEIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				CSNNEIE__VALID_URL λ.Object
			)
			CSNNEIE__VALID_URL = λ.StrLiteral("https?://(?:www\\.)?csnne\\.com/video/(?P<id>[0-9a-z-]+)")
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL": CSNNEIE__VALID_URL,
			})
		}())
		NBCNewsIE = λ.Cal(λ.TypeType, λ.StrLiteral("NBCNewsIE"), λ.NewTuple(ThePlatformIE), func() λ.Dict {
			var (
				NBCNewsIE__VALID_URL λ.Object
			)
			NBCNewsIE__VALID_URL = λ.StrLiteral("(?x)https?://(?:www\\.)?(?:nbcnews|today|msnbc)\\.com/([^/]+/)*(?:.*-)?(?P<id>[^/?]+)")
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL": NBCNewsIE__VALID_URL,
			})
		}())
		NBCOlympicsIE = λ.Cal(λ.TypeType, λ.StrLiteral("NBCOlympicsIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				NBCOlympicsIE__VALID_URL λ.Object
			)
			NBCOlympicsIE__VALID_URL = λ.StrLiteral("https?://www\\.nbcolympics\\.com/video/(?P<id>[a-z-]+)")
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL": NBCOlympicsIE__VALID_URL,
			})
		}())
		NBCOlympicsStreamIE = λ.Cal(λ.TypeType, λ.StrLiteral("NBCOlympicsStreamIE"), λ.NewTuple(AdobePassIE), func() λ.Dict {
			var (
				NBCOlympicsStreamIE__VALID_URL λ.Object
			)
			NBCOlympicsStreamIE__VALID_URL = λ.StrLiteral("https?://stream\\.nbcolympics\\.com/(?P<id>[0-9a-z-]+)")
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL": NBCOlympicsStreamIE__VALID_URL,
			})
		}())
	})
}
