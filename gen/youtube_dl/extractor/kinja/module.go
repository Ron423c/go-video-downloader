// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * kinja/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/kinja.py
 */

package kinja

import (
	Ωcompat "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/compat"
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	InfoExtractor                λ.Object
	KinjaEmbedIE                 λ.Object
	ϒcompat_str                  λ.Object
	ϒcompat_urllib_parse_unquote λ.Object
	ϒint_or_none                 λ.Object
	ϒparse_iso8601               λ.Object
	ϒstrip_or_none               λ.Object
	ϒtry_get                     λ.Object
	ϒunescapeHTML                λ.Object
	ϒurljoin                     λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ϒcompat_str = Ωcompat.ϒcompat_str
		ϒcompat_urllib_parse_unquote = Ωcompat.ϒcompat_urllib_parse_unquote
		ϒint_or_none = Ωutils.ϒint_or_none
		ϒparse_iso8601 = Ωutils.ϒparse_iso8601
		ϒstrip_or_none = Ωutils.ϒstrip_or_none
		ϒtry_get = Ωutils.ϒtry_get
		ϒunescapeHTML = Ωutils.ϒunescapeHTML
		ϒurljoin = Ωutils.ϒurljoin
		KinjaEmbedIE = λ.Cal(λ.TypeType, λ.StrLiteral("KinjaEmbedIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				KinjaEmbedIE__COMMON_REGEX        λ.Object
				KinjaEmbedIE__DOMAIN_REGEX        λ.Object
				KinjaEmbedIE__JWPLATFORM_PROVIDER λ.Object
				KinjaEmbedIE__VALID_URL           λ.Object
			)
			KinjaEmbedIE__DOMAIN_REGEX = λ.StrLiteral("(?:[^.]+\\.)?\n        (?:\n            avclub|\n            clickhole|\n            deadspin|\n            gizmodo|\n            jalopnik|\n            jezebel|\n            kinja|\n            kotaku|\n            lifehacker|\n            splinternews|\n            the(?:inventory|onion|root|takeout)\n        )\\.com")
			KinjaEmbedIE__COMMON_REGEX = λ.StrLiteral("/\n        (?:\n            ajax/inset|\n            embed/video\n        )/iframe\\?.*?\\bid=")
			KinjaEmbedIE__VALID_URL = λ.Mod(λ.StrLiteral("(?x)https?://%s%s\n        (?P<type>\n            fb|\n            imgur|\n            instagram|\n            jwp(?:layer)?-video|\n            kinjavideo|\n            mcp|\n            megaphone|\n            ooyala|\n            soundcloud(?:-playlist)?|\n            tumblr-post|\n            twitch-stream|\n            twitter|\n            ustream-channel|\n            vimeo|\n            vine|\n            youtube-(?:list|video)\n        )-(?P<id>[^&]+)"), λ.NewTuple(
				KinjaEmbedIE__DOMAIN_REGEX,
				KinjaEmbedIE__COMMON_REGEX,
			))
			KinjaEmbedIE__JWPLATFORM_PROVIDER = λ.NewTuple(
				λ.StrLiteral("cdn.jwplayer.com/v2/media/"),
				λ.StrLiteral("JWPlatform"),
			)
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_COMMON_REGEX":        KinjaEmbedIE__COMMON_REGEX,
				"_DOMAIN_REGEX":        KinjaEmbedIE__DOMAIN_REGEX,
				"_JWPLATFORM_PROVIDER": KinjaEmbedIE__JWPLATFORM_PROVIDER,
				"_VALID_URL":           KinjaEmbedIE__VALID_URL,
			})
		}())
	})
}
