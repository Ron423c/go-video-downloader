// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * limelight/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/limelight.py
 */

package limelight

import (
	Ωcompat "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/compat"
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	ExtractorError         λ.Object
	InfoExtractor          λ.Object
	LimelightBaseIE        λ.Object
	LimelightChannelIE     λ.Object
	LimelightChannelListIE λ.Object
	LimelightMediaIE       λ.Object
	ϒcompat_HTTPError      λ.Object
	ϒdetermine_ext         λ.Object
	ϒfloat_or_none         λ.Object
	ϒint_or_none           λ.Object
	ϒsmuggle_url           λ.Object
	ϒtry_get               λ.Object
	ϒunsmuggle_url         λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ϒcompat_HTTPError = Ωcompat.ϒcompat_HTTPError
		ϒdetermine_ext = Ωutils.ϒdetermine_ext
		ϒfloat_or_none = Ωutils.ϒfloat_or_none
		ϒint_or_none = Ωutils.ϒint_or_none
		ϒsmuggle_url = Ωutils.ϒsmuggle_url
		ϒtry_get = Ωutils.ϒtry_get
		ϒunsmuggle_url = Ωutils.ϒunsmuggle_url
		ExtractorError = Ωutils.ExtractorError
		LimelightBaseIE = λ.Cal(λ.TypeType, λ.StrLiteral("LimelightBaseIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {

			return λ.ClassDictLiteral(map[λ.Object]λ.Object{})
		}())
		LimelightMediaIE = λ.Cal(λ.TypeType, λ.StrLiteral("LimelightMediaIE"), λ.NewTuple(LimelightBaseIE), func() λ.Dict {
			var (
				LimelightMediaIE__VALID_URL λ.Object
			)
			LimelightMediaIE__VALID_URL = λ.StrLiteral("(?x)\n                        (?:\n                            limelight:media:|\n                            https?://\n                                (?:\n                                    link\\.videoplatform\\.limelight\\.com/media/|\n                                    assets\\.delvenetworks\\.com/player/loader\\.swf\n                                )\n                                \\?.*?\\bmediaId=\n                        )\n                        (?P<id>[a-z0-9]{32})\n                    ")
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL": LimelightMediaIE__VALID_URL,
			})
		}())
		LimelightChannelIE = λ.Cal(λ.TypeType, λ.StrLiteral("LimelightChannelIE"), λ.NewTuple(LimelightBaseIE), func() λ.Dict {
			var (
				LimelightChannelIE__VALID_URL λ.Object
			)
			LimelightChannelIE__VALID_URL = λ.StrLiteral("(?x)\n                        (?:\n                            limelight:channel:|\n                            https?://\n                                (?:\n                                    link\\.videoplatform\\.limelight\\.com/media/|\n                                    assets\\.delvenetworks\\.com/player/loader\\.swf\n                                )\n                                \\?.*?\\bchannelId=\n                        )\n                        (?P<id>[a-z0-9]{32})\n                    ")
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL": LimelightChannelIE__VALID_URL,
			})
		}())
		LimelightChannelListIE = λ.Cal(λ.TypeType, λ.StrLiteral("LimelightChannelListIE"), λ.NewTuple(LimelightBaseIE), func() λ.Dict {
			var (
				LimelightChannelListIE__VALID_URL λ.Object
			)
			LimelightChannelListIE__VALID_URL = λ.StrLiteral("(?x)\n                        (?:\n                            limelight:channel_list:|\n                            https?://\n                                (?:\n                                    link\\.videoplatform\\.limelight\\.com/media/|\n                                    assets\\.delvenetworks\\.com/player/loader\\.swf\n                                )\n                                \\?.*?\\bchannelListId=\n                        )\n                        (?P<id>[a-z0-9]{32})\n                    ")
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL": LimelightChannelListIE__VALID_URL,
			})
		}())
	})
}
