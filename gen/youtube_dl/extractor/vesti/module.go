// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2018 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * vesti/module.go: transpiled from https://github.com/rg3/youtube-dl/blob/master/youtube_dl/extractor/vesti.py
 */

package vesti

import (
	Ωre "github.com/tenta-browser/go-video-downloader/gen/re"
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωrutv "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/rutv"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	ExtractorError λ.Object
	InfoExtractor  λ.Object
	RUTVIE         λ.Object
	VestiIE        λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ExtractorError = Ωutils.ExtractorError
		RUTVIE = Ωrutv.RUTVIE
		VestiIE = λ.Cal(λ.TypeType, λ.NewStr("VestiIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				VestiIE__TESTS        λ.Object
				VestiIE__VALID_URL    λ.Object
				VestiIE__real_extract λ.Object
			)
			VestiIE__VALID_URL = λ.NewStr("https?://(?:.+?\\.)?vesti\\.ru/(?P<id>.+)")
			VestiIE__TESTS = λ.NewList(
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("http://www.vesti.ru/videos?vid=575582&cid=1"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("765035"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("Вести.net: биткоины в России не являются законными"),
						λ.NewStr("description"): λ.NewStr("md5:d4bb3859dc1177b28a94c5014c35a36b"),
						λ.NewStr("duration"):    λ.NewInt(302),
					}),
					λ.NewStr("params"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("skip_download"): λ.True,
					}),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("http://www.vesti.ru/doc.html?id=1349233"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("773865"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("Участники митинга штурмуют Донецкую областную администрацию"),
						λ.NewStr("description"): λ.NewStr("md5:1a160e98b3195379b4c849f2f4958009"),
						λ.NewStr("duration"):    λ.NewInt(210),
					}),
					λ.NewStr("params"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("skip_download"): λ.True,
					}),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("http://www.vesti.ru/only_video.html?vid=576180"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("766048"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("США заморозило, Британию затопило"),
						λ.NewStr("description"): λ.NewStr("md5:f0ed0695ec05aed27c56a70a58dc4cc1"),
						λ.NewStr("duration"):    λ.NewInt(87),
					}),
					λ.NewStr("params"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("skip_download"): λ.True,
					}),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("http://hitech.vesti.ru/news/view/id/4000"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("766888"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("Вести.net: интернет-гиганты начали перетягивание программных \"одеял\""),
						λ.NewStr("description"): λ.NewStr("md5:65ddd47f9830c4f42ed6475f8730c995"),
						λ.NewStr("duration"):    λ.NewInt(279),
					}),
					λ.NewStr("params"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("skip_download"): λ.True,
					}),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("http://sochi2014.vesti.ru/video/index/video_id/766403"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("766403"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("XXII зимние Олимпийские игры. Российские хоккеисты стартовали на Олимпиаде с победы"),
						λ.NewStr("description"): λ.NewStr("md5:55805dfd35763a890ff50fa9e35e31b3"),
						λ.NewStr("duration"):    λ.NewInt(271),
					}),
					λ.NewStr("params"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("skip_download"): λ.True,
					}),
					λ.NewStr("skip"): λ.NewStr("Blocked outside Russia"),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("http://sochi2014.vesti.ru/live/play/live_id/301"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("51499"),
						λ.NewStr("ext"):         λ.NewStr("flv"),
						λ.NewStr("title"):       λ.NewStr("Сочи-2014. Биатлон. Индивидуальная гонка. Мужчины "),
						λ.NewStr("description"): λ.NewStr("md5:9e0ed5c9d2fa1efbfdfed90c9a6d179c"),
					}),
					λ.NewStr("params"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("skip_download"): λ.True,
					}),
					λ.NewStr("skip"): λ.NewStr("Translation has finished"),
				}),
			)
			VestiIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒmobj     λ.Object
						ϒpage     λ.Object
						ϒrutv_url λ.Object
						ϒself     = λargs[0]
						ϒurl      = λargs[1]
						ϒvideo_id λ.Object
					)
					ϒmobj = λ.Cal(Ωre.ϒmatch, λ.GetAttr(ϒself, "_VALID_URL", nil), ϒurl)
					ϒvideo_id = λ.Cal(λ.GetAttr(ϒmobj, "group", nil), λ.NewStr("id"))
					ϒpage = λ.Cal(λ.GetAttr(ϒself, "_download_webpage", nil), ϒurl, ϒvideo_id, λ.NewStr("Downloading page"))
					ϒmobj = λ.Cal(Ωre.ϒsearch, λ.NewStr("<meta[^>]+?property=\"og:video\"[^>]+?content=\"http://www\\.vesti\\.ru/i/flvplayer_videoHost\\.swf\\?vid=(?P<id>\\d+)"), ϒpage)
					if λ.IsTrue(ϒmobj) {
						ϒvideo_id = λ.Cal(λ.GetAttr(ϒmobj, "group", nil), λ.NewStr("id"))
						ϒpage = λ.Cal(λ.GetAttr(ϒself, "_download_webpage", nil), λ.Mod(λ.NewStr("http://www.vesti.ru/only_video.html?vid=%s"), ϒvideo_id), ϒvideo_id, λ.NewStr("Downloading video page"))
					}
					ϒrutv_url = λ.Cal(λ.GetAttr(RUTVIE, "_extract_url", nil), ϒpage)
					if λ.IsTrue(ϒrutv_url) {
						return λ.Cal(λ.GetAttr(ϒself, "url_result", nil), ϒrutv_url, λ.NewStr("RUTV"))
					}
					panic(λ.Raise(λ.Call(ExtractorError, λ.NewArgs(λ.NewStr("No video found")), λ.KWArgs{
						{Name: "expected", Value: λ.True},
					})))
					return λ.None
				})
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_TESTS"):        VestiIE__TESTS,
				λ.NewStr("_VALID_URL"):    VestiIE__VALID_URL,
				λ.NewStr("_real_extract"): VestiIE__real_extract,
			})
		}())
	})
}
