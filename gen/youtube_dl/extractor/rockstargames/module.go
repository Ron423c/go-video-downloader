// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * rockstargames/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/rockstargames.py
 */

package rockstargames

import (
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	InfoExtractor   λ.Object
	RockstarGamesIE λ.Object
	ϒint_or_none    λ.Object
	ϒparse_iso8601  λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ϒint_or_none = Ωutils.ϒint_or_none
		ϒparse_iso8601 = Ωutils.ϒparse_iso8601
		RockstarGamesIE = λ.Cal(λ.TypeType, λ.StrLiteral("RockstarGamesIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				RockstarGamesIE__VALID_URL    λ.Object
				RockstarGamesIE__real_extract λ.Object
			)
			RockstarGamesIE__VALID_URL = λ.StrLiteral("https?://(?:www\\.)?rockstargames\\.com/videos(?:/video/|#?/?\\?.*\\bvideo=)(?P<id>\\d+)")
			RockstarGamesIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒformats    λ.Object
						ϒheight     λ.Object
						ϒresolution λ.Object
						ϒself       = λargs[0]
						ϒtitle      λ.Object
						ϒurl        = λargs[1]
						ϒvideo      λ.Object
						ϒvideo_id   λ.Object
						ϒyoutube_id λ.Object
						τmp0        λ.Object
						τmp1        λ.Object
					)
					ϒvideo_id = λ.Calm(ϒself, "_match_id", ϒurl)
					ϒvideo = λ.GetItem(λ.Call(λ.GetAttr(ϒself, "_download_json", nil), λ.NewArgs(
						λ.StrLiteral("https://www.rockstargames.com/videoplayer/videos/get-video.json"),
						ϒvideo_id,
					), λ.KWArgs{
						{Name: "query", Value: λ.DictLiteral(map[string]λ.Object{
							"id":     ϒvideo_id,
							"locale": λ.StrLiteral("en_us"),
						})},
					}), λ.StrLiteral("video"))
					ϒtitle = λ.GetItem(ϒvideo, λ.StrLiteral("title"))
					ϒformats = λ.NewList()
					τmp0 = λ.Cal(λ.BuiltinIter, λ.GetItem(λ.GetItem(ϒvideo, λ.StrLiteral("files_processed")), λ.StrLiteral("video/mp4")))
					for {
						if τmp1 = λ.NextDefault(τmp0, λ.AfterLast); τmp1 == λ.AfterLast {
							break
						}
						ϒvideo = τmp1
						if !λ.IsTrue(λ.Calm(ϒvideo, "get", λ.StrLiteral("src"))) {
							continue
						}
						ϒresolution = λ.Calm(ϒvideo, "get", λ.StrLiteral("resolution"))
						ϒheight = λ.Cal(ϒint_or_none, λ.Call(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewArgs(
							λ.StrLiteral("^(\\d+)[pP]$"),
							func() λ.Object {
								if λv := ϒresolution; λ.IsTrue(λv) {
									return λv
								} else {
									return λ.StrLiteral("")
								}
							}(),
							λ.StrLiteral("height"),
						), λ.KWArgs{
							{Name: "default", Value: λ.None},
						}))
						λ.Calm(ϒformats, "append", λ.DictLiteral(map[string]λ.Object{
							"url":       λ.Calm(ϒself, "_proto_relative_url", λ.GetItem(ϒvideo, λ.StrLiteral("src"))),
							"format_id": ϒresolution,
							"height":    ϒheight,
						}))
					}
					if !λ.IsTrue(ϒformats) {
						ϒyoutube_id = λ.Calm(ϒvideo, "get", λ.StrLiteral("youtube_id"))
						if λ.IsTrue(ϒyoutube_id) {
							return λ.Calm(ϒself, "url_result", ϒyoutube_id, λ.StrLiteral("Youtube"))
						}
					}
					λ.Calm(ϒself, "_sort_formats", ϒformats)
					return λ.DictLiteral(map[string]λ.Object{
						"id":          ϒvideo_id,
						"title":       ϒtitle,
						"description": λ.Calm(ϒvideo, "get", λ.StrLiteral("description")),
						"thumbnail":   λ.Calm(ϒself, "_proto_relative_url", λ.Calm(ϒvideo, "get", λ.StrLiteral("screencap"))),
						"timestamp":   λ.Cal(ϒparse_iso8601, λ.Calm(ϒvideo, "get", λ.StrLiteral("created"))),
						"formats":     ϒformats,
					})
				})
			return λ.DictLiteral(map[string]λ.Object{
				"_VALID_URL":    RockstarGamesIE__VALID_URL,
				"_real_extract": RockstarGamesIE__real_extract,
			})
		}())
	})
}
