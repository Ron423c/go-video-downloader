// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2018 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * soundgasm/module.go: transpiled from https://github.com/rg3/youtube-dl/blob/master/youtube_dl/extractor/soundgasm.py
 */

package soundgasm

import (
	Ωre "github.com/tenta-browser/go-video-downloader/gen/re"
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	InfoExtractor      λ.Object
	SoundgasmIE        λ.Object
	SoundgasmProfileIE λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		SoundgasmIE = λ.Cal(λ.TypeType, λ.NewStr("SoundgasmIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				SoundgasmIE_IE_NAME       λ.Object
				SoundgasmIE__TEST         λ.Object
				SoundgasmIE__VALID_URL    λ.Object
				SoundgasmIE__real_extract λ.Object
			)
			SoundgasmIE_IE_NAME = λ.NewStr("soundgasm")
			SoundgasmIE__VALID_URL = λ.NewStr("https?://(?:www\\.)?soundgasm\\.net/u/(?P<user>[0-9a-zA-Z_-]+)/(?P<display_id>[0-9a-zA-Z_-]+)")
			SoundgasmIE__TEST = λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("url"): λ.NewStr("http://soundgasm.net/u/ytdl/Piano-sample"),
				λ.NewStr("md5"): λ.NewStr("010082a2c802c5275bb00030743e75ad"),
				λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("id"):          λ.NewStr("88abd86ea000cafe98f96321b23cc1206cbcbcc9"),
					λ.NewStr("ext"):         λ.NewStr("m4a"),
					λ.NewStr("title"):       λ.NewStr("Piano sample"),
					λ.NewStr("description"): λ.NewStr("Royalty Free Sample Music"),
					λ.NewStr("uploader"):    λ.NewStr("ytdl"),
				}),
			})
			SoundgasmIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒaudio_id    λ.Object
						ϒaudio_url   λ.Object
						ϒdescription λ.Object
						ϒdisplay_id  λ.Object
						ϒmobj        λ.Object
						ϒself        = λargs[0]
						ϒtitle       λ.Object
						ϒurl         = λargs[1]
						ϒwebpage     λ.Object
					)
					ϒmobj = λ.Cal(Ωre.ϒmatch, λ.GetAttr(ϒself, "_VALID_URL", nil), ϒurl)
					ϒdisplay_id = λ.Cal(λ.GetAttr(ϒmobj, "group", nil), λ.NewStr("display_id"))
					ϒwebpage = λ.Cal(λ.GetAttr(ϒself, "_download_webpage", nil), ϒurl, ϒdisplay_id)
					ϒaudio_url = λ.Call(λ.GetAttr(ϒself, "_html_search_regex", nil), λ.NewArgs(
						λ.NewStr("(?s)m4a\\s*:\\s*([\"\\'])(?P<url>(?:(?!\\1).)+)\\1"),
						ϒwebpage,
						λ.NewStr("audio URL"),
					), λ.KWArgs{
						{Name: "group", Value: λ.NewStr("url")},
					})
					ϒtitle = λ.Call(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewArgs(
						λ.NewStr("<div[^>]+\\bclass=[\"\\']jp-title[^>]+>([^<]+)"),
						ϒwebpage,
						λ.NewStr("title"),
					), λ.KWArgs{
						{Name: "default", Value: ϒdisplay_id},
					})
					ϒdescription = λ.Call(λ.GetAttr(ϒself, "_html_search_regex", nil), λ.NewArgs(
						λ.NewTuple(
							λ.NewStr("(?s)<div[^>]+\\bclass=[\"\\']jp-description[^>]+>(.+?)</div>"),
							λ.NewStr("(?s)<li>Description:\\s(.*?)<\\/li>"),
						),
						ϒwebpage,
						λ.NewStr("description"),
					), λ.KWArgs{
						{Name: "fatal", Value: λ.False},
					})
					ϒaudio_id = λ.Call(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewArgs(
						λ.NewStr("/([^/]+)\\.m4a"),
						ϒaudio_url,
						λ.NewStr("audio id"),
					), λ.KWArgs{
						{Name: "default", Value: ϒdisplay_id},
					})
					return λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          ϒaudio_id,
						λ.NewStr("display_id"):  ϒdisplay_id,
						λ.NewStr("url"):         ϒaudio_url,
						λ.NewStr("vcodec"):      λ.NewStr("none"),
						λ.NewStr("title"):       ϒtitle,
						λ.NewStr("description"): ϒdescription,
						λ.NewStr("uploader"):    λ.Cal(λ.GetAttr(ϒmobj, "group", nil), λ.NewStr("user")),
					})
				})
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("IE_NAME"):       SoundgasmIE_IE_NAME,
				λ.NewStr("_TEST"):         SoundgasmIE__TEST,
				λ.NewStr("_VALID_URL"):    SoundgasmIE__VALID_URL,
				λ.NewStr("_real_extract"): SoundgasmIE__real_extract,
			})
		}())
		SoundgasmProfileIE = λ.Cal(λ.TypeType, λ.NewStr("SoundgasmProfileIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				SoundgasmProfileIE__VALID_URL λ.Object
			)
			SoundgasmProfileIE__VALID_URL = λ.NewStr("https?://(?:www\\.)?soundgasm\\.net/u/(?P<id>[^/]+)/?(?:\\#.*)?$")
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_VALID_URL"): SoundgasmProfileIE__VALID_URL,
			})
		}())
	})
}
