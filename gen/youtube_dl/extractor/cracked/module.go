// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2018 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * cracked/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/cracked.py
 */

package cracked

import (
	Ωre "github.com/tenta-browser/go-video-downloader/gen/re"
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωyoutube "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/youtube"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	CrackedIE      λ.Object
	InfoExtractor  λ.Object
	YoutubeIE      λ.Object
	ϒparse_iso8601 λ.Object
	ϒstr_to_int    λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		YoutubeIE = Ωyoutube.YoutubeIE
		ϒparse_iso8601 = Ωutils.ϒparse_iso8601
		ϒstr_to_int = Ωutils.ϒstr_to_int
		CrackedIE = λ.Cal(λ.TypeType, λ.NewStr("CrackedIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				CrackedIE__TESTS        λ.Object
				CrackedIE__VALID_URL    λ.Object
				CrackedIE__real_extract λ.Object
			)
			CrackedIE__VALID_URL = λ.NewStr("https?://(?:www\\.)?cracked\\.com/video_(?P<id>\\d+)_[\\da-z-]+\\.html")
			CrackedIE__TESTS = λ.NewList(
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("http://www.cracked.com/video_19070_if-animal-actors-got-e21-true-hollywood-stories.html"),
					λ.NewStr("md5"): λ.NewStr("89b90b9824e3806ca95072c4d78f13f7"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("19070"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("If Animal Actors Got E! True Hollywood Stories"),
						λ.NewStr("timestamp"):   λ.NewInt(1404954000),
						λ.NewStr("upload_date"): λ.NewStr("20140710"),
					}),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("http://www.cracked.com/video_19006_4-plot-holes-you-didnt-notice-in-your-favorite-movies.html"),
					λ.NewStr("md5"): λ.NewStr("ccd52866b50bde63a6ef3b35016ba8c7"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("EjI00A3rZD0"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("4 Plot Holes You Didn't Notice in Your Favorite Movies - The Spit Take"),
						λ.NewStr("description"): λ.NewStr("md5:c603708c718b796fe6079e2b3351ffc7"),
						λ.NewStr("upload_date"): λ.NewStr("20140725"),
						λ.NewStr("uploader_id"): λ.NewStr("Cracked"),
						λ.NewStr("uploader"):    λ.NewStr("Cracked"),
					}),
				}),
			)
			CrackedIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒcomment_count λ.Object
						ϒdescription   λ.Object
						ϒheight        λ.Object
						ϒm             λ.Object
						ϒself          = λargs[0]
						ϒtimestamp     λ.Object
						ϒtitle         λ.Object
						ϒurl           = λargs[1]
						ϒvideo_id      λ.Object
						ϒvideo_url     λ.Object
						ϒview_count    λ.Object
						ϒwebpage       λ.Object
						ϒwidth         λ.Object
						ϒyoutube_url   λ.Object
						τmp0           λ.Object
					)
					ϒvideo_id = λ.Cal(λ.GetAttr(ϒself, "_match_id", nil), ϒurl)
					ϒwebpage = λ.Cal(λ.GetAttr(ϒself, "_download_webpage", nil), ϒurl, ϒvideo_id)
					ϒyoutube_url = λ.Cal(λ.GetAttr(YoutubeIE, "_extract_url", nil), ϒwebpage)
					if λ.IsTrue(ϒyoutube_url) {
						return λ.Call(λ.GetAttr(ϒself, "url_result", nil), λ.NewArgs(ϒyoutube_url), λ.KWArgs{
							{Name: "ie", Value: λ.Cal(λ.GetAttr(YoutubeIE, "ie_key", nil))},
						})
					}
					ϒvideo_url = λ.Cal(λ.GetAttr(ϒself, "_html_search_regex", nil), λ.NewList(
						λ.NewStr("var\\s+CK_vidSrc\\s*=\\s*\"([^\"]+)\""),
						λ.NewStr("<video\\s+src=\"([^\"]+)\""),
					), ϒwebpage, λ.NewStr("video URL"))
					ϒtitle = λ.Cal(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewList(
						λ.NewStr("property=\"?og:title\"?\\s+content=\"([^\"]+)\""),
						λ.NewStr("class=\"?title\"?>([^<]+)"),
					), ϒwebpage, λ.NewStr("title"))
					ϒdescription = λ.Call(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewArgs(
						λ.NewStr("name=\"?(?:og:)?description\"?\\s+content=\"([^\"]+)\""),
						ϒwebpage,
						λ.NewStr("description"),
					), λ.KWArgs{
						{Name: "default", Value: λ.None},
					})
					ϒtimestamp = λ.Call(λ.GetAttr(ϒself, "_html_search_regex", nil), λ.NewArgs(
						λ.NewStr("\"date\"\\s*:\\s*\"([^\"]+)\""),
						ϒwebpage,
						λ.NewStr("upload date"),
					), λ.KWArgs{
						{Name: "fatal", Value: λ.False},
					})
					if λ.IsTrue(ϒtimestamp) {
						ϒtimestamp = λ.Cal(ϒparse_iso8601, λ.GetItem(ϒtimestamp, λ.NewSlice(λ.None, λ.Neg(λ.NewInt(6)), λ.None)))
					}
					ϒview_count = λ.Cal(ϒstr_to_int, λ.Call(λ.GetAttr(ϒself, "_html_search_regex", nil), λ.NewArgs(
						λ.NewStr("<span\\s+class=\"?views\"? id=\"?viewCounts\"?>([\\d,\\.]+) Views</span>"),
						ϒwebpage,
						λ.NewStr("view count"),
					), λ.KWArgs{
						{Name: "fatal", Value: λ.False},
					}))
					ϒcomment_count = λ.Cal(ϒstr_to_int, λ.Call(λ.GetAttr(ϒself, "_html_search_regex", nil), λ.NewArgs(
						λ.NewStr("<span\\s+id=\"?commentCounts\"?>([\\d,\\.]+)</span>"),
						ϒwebpage,
						λ.NewStr("comment count"),
					), λ.KWArgs{
						{Name: "fatal", Value: λ.False},
					}))
					ϒm = λ.Cal(Ωre.ϒsearch, λ.NewStr("_(?P<width>\\d+)X(?P<height>\\d+)\\.mp4$"), ϒvideo_url)
					if λ.IsTrue(ϒm) {
						ϒwidth = λ.Cal(λ.IntType, λ.Cal(λ.GetAttr(ϒm, "group", nil), λ.NewStr("width")))
						ϒheight = λ.Cal(λ.IntType, λ.Cal(λ.GetAttr(ϒm, "group", nil), λ.NewStr("height")))
					} else {
						τmp0 = λ.None
						ϒwidth = τmp0
						ϒheight = τmp0
					}
					return λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):            ϒvideo_id,
						λ.NewStr("url"):           ϒvideo_url,
						λ.NewStr("title"):         ϒtitle,
						λ.NewStr("description"):   ϒdescription,
						λ.NewStr("timestamp"):     ϒtimestamp,
						λ.NewStr("view_count"):    ϒview_count,
						λ.NewStr("comment_count"): ϒcomment_count,
						λ.NewStr("height"):        ϒheight,
						λ.NewStr("width"):         ϒwidth,
					})
				})
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_TESTS"):        CrackedIE__TESTS,
				λ.NewStr("_VALID_URL"):    CrackedIE__VALID_URL,
				λ.NewStr("_real_extract"): CrackedIE__real_extract,
			})
		}())
	})
}
