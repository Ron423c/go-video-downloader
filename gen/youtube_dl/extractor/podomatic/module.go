// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * podomatic/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/podomatic.py
 */

package podomatic

import (
	Ωjson "github.com/tenta-browser/go-video-downloader/gen/json"
	Ωre "github.com/tenta-browser/go-video-downloader/gen/re"
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	InfoExtractor λ.Object
	PodomaticIE   λ.Object
	ϒint_or_none  λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ϒint_or_none = Ωutils.ϒint_or_none
		PodomaticIE = λ.Cal(λ.TypeType, λ.StrLiteral("PodomaticIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				PodomaticIE_IE_NAME       λ.Object
				PodomaticIE__VALID_URL    λ.Object
				PodomaticIE__real_extract λ.Object
			)
			PodomaticIE_IE_NAME = λ.StrLiteral("podomatic")
			PodomaticIE__VALID_URL = λ.StrLiteral("(?x)\n                    (?P<proto>https?)://\n                        (?:\n                            (?P<channel>[^.]+)\\.podomatic\\.com/entry|\n                            (?:www\\.)?podomatic\\.com/podcasts/(?P<channel_2>[^/]+)/episodes\n                        )/\n                        (?P<id>[^/?#&]+)\n                ")
			PodomaticIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒchannel   λ.Object
						ϒdata      λ.Object
						ϒdata_json λ.Object
						ϒduration  λ.Object
						ϒjson_url  λ.Object
						ϒmobj      λ.Object
						ϒself      = λargs[0]
						ϒthumbnail λ.Object
						ϒtitle     λ.Object
						ϒuploader  λ.Object
						ϒurl       = λargs[1]
						ϒvideo_id  λ.Object
						ϒvideo_url λ.Object
					)
					ϒmobj = λ.Cal(Ωre.ϒmatch, λ.GetAttr(ϒself, "_VALID_URL", nil), ϒurl)
					ϒvideo_id = λ.Calm(ϒmobj, "group", λ.StrLiteral("id"))
					ϒchannel = func() λ.Object {
						if λv := λ.Calm(ϒmobj, "group", λ.StrLiteral("channel")); λ.IsTrue(λv) {
							return λv
						} else {
							return λ.Calm(ϒmobj, "group", λ.StrLiteral("channel_2"))
						}
					}()
					ϒjson_url = λ.Mod(λ.Add(λ.StrLiteral("%s://%s.podomatic.com/entry/embed_params/%s"), λ.StrLiteral("?permalink=true&rtmp=0")), λ.NewTuple(
						λ.Calm(ϒmobj, "group", λ.StrLiteral("proto")),
						ϒchannel,
						ϒvideo_id,
					))
					ϒdata_json = λ.Calm(ϒself, "_download_webpage", ϒjson_url, ϒvideo_id, λ.StrLiteral("Downloading video info"))
					ϒdata = λ.Cal(Ωjson.ϒloads, ϒdata_json)
					ϒvideo_url = λ.GetItem(ϒdata, λ.StrLiteral("downloadLink"))
					if !λ.IsTrue(ϒvideo_url) {
						ϒvideo_url = λ.Mod(λ.StrLiteral("%s/%s"), λ.NewTuple(
							λ.Calm(λ.GetItem(ϒdata, λ.StrLiteral("streamer")), "replace", λ.StrLiteral("rtmp"), λ.StrLiteral("http")),
							λ.GetItem(ϒdata, λ.StrLiteral("mediaLocation")),
						))
					}
					ϒuploader = λ.GetItem(ϒdata, λ.StrLiteral("podcast"))
					ϒtitle = λ.GetItem(ϒdata, λ.StrLiteral("title"))
					ϒthumbnail = λ.GetItem(ϒdata, λ.StrLiteral("imageLocation"))
					ϒduration = λ.Cal(ϒint_or_none, λ.Calm(ϒdata, "get", λ.StrLiteral("length")), λ.IntLiteral(1000))
					return λ.DictLiteral(map[string]λ.Object{
						"id":          ϒvideo_id,
						"url":         ϒvideo_url,
						"title":       ϒtitle,
						"uploader":    ϒuploader,
						"uploader_id": ϒchannel,
						"thumbnail":   ϒthumbnail,
						"duration":    ϒduration,
					})
				})
			return λ.ClassDictLiteral(map[string]λ.Object{
				"IE_NAME":       PodomaticIE_IE_NAME,
				"_VALID_URL":    PodomaticIE__VALID_URL,
				"_real_extract": PodomaticIE__real_extract,
			})
		}())
	})
}
