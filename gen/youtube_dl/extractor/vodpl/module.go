// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * vodpl/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/vodpl.py
 */

package vodpl

import (
	Ωonet "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/onet"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	OnetBaseIE λ.Object
	VODPlIE    λ.Object
)

func init() {
	λ.InitModule(func() {
		OnetBaseIE = Ωonet.OnetBaseIE
		VODPlIE = λ.Cal(λ.TypeType, λ.NewStr("VODPlIE"), λ.NewTuple(OnetBaseIE), func() λ.Dict {
			var (
				VODPlIE__TESTS        λ.Object
				VODPlIE__VALID_URL    λ.Object
				VODPlIE__real_extract λ.Object
			)
			VODPlIE__VALID_URL = λ.NewStr("https?://vod\\.pl/(?:[^/]+/)+(?P<id>[0-9a-zA-Z]+)")
			VODPlIE__TESTS = λ.NewList(
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("https://vod.pl/filmy/chlopaki-nie-placza/3ep3jns"),
					λ.NewStr("md5"): λ.NewStr("a7dc3b2f7faa2421aefb0ecaabf7ec74"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("3ep3jns"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("Chłopaki nie płaczą"),
						λ.NewStr("description"): λ.NewStr("md5:f5f03b84712e55f5ac9f0a3f94445224"),
						λ.NewStr("timestamp"):   λ.NewInt(1463415154),
						λ.NewStr("duration"):    λ.NewInt(5765),
						λ.NewStr("upload_date"): λ.NewStr("20160516"),
					}),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("https://vod.pl/seriale/belfer-na-planie-praca-kamery-online/2c10heh"),
					λ.NewStr("only_matching"): λ.True,
				}),
			)
			VODPlIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒinfo_dict λ.Object
						ϒself      = λargs[0]
						ϒurl       = λargs[1]
						ϒvideo_id  λ.Object
						ϒwebpage   λ.Object
					)
					ϒvideo_id = λ.Cal(λ.GetAttr(ϒself, "_match_id", nil), ϒurl)
					ϒwebpage = λ.Cal(λ.GetAttr(ϒself, "_download_webpage", nil), ϒurl, ϒvideo_id)
					ϒinfo_dict = λ.Cal(λ.GetAttr(ϒself, "_extract_from_id", nil), λ.Cal(λ.GetAttr(ϒself, "_search_mvp_id", nil), ϒwebpage), ϒwebpage)
					λ.SetItem(ϒinfo_dict, λ.NewStr("id"), ϒvideo_id)
					return ϒinfo_dict
				})
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_TESTS"):        VODPlIE__TESTS,
				λ.NewStr("_VALID_URL"):    VODPlIE__VALID_URL,
				λ.NewStr("_real_extract"): VODPlIE__real_extract,
			})
		}())
	})
}
