// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2018 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * engadget/module.go: transpiled from https://github.com/rg3/youtube-dl/blob/master/youtube_dl/extractor/engadget.py
 */

package engadget

import (
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	EngadgetIE    λ.Object
	InfoExtractor λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		EngadgetIE = λ.Cal(λ.TypeType, λ.NewStr("EngadgetIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				EngadgetIE__TESTS        λ.Object
				EngadgetIE__VALID_URL    λ.Object
				EngadgetIE__real_extract λ.Object
			)
			EngadgetIE__VALID_URL = λ.NewStr("https?://(?:www\\.)?engadget\\.com/video/(?P<id>[^/?#]+)")
			EngadgetIE__TESTS = λ.NewList(
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("http://www.engadget.com/video/518153925/"),
					λ.NewStr("md5"): λ.NewStr("c6820d4828a5064447a4d9fc73f312c9"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):    λ.NewStr("518153925"),
						λ.NewStr("ext"):   λ.NewStr("mp4"),
						λ.NewStr("title"): λ.NewStr("Samsung Galaxy Tab Pro 8.4 Review"),
					}),
					λ.NewStr("add_ie"): λ.NewList(λ.NewStr("FiveMin")),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("https://www.engadget.com/video/57a28462134aa15a39f0421a/"),
					λ.NewStr("only_matching"): λ.True,
				}),
			)
			EngadgetIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒself     = λargs[0]
						ϒurl      = λargs[1]
						ϒvideo_id λ.Object
					)
					ϒvideo_id = λ.Cal(λ.GetAttr(ϒself, "_match_id", nil), ϒurl)
					return λ.Cal(λ.GetAttr(ϒself, "url_result", nil), λ.Mod(λ.NewStr("aol-video:%s"), ϒvideo_id))
				})
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_TESTS"):        EngadgetIE__TESTS,
				λ.NewStr("_VALID_URL"):    EngadgetIE__VALID_URL,
				λ.NewStr("_real_extract"): EngadgetIE__real_extract,
			})
		}())
	})
}
