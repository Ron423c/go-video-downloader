// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * businessinsider/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/businessinsider.py
 */

package businessinsider

import (
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωjwplatform "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/jwplatform"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	BusinessInsiderIE λ.Object
	InfoExtractor     λ.Object
	JWPlatformIE      λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		JWPlatformIE = Ωjwplatform.JWPlatformIE
		BusinessInsiderIE = λ.Cal(λ.TypeType, λ.StrLiteral("BusinessInsiderIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				BusinessInsiderIE__VALID_URL    λ.Object
				BusinessInsiderIE__real_extract λ.Object
			)
			BusinessInsiderIE__VALID_URL = λ.StrLiteral("https?://(?:[^/]+\\.)?businessinsider\\.(?:com|nl)/(?:[^/]+/)*(?P<id>[^/?#&]+)")
			BusinessInsiderIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒjwplatform_id λ.Object
						ϒself          = λargs[0]
						ϒurl           = λargs[1]
						ϒvideo_id      λ.Object
						ϒwebpage       λ.Object
					)
					ϒvideo_id = λ.Calm(ϒself, "_match_id", ϒurl)
					ϒwebpage = λ.Calm(ϒself, "_download_webpage", ϒurl, ϒvideo_id)
					ϒjwplatform_id = λ.Calm(ϒself, "_search_regex", λ.NewTuple(
						λ.StrLiteral("data-media-id=[\"\\']([a-zA-Z0-9]{8})"),
						λ.StrLiteral("id=[\"\\']jwplayer_([a-zA-Z0-9]{8})"),
						λ.StrLiteral("id[\"\\']?\\s*:\\s*[\"\\']?([a-zA-Z0-9]{8})"),
						λ.StrLiteral("(?:jwplatform\\.com/players/|jwplayer_)([a-zA-Z0-9]{8})"),
					), ϒwebpage, λ.StrLiteral("jwplatform id"))
					return λ.Call(λ.GetAttr(ϒself, "url_result", nil), λ.NewArgs(λ.Mod(λ.StrLiteral("jwplatform:%s"), ϒjwplatform_id)), λ.KWArgs{
						{Name: "ie", Value: λ.Calm(JWPlatformIE, "ie_key")},
						{Name: "video_id", Value: ϒvideo_id},
					})
				})
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL":    BusinessInsiderIE__VALID_URL,
				"_real_extract": BusinessInsiderIE__real_extract,
			})
		}())
	})
}
