// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * yahoo/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/yahoo.py
 */

package yahoo

import (
	Ωre "github.com/tenta-browser/go-video-downloader/gen/re"
	Ωcompat "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/compat"
	Ωbrightcove "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/brightcove"
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	BrightcoveNewIE     λ.Object
	InfoExtractor       λ.Object
	SearchInfoExtractor λ.Object
	YahooGyaOIE         λ.Object
	YahooGyaOPlayerIE   λ.Object
	YahooIE             λ.Object
	YahooJapanNewsIE    λ.Object
	ϒclean_html         λ.Object
	ϒcompat_str         λ.Object
	ϒint_or_none        λ.Object
	ϒmimetype2ext       λ.Object
	ϒparse_iso8601      λ.Object
	ϒsmuggle_url        λ.Object
	ϒtry_get            λ.Object
	ϒurl_or_none        λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		SearchInfoExtractor = Ωcommon.SearchInfoExtractor
		ϒcompat_str = Ωcompat.ϒcompat_str
		ϒclean_html = Ωutils.ϒclean_html
		ϒint_or_none = Ωutils.ϒint_or_none
		ϒmimetype2ext = Ωutils.ϒmimetype2ext
		ϒparse_iso8601 = Ωutils.ϒparse_iso8601
		ϒsmuggle_url = Ωutils.ϒsmuggle_url
		ϒtry_get = Ωutils.ϒtry_get
		ϒurl_or_none = Ωutils.ϒurl_or_none
		BrightcoveNewIE = Ωbrightcove.BrightcoveNewIE
		YahooIE = λ.Cal(λ.TypeType, λ.NewStr("YahooIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				YahooIE__TESTS        λ.Object
				YahooIE__VALID_URL    λ.Object
				YahooIE__real_extract λ.Object
			)
			YahooIE__VALID_URL = λ.NewStr("(?P<url>https?://(?:(?P<country>[a-zA-Z]{2}(?:-[a-zA-Z]{2})?|malaysia)\\.)?(?:[\\da-zA-Z_-]+\\.)?yahoo\\.com/(?:[^/]+/)*(?P<id>[^?&#]*-[0-9]+(?:-[a-z]+)?)\\.html)")
			YahooIE__TESTS = λ.NewList(
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("http://screen.yahoo.com/julian-smith-travis-legg-watch-214727115.html"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("2d25e626-2378-391f-ada0-ddaf1417e588"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("Julian Smith & Travis Legg Watch Julian Smith"),
						λ.NewStr("description"): λ.NewStr("Julian and Travis watch Julian Smith"),
						λ.NewStr("duration"):    λ.NewInt(6863),
						λ.NewStr("timestamp"):   λ.NewInt(1369812016),
						λ.NewStr("upload_date"): λ.NewStr("20130529"),
					}),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("https://screen.yahoo.com/community/community-sizzle-reel-203225340.html?format=embed"),
					λ.NewStr("md5"): λ.NewStr("7993e572fac98e044588d0b5260f4352"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("4fe78544-8d48-39d8-97cd-13f205d9fcdb"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("Yahoo Saves 'Community'"),
						λ.NewStr("description"): λ.NewStr("md5:4d4145af2fd3de00cbb6c1d664105053"),
						λ.NewStr("duration"):    λ.NewInt(170),
						λ.NewStr("timestamp"):   λ.NewInt(1406838636),
						λ.NewStr("upload_date"): λ.NewStr("20140731"),
					}),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("https://uk.screen.yahoo.com/editor-picks/cute-raccoon-freed-drain-using-091756545.html"),
					λ.NewStr("md5"): λ.NewStr("71298482f7c64cbb7fa064e4553ff1c1"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("b3affa53-2e14-3590-852b-0e0db6cd1a58"),
						λ.NewStr("ext"):         λ.NewStr("webm"),
						λ.NewStr("title"):       λ.NewStr("Cute Raccoon Freed From Drain Using Angle Grinder"),
						λ.NewStr("description"): λ.NewStr("md5:f66c890e1490f4910a9953c941dee944"),
						λ.NewStr("duration"):    λ.NewInt(97),
						λ.NewStr("timestamp"):   λ.NewInt(1414489862),
						λ.NewStr("upload_date"): λ.NewStr("20141028"),
					}),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("http://news.yahoo.com/video/china-moses-crazy-blues-104538833.html"),
					λ.NewStr("md5"): λ.NewStr("88e209b417f173d86186bef6e4d1f160"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("f885cf7f-43d4-3450-9fac-46ac30ece521"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("China Moses Is Crazy About the Blues"),
						λ.NewStr("description"): λ.NewStr("md5:9900ab8cd5808175c7b3fe55b979bed0"),
						λ.NewStr("duration"):    λ.NewInt(128),
						λ.NewStr("timestamp"):   λ.NewInt(1385722202),
						λ.NewStr("upload_date"): λ.NewStr("20131129"),
					}),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("https://www.yahoo.com/movies/v/true-story-trailer-173000497.html"),
					λ.NewStr("md5"): λ.NewStr("2a9752f74cb898af5d1083ea9f661b58"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("071c4013-ce30-3a93-a5b2-e0413cd4a9d1"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("'True Story' Trailer"),
						λ.NewStr("description"): λ.NewStr("True Story"),
						λ.NewStr("duration"):    λ.NewInt(150),
						λ.NewStr("timestamp"):   λ.NewInt(1418919206),
						λ.NewStr("upload_date"): λ.NewStr("20141218"),
					}),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("https://gma.yahoo.com/pizza-delivery-man-surprised-huge-tip-college-kids-195200785.html"),
					λ.NewStr("only_matching"): λ.True,
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("note"): λ.NewStr("NBC Sports embeds"),
					λ.NewStr("url"):  λ.NewStr("http://sports.yahoo.com/blogs/ncaab-the-dagger/tyler-kalinoski-s-buzzer-beater-caps-davidson-s-comeback-win-185609842.html?guid=nbc_cbk_davidsonbuzzerbeater_150313"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("9CsDKds0kvHI"),
						λ.NewStr("ext"):         λ.NewStr("flv"),
						λ.NewStr("description"): λ.NewStr("md5:df390f70a9ba7c95ff1daace988f0d8d"),
						λ.NewStr("title"):       λ.NewStr("Tyler Kalinoski hits buzzer-beater to lift Davidson"),
						λ.NewStr("upload_date"): λ.NewStr("20150313"),
						λ.NewStr("uploader"):    λ.NewStr("NBCU-SPORTS"),
						λ.NewStr("timestamp"):   λ.NewInt(1426270238),
					}),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("https://tw.news.yahoo.com/-100120367.html"),
					λ.NewStr("only_matching"): λ.True,
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("https://screen.yahoo.com/community/communitary-community-episode-1-ladders-154501237.html"),
					λ.NewStr("md5"): λ.NewStr("4fbafb9c9b6f07aa8f870629f6671b35"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):             λ.NewStr("1f32853c-a271-3eef-8cb6-f6d6872cb504"),
						λ.NewStr("ext"):            λ.NewStr("mp4"),
						λ.NewStr("title"):          λ.NewStr("Communitary - Community Episode 1: Ladders"),
						λ.NewStr("description"):    λ.NewStr("md5:8fc39608213295748e1e289807838c97"),
						λ.NewStr("duration"):       λ.NewInt(1646),
						λ.NewStr("timestamp"):      λ.NewInt(1440436550),
						λ.NewStr("upload_date"):    λ.NewStr("20150824"),
						λ.NewStr("series"):         λ.NewStr("Communitary"),
						λ.NewStr("season_number"):  λ.NewInt(6),
						λ.NewStr("episode_number"): λ.NewInt(1),
					}),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("https://tw.video.yahoo.com/movie-tw/單車天使-中文版預-092316541.html"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("ba133ff2-0793-3510-b636-59dfe9ff6cff"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("單車天使 - 中文版預"),
						λ.NewStr("description"): λ.NewStr("中文版預"),
						λ.NewStr("timestamp"):   λ.NewInt(1476696196),
						λ.NewStr("upload_date"): λ.NewStr("20161017"),
					}),
					λ.NewStr("params"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("skip_download"): λ.True,
					}),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("https://www.yahoo.com/entertainment/gwen-stefani-reveals-the-pop-hit-she-passed-on-assigns-it-to-her-voice-contestant-instead-033045672.html"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("46c5d95a-528f-3d03-b732-732fcadd51de"),
						λ.NewStr("title"):       λ.NewStr("Gwen Stefani reveals the pop hit she passed on, assigns it to her 'Voice' contestant instead"),
						λ.NewStr("description"): λ.NewStr("Gwen decided not to record this hit herself, but she decided it was the perfect fit for Kyndall Inskeep."),
					}),
					λ.NewStr("playlist"): λ.NewList(
						λ.NewDictWithTable(map[λ.Object]λ.Object{
							λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
								λ.NewStr("id"):          λ.NewStr("966d4262-4fd1-3aaa-b45b-049ca6e38ba6"),
								λ.NewStr("ext"):         λ.NewStr("mp4"),
								λ.NewStr("title"):       λ.NewStr("Gwen Stefani reveals she turned down one of Sia's best songs"),
								λ.NewStr("description"): λ.NewStr("On \"The Voice\" Tuesday, Gwen Stefani told Taylor Swift which Sia hit was almost hers."),
								λ.NewStr("timestamp"):   λ.NewInt(1572406500),
								λ.NewStr("upload_date"): λ.NewStr("20191030"),
							}),
						}),
						λ.NewDictWithTable(map[λ.Object]λ.Object{
							λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
								λ.NewStr("id"):          λ.NewStr("352CFDOQrKg"),
								λ.NewStr("ext"):         λ.NewStr("mp4"),
								λ.NewStr("title"):       λ.NewStr("Kyndal Inskeep \"Performs the Hell Out of\" Sia's \"Elastic Heart\" - The Voice Knockouts 2019"),
								λ.NewStr("description"): λ.NewStr("md5:35b61e94c2ae214bc965ff4245f80d11"),
								λ.NewStr("uploader"):    λ.NewStr("The Voice"),
								λ.NewStr("uploader_id"): λ.NewStr("NBCTheVoice"),
								λ.NewStr("upload_date"): λ.NewStr("20191029"),
							}),
						}),
					),
					λ.NewStr("params"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("playlistend"): λ.NewInt(2),
					}),
					λ.NewStr("expected_warnings"): λ.NewList(λ.NewStr("HTTP Error 404")),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("https://malaysia.news.yahoo.com/video/bystanders-help-ontario-policeman-bust-190932818.html"),
					λ.NewStr("only_matching"): λ.True,
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("https://es-us.noticias.yahoo.com/es-la-puerta-irrompible-que-110539379.html"),
					λ.NewStr("only_matching"): λ.True,
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("https://www.yahoo.com/entertainment/v/longtime-cbs-news-60-minutes-032036500-cbs.html"),
					λ.NewStr("only_matching"): λ.True,
				}),
			)
			YahooIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒapi_base      λ.Object
						ϒcc            λ.Object
						ϒcc_url        λ.Object
						ϒcontent       λ.Object
						ϒcountry       λ.Object
						ϒcover         λ.Object
						ϒcover_url     λ.Object
						ϒdisplay_id    λ.Object
						ϒe             λ.Object
						ϒentries       λ.Object
						ϒfmt           λ.Object
						ϒfmts          λ.Object
						ϒformats       λ.Object
						ϒhost          λ.Object
						ϒi             λ.Object
						ϒiframe_url    λ.Object
						ϒis_live       λ.Object
						ϒitem          λ.Object
						ϒmedia_obj     λ.Object
						ϒmsg           λ.Object
						ϒpath          λ.Object
						ϒs             λ.Object
						ϒs_url         λ.Object
						ϒself          = λargs[0]
						ϒseries_info   λ.Object
						ϒstreaming_url λ.Object
						ϒsubtitles     λ.Object
						ϒtbr           λ.Object
						ϒthumb         λ.Object
						ϒthumb_url     λ.Object
						ϒthumbnails    λ.Object
						ϒtitle         λ.Object
						ϒurl           = λargs[1]
						ϒurls          λ.Object
						ϒuuid          λ.Object
						ϒvideo         λ.Object
						ϒvideo_id      λ.Object
						τmp0           λ.Object
						τmp1           λ.Object
						τmp2           λ.Object
						τmp3           λ.Object
					)
					τmp0 = λ.Cal(λ.GetAttr(λ.Cal(Ωre.ϒmatch, λ.GetAttr(ϒself, "_VALID_URL", nil), ϒurl), "groups", nil))
					ϒurl = λ.GetItem(τmp0, λ.NewInt(0))
					ϒcountry = λ.GetItem(τmp0, λ.NewInt(1))
					ϒdisplay_id = λ.GetItem(τmp0, λ.NewInt(2))
					if λ.IsTrue(λ.NewBool(!λ.IsTrue(ϒcountry))) {
						ϒcountry = λ.NewStr("us")
					} else {
						ϒcountry = λ.GetItem(λ.Cal(λ.GetAttr(ϒcountry, "split", nil), λ.NewStr("-")), λ.NewInt(0))
					}
					ϒapi_base = λ.Mod(λ.NewStr("https://%s.yahoo.com/_td/api/resource/"), ϒcountry)
					τmp0 = λ.Cal(λ.BuiltinIter, λ.Cal(λ.EnumerateIteratorType, λ.NewList(
						λ.Add(λ.NewStr("url="), ϒurl),
						λ.Add(λ.NewStr("ymedia-alias="), ϒdisplay_id),
					)))
					for {
						if τmp1 = λ.NextDefault(τmp0, λ.AfterLast); τmp1 == λ.AfterLast {
							break
						}
						τmp2 = τmp1
						ϒi = λ.GetItem(τmp2, λ.NewInt(0))
						ϒuuid = λ.GetItem(τmp2, λ.NewInt(1))
						ϒcontent = λ.Call(λ.GetAttr(ϒself, "_download_json", nil), λ.NewArgs(
							λ.Add(ϒapi_base, λ.Mod(λ.NewStr("content;getDetailView=true;uuids=[\"%s\"]"), ϒuuid)),
							ϒdisplay_id,
							λ.NewStr("Downloading content JSON metadata"),
						), λ.KWArgs{
							{Name: "fatal", Value: λ.Eq(ϒi, λ.NewInt(1))},
						})
						if λ.IsTrue(ϒcontent) {
							ϒitem = λ.GetItem(λ.GetItem(ϒcontent, λ.NewStr("items")), λ.NewInt(0))
							break
						}
					}
					if λ.IsTrue(λ.Ne(λ.Cal(λ.GetAttr(ϒitem, "get", nil), λ.NewStr("type")), λ.NewStr("video"))) {
						ϒentries = λ.NewList()
						ϒcover = func() λ.Object {
							if λv := λ.Cal(λ.GetAttr(ϒitem, "get", nil), λ.NewStr("cover")); λ.IsTrue(λv) {
								return λv
							} else {
								return λ.NewDictWithTable(map[λ.Object]λ.Object{})
							}
						}()
						if λ.IsTrue(λ.Eq(λ.Cal(λ.GetAttr(ϒcover, "get", nil), λ.NewStr("type")), λ.NewStr("yvideo"))) {
							ϒcover_url = λ.Cal(λ.GetAttr(ϒcover, "get", nil), λ.NewStr("url"))
							if λ.IsTrue(ϒcover_url) {
								λ.Cal(λ.GetAttr(ϒentries, "append", nil), λ.Cal(λ.GetAttr(ϒself, "url_result", nil), ϒcover_url, λ.NewStr("Yahoo"), λ.Cal(λ.GetAttr(ϒcover, "get", nil), λ.NewStr("uuid"))))
							}
						}
						τmp0 = λ.Cal(λ.BuiltinIter, λ.Cal(λ.GetAttr(ϒitem, "get", nil), λ.NewStr("body"), λ.NewList()))
						for {
							if τmp1 = λ.NextDefault(τmp0, λ.AfterLast); τmp1 == λ.AfterLast {
								break
							}
							ϒe = τmp1
							if λ.IsTrue(λ.Eq(λ.Cal(λ.GetAttr(ϒe, "get", nil), λ.NewStr("type")), λ.NewStr("videoIframe"))) {
								ϒiframe_url = λ.Cal(λ.GetAttr(ϒe, "get", nil), λ.NewStr("url"))
								if λ.IsTrue(λ.NewBool(!λ.IsTrue(ϒiframe_url))) {
									continue
								}
								λ.Cal(λ.GetAttr(ϒentries, "append", nil), λ.Cal(λ.GetAttr(ϒself, "url_result", nil), ϒiframe_url))
							}
						}
						return λ.Cal(λ.GetAttr(ϒself, "playlist_result", nil), ϒentries, λ.Cal(λ.GetAttr(ϒitem, "get", nil), λ.NewStr("uuid")), λ.Cal(λ.GetAttr(ϒitem, "get", nil), λ.NewStr("title")), λ.Cal(λ.GetAttr(ϒitem, "get", nil), λ.NewStr("summary")))
					}
					ϒvideo_id = λ.GetItem(ϒitem, λ.NewStr("uuid"))
					ϒvideo = λ.GetItem(λ.Cal(λ.GetAttr(ϒself, "_download_json", nil), λ.Add(ϒapi_base, λ.Mod(λ.NewStr("VideoService.videos;view=full;video_ids=[\"%s\"]"), ϒvideo_id)), ϒvideo_id, λ.NewStr("Downloading video JSON metadata")), λ.NewInt(0))
					ϒtitle = λ.GetItem(ϒvideo, λ.NewStr("title"))
					if λ.IsTrue(λ.Eq(ϒcountry, λ.NewStr("malaysia"))) {
						ϒcountry = λ.NewStr("my")
					}
					ϒis_live = λ.Eq(λ.Cal(λ.GetAttr(ϒvideo, "get", nil), λ.NewStr("live_state")), λ.NewStr("live"))
					ϒfmts = func() λ.Object {
						if λ.IsTrue(ϒis_live) {
							return λ.NewTuple(λ.NewStr("m3u8"))
						} else {
							return λ.NewTuple(
								λ.NewStr("webm"),
								λ.NewStr("mp4"),
							)
						}
					}()
					ϒurls = λ.NewList()
					ϒformats = λ.NewList()
					ϒsubtitles = λ.NewDictWithTable(map[λ.Object]λ.Object{})
					τmp0 = λ.Cal(λ.BuiltinIter, ϒfmts)
					for {
						if τmp1 = λ.NextDefault(τmp0, λ.AfterLast); τmp1 == λ.AfterLast {
							break
						}
						ϒfmt = τmp1
						ϒmedia_obj = λ.GetItem(λ.GetItem(λ.GetItem(λ.GetItem(λ.Call(λ.GetAttr(ϒself, "_download_json", nil), λ.NewArgs(
							λ.Add(λ.NewStr("https://video-api.yql.yahoo.com/v1/video/sapi/streams/"), ϒvideo_id),
							ϒvideo_id,
							λ.Mod(λ.NewStr("Downloading %s JSON metadata"), ϒfmt),
						), λ.KWArgs{
							{Name: "headers", Value: λ.Cal(λ.GetAttr(ϒself, "geo_verification_headers", nil))},
							{Name: "query", Value: λ.NewDictWithTable(map[λ.Object]λ.Object{
								λ.NewStr("format"): ϒfmt,
								λ.NewStr("region"): λ.Cal(λ.GetAttr(ϒcountry, "upper", nil)),
							})},
						}), λ.NewStr("query")), λ.NewStr("results")), λ.NewStr("mediaObj")), λ.NewInt(0))
						ϒmsg = λ.Cal(λ.GetAttr(λ.Cal(λ.GetAttr(ϒmedia_obj, "get", nil), λ.NewStr("status"), λ.NewDictWithTable(map[λ.Object]λ.Object{})), "get", nil), λ.NewStr("msg"))
						τmp2 = λ.Cal(λ.BuiltinIter, λ.Cal(λ.GetAttr(ϒmedia_obj, "get", nil), λ.NewStr("streams"), λ.NewList()))
						for {
							if τmp3 = λ.NextDefault(τmp2, λ.AfterLast); τmp3 == λ.AfterLast {
								break
							}
							ϒs = τmp3
							ϒhost = λ.Cal(λ.GetAttr(ϒs, "get", nil), λ.NewStr("host"))
							ϒpath = λ.Cal(λ.GetAttr(ϒs, "get", nil), λ.NewStr("path"))
							if λ.IsTrue(func() λ.Object {
								if λv := λ.NewBool(!λ.IsTrue(ϒhost)); λ.IsTrue(λv) {
									return λv
								} else {
									return λ.NewBool(!λ.IsTrue(ϒpath))
								}
							}()) {
								continue
							}
							ϒs_url = λ.Add(ϒhost, ϒpath)
							if λ.IsTrue(λ.Eq(λ.Cal(λ.GetAttr(ϒs, "get", nil), λ.NewStr("format")), λ.NewStr("m3u8"))) {
								λ.Cal(λ.GetAttr(ϒformats, "extend", nil), λ.Call(λ.GetAttr(ϒself, "_extract_m3u8_formats", nil), λ.NewArgs(
									ϒs_url,
									ϒvideo_id,
									λ.NewStr("mp4"),
								), λ.KWArgs{
									{Name: "m3u8_id", Value: λ.NewStr("hls")},
									{Name: "fatal", Value: λ.False},
								}))
								continue
							}
							ϒtbr = λ.Cal(ϒint_or_none, λ.Cal(λ.GetAttr(ϒs, "get", nil), λ.NewStr("bitrate")))
							λ.Cal(λ.GetAttr(ϒformats, "append", nil), λ.NewDictWithTable(map[λ.Object]λ.Object{
								λ.NewStr("url"): ϒs_url,
								λ.NewStr("format_id"): λ.Add(ϒfmt, func() λ.Object {
									if λ.IsTrue(ϒtbr) {
										return λ.Mod(λ.NewStr("-%d"), ϒtbr)
									} else {
										return λ.NewStr("")
									}
								}()),
								λ.NewStr("width"):  λ.Cal(ϒint_or_none, λ.Cal(λ.GetAttr(ϒs, "get", nil), λ.NewStr("width"))),
								λ.NewStr("height"): λ.Cal(ϒint_or_none, λ.Cal(λ.GetAttr(ϒs, "get", nil), λ.NewStr("height"))),
								λ.NewStr("tbr"):    ϒtbr,
								λ.NewStr("fps"):    λ.Cal(ϒint_or_none, λ.Cal(λ.GetAttr(ϒs, "get", nil), λ.NewStr("framerate"))),
							}))
						}
						τmp2 = λ.Cal(λ.BuiltinIter, λ.Cal(λ.GetAttr(ϒmedia_obj, "get", nil), λ.NewStr("closedcaptions"), λ.NewList()))
						for {
							if τmp3 = λ.NextDefault(τmp2, λ.AfterLast); τmp3 == λ.AfterLast {
								break
							}
							ϒcc = τmp3
							ϒcc_url = λ.Cal(λ.GetAttr(ϒcc, "get", nil), λ.NewStr("url"))
							if λ.IsTrue(func() λ.Object {
								if λv := λ.NewBool(!λ.IsTrue(ϒcc_url)); λ.IsTrue(λv) {
									return λv
								} else {
									return λ.NewBool(λ.Contains(ϒurls, ϒcc_url))
								}
							}()) {
								continue
							}
							λ.Cal(λ.GetAttr(ϒurls, "append", nil), ϒcc_url)
							λ.Cal(λ.GetAttr(λ.Cal(λ.GetAttr(ϒsubtitles, "setdefault", nil), func() λ.Object {
								if λv := λ.Cal(λ.GetAttr(ϒcc, "get", nil), λ.NewStr("lang")); λ.IsTrue(λv) {
									return λv
								} else {
									return λ.NewStr("en-US")
								}
							}(), λ.NewList()), "append", nil), λ.NewDictWithTable(map[λ.Object]λ.Object{
								λ.NewStr("url"): ϒcc_url,
								λ.NewStr("ext"): λ.Cal(ϒmimetype2ext, λ.Cal(λ.GetAttr(ϒcc, "get", nil), λ.NewStr("content_type"))),
							}))
						}
					}
					ϒstreaming_url = λ.Cal(λ.GetAttr(ϒvideo, "get", nil), λ.NewStr("streaming_url"))
					if λ.IsTrue(func() λ.Object {
						if λv := ϒstreaming_url; !λ.IsTrue(λv) {
							return λv
						} else {
							return λ.NewBool(!λ.IsTrue(ϒis_live))
						}
					}()) {
						λ.Cal(λ.GetAttr(ϒformats, "extend", nil), λ.Call(λ.GetAttr(ϒself, "_extract_m3u8_formats", nil), λ.NewArgs(
							ϒstreaming_url,
							ϒvideo_id,
							λ.NewStr("mp4"),
							λ.NewStr("m3u8_native"),
						), λ.KWArgs{
							{Name: "m3u8_id", Value: λ.NewStr("hls")},
							{Name: "fatal", Value: λ.False},
						}))
					}
					if λ.IsTrue(func() λ.Object {
						if λv := λ.NewBool(!λ.IsTrue(ϒformats)); !λ.IsTrue(λv) {
							return λv
						} else {
							return λ.Eq(ϒmsg, λ.NewStr("geo restricted"))
						}
					}()) {
						λ.Cal(λ.GetAttr(ϒself, "raise_geo_restricted", nil))
					}
					λ.Cal(λ.GetAttr(ϒself, "_sort_formats", nil), ϒformats)
					ϒthumbnails = λ.NewList()
					τmp0 = λ.Cal(λ.BuiltinIter, λ.Cal(λ.GetAttr(ϒvideo, "get", nil), λ.NewStr("thumbnails"), λ.NewList()))
					for {
						if τmp1 = λ.NextDefault(τmp0, λ.AfterLast); τmp1 == λ.AfterLast {
							break
						}
						ϒthumb = τmp1
						ϒthumb_url = λ.Cal(λ.GetAttr(ϒthumb, "get", nil), λ.NewStr("url"))
						if λ.IsTrue(λ.NewBool(!λ.IsTrue(ϒthumb_url))) {
							continue
						}
						λ.Cal(λ.GetAttr(ϒthumbnails, "append", nil), λ.NewDictWithTable(map[λ.Object]λ.Object{
							λ.NewStr("id"):     λ.Cal(λ.GetAttr(ϒthumb, "get", nil), λ.NewStr("tag")),
							λ.NewStr("url"):    λ.Cal(λ.GetAttr(ϒthumb, "get", nil), λ.NewStr("url")),
							λ.NewStr("width"):  λ.Cal(ϒint_or_none, λ.Cal(λ.GetAttr(ϒthumb, "get", nil), λ.NewStr("width"))),
							λ.NewStr("height"): λ.Cal(ϒint_or_none, λ.Cal(λ.GetAttr(ϒthumb, "get", nil), λ.NewStr("height"))),
						}))
					}
					ϒseries_info = func() λ.Object {
						if λv := λ.Cal(λ.GetAttr(ϒvideo, "get", nil), λ.NewStr("series_info")); λ.IsTrue(λv) {
							return λv
						} else {
							return λ.NewDictWithTable(map[λ.Object]λ.Object{})
						}
					}()
					return λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"): ϒvideo_id,
						λ.NewStr("title"): func() λ.Object {
							if λ.IsTrue(ϒis_live) {
								return λ.Cal(λ.GetAttr(ϒself, "_live_title", nil), ϒtitle)
							} else {
								return ϒtitle
							}
						}(),
						λ.NewStr("formats"):        ϒformats,
						λ.NewStr("display_id"):     ϒdisplay_id,
						λ.NewStr("thumbnails"):     ϒthumbnails,
						λ.NewStr("description"):    λ.Cal(ϒclean_html, λ.Cal(λ.GetAttr(ϒvideo, "get", nil), λ.NewStr("description"))),
						λ.NewStr("timestamp"):      λ.Cal(ϒparse_iso8601, λ.Cal(λ.GetAttr(ϒvideo, "get", nil), λ.NewStr("publish_time"))),
						λ.NewStr("subtitles"):      ϒsubtitles,
						λ.NewStr("duration"):       λ.Cal(ϒint_or_none, λ.Cal(λ.GetAttr(ϒvideo, "get", nil), λ.NewStr("duration"))),
						λ.NewStr("view_count"):     λ.Cal(ϒint_or_none, λ.Cal(λ.GetAttr(ϒvideo, "get", nil), λ.NewStr("view_count"))),
						λ.NewStr("is_live"):        ϒis_live,
						λ.NewStr("series"):         λ.Cal(λ.GetAttr(ϒvideo, "get", nil), λ.NewStr("show_name")),
						λ.NewStr("season_number"):  λ.Cal(ϒint_or_none, λ.Cal(λ.GetAttr(ϒseries_info, "get", nil), λ.NewStr("season_number"))),
						λ.NewStr("episode_number"): λ.Cal(ϒint_or_none, λ.Cal(λ.GetAttr(ϒseries_info, "get", nil), λ.NewStr("episode_number"))),
					})
				})
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_TESTS"):        YahooIE__TESTS,
				λ.NewStr("_VALID_URL"):    YahooIE__VALID_URL,
				λ.NewStr("_real_extract"): YahooIE__real_extract,
			})
		}())
		YahooGyaOPlayerIE = λ.Cal(λ.TypeType, λ.NewStr("YahooGyaOPlayerIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				YahooGyaOPlayerIE__VALID_URL λ.Object
			)
			YahooGyaOPlayerIE__VALID_URL = λ.NewStr("https?://(?:gyao\\.yahoo\\.co\\.jp/(?:player|episode/[^/]+)|streaming\\.yahoo\\.co\\.jp/c/y)/(?P<id>\\d+/v\\d+/v\\d+|[\\da-f]{8}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{12})")
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_VALID_URL"): YahooGyaOPlayerIE__VALID_URL,
			})
		}())
		YahooGyaOIE = λ.Cal(λ.TypeType, λ.NewStr("YahooGyaOIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				YahooGyaOIE__VALID_URL λ.Object
			)
			YahooGyaOIE__VALID_URL = λ.NewStr("https?://(?:gyao\\.yahoo\\.co\\.jp/(?:p|title/[^/]+)|streaming\\.yahoo\\.co\\.jp/p/y)/(?P<id>\\d+/v\\d+|[\\da-f]{8}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{12})")
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_VALID_URL"): YahooGyaOIE__VALID_URL,
			})
		}())
		YahooJapanNewsIE = λ.Cal(λ.TypeType, λ.NewStr("YahooJapanNewsIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				YahooJapanNewsIE__VALID_URL λ.Object
			)
			YahooJapanNewsIE__VALID_URL = λ.NewStr("https?://(?P<host>(?:news|headlines)\\.yahoo\\.co\\.jp)[^\\d]*(?P<id>\\d[\\d-]*\\d)?")
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_VALID_URL"): YahooJapanNewsIE__VALID_URL,
			})
		}())
	})
}
