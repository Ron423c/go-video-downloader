// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * hellporno/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/hellporno.py
 */

package hellporno

import (
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	HellPornoIE        λ.Object
	InfoExtractor      λ.Object
	ϒint_or_none       λ.Object
	ϒmerge_dicts       λ.Object
	ϒremove_end        λ.Object
	ϒunified_timestamp λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ϒint_or_none = Ωutils.ϒint_or_none
		ϒmerge_dicts = Ωutils.ϒmerge_dicts
		ϒremove_end = Ωutils.ϒremove_end
		ϒunified_timestamp = Ωutils.ϒunified_timestamp
		HellPornoIE = λ.Cal(λ.TypeType, λ.StrLiteral("HellPornoIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				HellPornoIE__VALID_URL    λ.Object
				HellPornoIE__real_extract λ.Object
			)
			HellPornoIE__VALID_URL = λ.StrLiteral("https?://(?:www\\.)?hellporno\\.(?:com/videos|net/v)/(?P<id>[^/]+)")
			HellPornoIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒcategories  λ.Object
						ϒdescription λ.Object
						ϒdisplay_id  λ.Object
						ϒduration    λ.Object
						ϒinfo        λ.Object
						ϒself        = λargs[0]
						ϒtimestamp   λ.Object
						ϒtitle       λ.Object
						ϒurl         = λargs[1]
						ϒvideo_id    λ.Object
						ϒview_count  λ.Object
						ϒwebpage     λ.Object
					)
					ϒdisplay_id = λ.Calm(ϒself, "_match_id", ϒurl)
					ϒwebpage = λ.Calm(ϒself, "_download_webpage", ϒurl, ϒdisplay_id)
					ϒtitle = λ.Cal(ϒremove_end, λ.Calm(ϒself, "_html_search_regex", λ.StrLiteral("<title>([^<]+)</title>"), ϒwebpage, λ.StrLiteral("title")), λ.StrLiteral(" - Hell Porno"))
					ϒinfo = λ.GetItem(λ.Calm(ϒself, "_parse_html5_media_entries", ϒurl, ϒwebpage, ϒdisplay_id), λ.IntLiteral(0))
					λ.Calm(ϒself, "_sort_formats", λ.GetItem(ϒinfo, λ.StrLiteral("formats")))
					ϒvideo_id = λ.Call(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewArgs(
						λ.NewTuple(
							λ.StrLiteral("chs_object\\s*=\\s*[\"\\'](\\d+)"),
							λ.StrLiteral("params\\[[\"\\']video_id[\"\\']\\]\\s*=\\s*(\\d+)"),
						),
						ϒwebpage,
						λ.StrLiteral("video id"),
					), λ.KWArgs{
						{Name: "default", Value: ϒdisplay_id},
					})
					ϒdescription = λ.Call(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewArgs(
						λ.StrLiteral("class=[\"\\']desc_video_view_v2[^>]+>([^<]+)"),
						ϒwebpage,
						λ.StrLiteral("description"),
					), λ.KWArgs{
						{Name: "fatal", Value: λ.False},
					})
					ϒcategories = λ.Cal(λ.ListType, λ.Cal(λ.NewFunction("<generator>",
						nil,
						0, false, false,
						func(λargs []λ.Object) λ.Object {
							return λ.NewGenerator(func(λgy λ.Yielder) λ.Object {
								var (
									ϒc   λ.Object
									τmp0 λ.Object
									τmp1 λ.Object
								)
								τmp0 = λ.Cal(λ.BuiltinIter, λ.Calm(λ.Call(λ.GetAttr(ϒself, "_html_search_meta", nil), λ.NewArgs(
									λ.StrLiteral("keywords"),
									ϒwebpage,
									λ.StrLiteral("categories"),
								), λ.KWArgs{
									{Name: "default", Value: λ.StrLiteral("")},
								}), "split", λ.StrLiteral(",")))
								for {
									if τmp1 = λ.NextDefault(τmp0, λ.AfterLast); τmp1 == λ.AfterLast {
										break
									}
									ϒc = τmp1
									if λ.IsTrue(λ.Calm(ϒc, "strip")) {
										λgy.Yield(λ.Calm(ϒc, "strip"))
									}
								}
								return λ.None
							})
						})))
					ϒduration = λ.Cal(ϒint_or_none, λ.Call(λ.GetAttr(ϒself, "_og_search_property", nil), λ.NewArgs(
						λ.StrLiteral("video:duration"),
						ϒwebpage,
					), λ.KWArgs{
						{Name: "fatal", Value: λ.False},
					}))
					ϒtimestamp = λ.Cal(ϒunified_timestamp, λ.Call(λ.GetAttr(ϒself, "_og_search_property", nil), λ.NewArgs(
						λ.StrLiteral("video:release_date"),
						ϒwebpage,
					), λ.KWArgs{
						{Name: "fatal", Value: λ.False},
					}))
					ϒview_count = λ.Cal(ϒint_or_none, λ.Call(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewArgs(
						λ.StrLiteral(">Views\\s+(\\d+)"),
						ϒwebpage,
						λ.StrLiteral("view count"),
					), λ.KWArgs{
						{Name: "fatal", Value: λ.False},
					}))
					return λ.Cal(ϒmerge_dicts, ϒinfo, λ.DictLiteral(map[string]λ.Object{
						"id":          ϒvideo_id,
						"display_id":  ϒdisplay_id,
						"title":       ϒtitle,
						"description": ϒdescription,
						"categories":  ϒcategories,
						"duration":    ϒduration,
						"timestamp":   ϒtimestamp,
						"view_count":  ϒview_count,
						"age_limit":   λ.IntLiteral(18),
					}))
				})
			return λ.ClassDictLiteral(map[string]λ.Object{
				"_VALID_URL":    HellPornoIE__VALID_URL,
				"_real_extract": HellPornoIE__real_extract,
			})
		}())
	})
}
