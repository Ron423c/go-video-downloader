// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * abcnews/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/abcnews.py
 */

package abcnews

import (
	Ωre "github.com/tenta-browser/go-video-downloader/gen/re"
	Ωamp "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/amp"
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωyoutube "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/youtube"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	AMPIE          λ.Object
	AbcNewsIE      λ.Object
	AbcNewsVideoIE λ.Object
	InfoExtractor  λ.Object
	YoutubeIE      λ.Object
)

func init() {
	λ.InitModule(func() {
		AMPIE = Ωamp.AMPIE
		InfoExtractor = Ωcommon.InfoExtractor
		YoutubeIE = Ωyoutube.YoutubeIE
		AbcNewsVideoIE = λ.Cal(λ.TypeType, λ.NewStr("AbcNewsVideoIE"), λ.NewTuple(AMPIE), func() λ.Dict {
			var (
				AbcNewsVideoIE_IE_NAME       λ.Object
				AbcNewsVideoIE__VALID_URL    λ.Object
				AbcNewsVideoIE__real_extract λ.Object
			)
			AbcNewsVideoIE_IE_NAME = λ.NewStr("abcnews:video")
			AbcNewsVideoIE__VALID_URL = λ.NewStr("(?x)\n                    https?://\n                        (?:\n                            abcnews\\.go\\.com/\n                            (?:\n                                [^/]+/video/(?P<display_id>[0-9a-z-]+)-|\n                                video/embed\\?.*?\\bid=\n                            )|\n                            fivethirtyeight\\.abcnews\\.go\\.com/video/embed/\\d+/\n                        )\n                        (?P<id>\\d+)\n                    ")
			AbcNewsVideoIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒdisplay_id λ.Object
						ϒinfo_dict  λ.Object
						ϒmobj       λ.Object
						ϒself       = λargs[0]
						ϒurl        = λargs[1]
						ϒvideo_id   λ.Object
					)
					ϒmobj = λ.Cal(Ωre.ϒmatch, λ.GetAttr(ϒself, "_VALID_URL", nil), ϒurl)
					ϒdisplay_id = λ.Cal(λ.GetAttr(ϒmobj, "group", nil), λ.NewStr("display_id"))
					ϒvideo_id = λ.Cal(λ.GetAttr(ϒmobj, "group", nil), λ.NewStr("id"))
					ϒinfo_dict = λ.Cal(λ.GetAttr(ϒself, "_extract_feed_info", nil), λ.Mod(λ.NewStr("http://abcnews.go.com/video/itemfeed?id=%s"), ϒvideo_id))
					λ.Cal(λ.GetAttr(ϒinfo_dict, "update", nil), λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):         ϒvideo_id,
						λ.NewStr("display_id"): ϒdisplay_id,
					}))
					return ϒinfo_dict
				})
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("IE_NAME"):       AbcNewsVideoIE_IE_NAME,
				λ.NewStr("_VALID_URL"):    AbcNewsVideoIE__VALID_URL,
				λ.NewStr("_real_extract"): AbcNewsVideoIE__real_extract,
			})
		}())
		AbcNewsIE = λ.Cal(λ.TypeType, λ.NewStr("AbcNewsIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				AbcNewsIE__VALID_URL λ.Object
			)
			AbcNewsIE__VALID_URL = λ.NewStr("https?://abcnews\\.go\\.com/(?:[^/]+/)+(?P<display_id>[0-9a-z-]+)/story\\?id=(?P<id>\\d+)")
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_VALID_URL"): AbcNewsIE__VALID_URL,
			})
		}())
	})
}
