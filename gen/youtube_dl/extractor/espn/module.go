// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2019 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * espn/module.go: transpiled from https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/espn.py
 */

package espn

import (
	Ωcompat "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/compat"
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωonce "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/once"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	ESPNArticleIE      λ.Object
	ESPNIE             λ.Object
	FiveThirtyEightIE  λ.Object
	InfoExtractor      λ.Object
	OnceIE             λ.Object
	ϒcompat_str        λ.Object
	ϒdetermine_ext     λ.Object
	ϒint_or_none       λ.Object
	ϒunified_timestamp λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		OnceIE = Ωonce.OnceIE
		ϒcompat_str = Ωcompat.ϒcompat_str
		ϒdetermine_ext = Ωutils.ϒdetermine_ext
		ϒint_or_none = Ωutils.ϒint_or_none
		ϒunified_timestamp = Ωutils.ϒunified_timestamp
		ESPNIE = λ.Cal(λ.TypeType, λ.NewStr("ESPNIE"), λ.NewTuple(OnceIE), func() λ.Dict {
			var (
				ESPNIE__VALID_URL λ.Object
			)
			ESPNIE__VALID_URL = λ.NewStr("(?x)\n                    https?://\n                        (?:\n                            (?:\n                                (?:\n                                    (?:(?:\\w+\\.)+)?espn\\.go|\n                                    (?:www\\.)?espn\n                                )\\.com/\n                                (?:\n                                    (?:\n                                        video/(?:clip|iframe/twitter)|\n                                        watch/player\n                                    )\n                                    (?:\n                                        .*?\\?.*?\\bid=|\n                                        /_/id/\n                                    )|\n                                    [^/]+/video/\n                                )\n                            )|\n                            (?:www\\.)espnfc\\.(?:com|us)/(?:video/)?[^/]+/\\d+/video/\n                        )\n                        (?P<id>\\d+)\n                    ")
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_VALID_URL"): ESPNIE__VALID_URL,
			})
		}())
		ESPNArticleIE = λ.Cal(λ.TypeType, λ.NewStr("ESPNArticleIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				ESPNArticleIE__VALID_URL λ.Object
				ESPNArticleIE_suitable   λ.Object
			)
			ESPNArticleIE__VALID_URL = λ.NewStr("https?://(?:espn\\.go|(?:www\\.)?espn)\\.com/(?:[^/]+/)*(?P<id>[^/]+)")
			ESPNArticleIE_suitable = λ.NewFunction("suitable",
				[]λ.Param{
					{Name: "cls"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒcls = λargs[0]
						ϒurl = λargs[1]
					)
					return func() λ.Object {
						if λ.IsTrue(λ.Cal(λ.GetAttr(ESPNIE, "suitable", nil), ϒurl)) {
							return λ.False
						} else {
							return λ.Cal(λ.GetAttr(λ.Cal(λ.SuperType, ESPNArticleIE, ϒcls), "suitable", nil), ϒurl)
						}
					}()
				})
			ESPNArticleIE_suitable = λ.Cal(λ.ClassMethodType, ESPNArticleIE_suitable)
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_VALID_URL"): ESPNArticleIE__VALID_URL,
				λ.NewStr("suitable"):   ESPNArticleIE_suitable,
			})
		}())
		FiveThirtyEightIE = λ.Cal(λ.TypeType, λ.NewStr("FiveThirtyEightIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				FiveThirtyEightIE__TEST         λ.Object
				FiveThirtyEightIE__VALID_URL    λ.Object
				FiveThirtyEightIE__real_extract λ.Object
			)
			FiveThirtyEightIE__VALID_URL = λ.NewStr("https?://(?:www\\.)?fivethirtyeight\\.com/features/(?P<id>[^/?#]+)")
			FiveThirtyEightIE__TEST = λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("url"): λ.NewStr("http://fivethirtyeight.com/features/how-the-6-8-raiders-can-still-make-the-playoffs/"),
				λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("id"):          λ.NewStr("56032156"),
					λ.NewStr("ext"):         λ.NewStr("flv"),
					λ.NewStr("title"):       λ.NewStr("FiveThirtyEight: The Raiders can still make the playoffs"),
					λ.NewStr("description"): λ.NewStr("Neil Paine breaks down the simplest scenario that will put the Raiders into the playoffs at 8-8."),
				}),
				λ.NewStr("params"): λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("skip_download"): λ.True,
				}),
			})
			FiveThirtyEightIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒembed_url λ.Object
						ϒself      = λargs[0]
						ϒurl       = λargs[1]
						ϒvideo_id  λ.Object
						ϒwebpage   λ.Object
					)
					ϒvideo_id = λ.Cal(λ.GetAttr(ϒself, "_match_id", nil), ϒurl)
					ϒwebpage = λ.Cal(λ.GetAttr(ϒself, "_download_webpage", nil), ϒurl, ϒvideo_id)
					ϒembed_url = λ.Cal(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewStr("<iframe[^>]+src=[\"\\'](https?://fivethirtyeight\\.abcnews\\.go\\.com/video/embed/\\d+/\\d+)"), ϒwebpage, λ.NewStr("embed url"))
					return λ.Cal(λ.GetAttr(ϒself, "url_result", nil), ϒembed_url, λ.NewStr("AbcNewsVideo"))
				})
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_TEST"):         FiveThirtyEightIE__TEST,
				λ.NewStr("_VALID_URL"):    FiveThirtyEightIE__VALID_URL,
				λ.NewStr("_real_extract"): FiveThirtyEightIE__real_extract,
			})
		}())
	})
}
