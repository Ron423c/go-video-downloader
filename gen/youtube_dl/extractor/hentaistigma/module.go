// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2018 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * hentaistigma/module.go: transpiled from https://github.com/rg3/youtube-dl/blob/master/youtube_dl/extractor/hentaistigma.py
 */

package hentaistigma

import (
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	HentaiStigmaIE λ.Object
	InfoExtractor  λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		HentaiStigmaIE = λ.Cal(λ.TypeType, λ.NewStr("HentaiStigmaIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				HentaiStigmaIE__TEST         λ.Object
				HentaiStigmaIE__VALID_URL    λ.Object
				HentaiStigmaIE__real_extract λ.Object
			)
			HentaiStigmaIE__VALID_URL = λ.NewStr("^https?://hentai\\.animestigma\\.com/(?P<id>[^/]+)")
			HentaiStigmaIE__TEST = λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("url"): λ.NewStr("http://hentai.animestigma.com/inyouchuu-etsu-bonus/"),
				λ.NewStr("md5"): λ.NewStr("4e3d07422a68a4cc363d8f57c8bf0d23"),
				λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("id"):        λ.NewStr("inyouchuu-etsu-bonus"),
					λ.NewStr("ext"):       λ.NewStr("mp4"),
					λ.NewStr("title"):     λ.NewStr("Inyouchuu Etsu Bonus"),
					λ.NewStr("age_limit"): λ.NewInt(18),
				}),
			})
			HentaiStigmaIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒself         = λargs[0]
						ϒtitle        λ.Object
						ϒurl          = λargs[1]
						ϒvideo_id     λ.Object
						ϒvideo_url    λ.Object
						ϒwebpage      λ.Object
						ϒwrap_url     λ.Object
						ϒwrap_webpage λ.Object
					)
					ϒvideo_id = λ.Cal(λ.GetAttr(ϒself, "_match_id", nil), ϒurl)
					ϒwebpage = λ.Cal(λ.GetAttr(ϒself, "_download_webpage", nil), ϒurl, ϒvideo_id)
					ϒtitle = λ.Cal(λ.GetAttr(ϒself, "_html_search_regex", nil), λ.NewStr("<h2[^>]+class=\"posttitle\"[^>]*><a[^>]*>([^<]+)</a>"), ϒwebpage, λ.NewStr("title"))
					ϒwrap_url = λ.Cal(λ.GetAttr(ϒself, "_html_search_regex", nil), λ.NewStr("<iframe[^>]+src=\"([^\"]+mp4)\""), ϒwebpage, λ.NewStr("wrapper url"))
					ϒwrap_webpage = λ.Cal(λ.GetAttr(ϒself, "_download_webpage", nil), ϒwrap_url, ϒvideo_id)
					ϒvideo_url = λ.Cal(λ.GetAttr(ϒself, "_html_search_regex", nil), λ.NewStr("file\\s*:\\s*\"([^\"]+)\""), ϒwrap_webpage, λ.NewStr("video url"))
					return λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):        ϒvideo_id,
						λ.NewStr("url"):       ϒvideo_url,
						λ.NewStr("title"):     ϒtitle,
						λ.NewStr("age_limit"): λ.NewInt(18),
					})
				})
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_TEST"):         HentaiStigmaIE__TEST,
				λ.NewStr("_VALID_URL"):    HentaiStigmaIE__VALID_URL,
				λ.NewStr("_real_extract"): HentaiStigmaIE__real_extract,
			})
		}())
	})
}
