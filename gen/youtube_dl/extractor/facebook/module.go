// Code generated by transpiler. DO NOT EDIT.

/**
 * Go Video Downloader
 *
 *    Copyright 2018 Tenta, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * For any questions, please contact developer@tenta.io
 *
 * facebook/module.go: transpiled from https://github.com/rg3/youtube-dl/blob/master/youtube_dl/extractor/facebook.py
 */

package facebook

import (
	Ωre "github.com/tenta-browser/go-video-downloader/gen/re"
	Ωsocket "github.com/tenta-browser/go-video-downloader/gen/socket"
	Ωerror "github.com/tenta-browser/go-video-downloader/gen/urllib/error"
	Ωcompat "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/compat"
	Ωcommon "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/extractor/common"
	Ωutils "github.com/tenta-browser/go-video-downloader/gen/youtube_dl/utils"
	λ "github.com/tenta-browser/go-video-downloader/runtime"
)

var (
	ExtractorError                    λ.Object
	FacebookIE                        λ.Object
	FacebookPluginsVideoIE            λ.Object
	InfoExtractor                     λ.Object
	ϒclean_html                       λ.Object
	ϒcompat_etree_fromstring          λ.Object
	ϒcompat_http_client               λ.Object
	ϒcompat_urllib_parse_unquote      λ.Object
	ϒcompat_urllib_parse_unquote_plus λ.Object
	ϒerror_to_compat_str              λ.Object
	ϒget_element_by_id                λ.Object
	ϒint_or_none                      λ.Object
	ϒjs_to_json                       λ.Object
	ϒlimit_length                     λ.Object
	ϒparse_count                      λ.Object
	ϒsanitized_Request                λ.Object
	ϒtry_get                          λ.Object
	ϒurlencode_postdata               λ.Object
)

func init() {
	λ.InitModule(func() {
		InfoExtractor = Ωcommon.InfoExtractor
		ϒcompat_etree_fromstring = Ωcompat.ϒcompat_etree_fromstring
		ϒcompat_http_client = Ωcompat.ϒcompat_http_client
		ϒcompat_urllib_parse_unquote = Ωcompat.ϒcompat_urllib_parse_unquote
		ϒcompat_urllib_parse_unquote_plus = Ωcompat.ϒcompat_urllib_parse_unquote_plus
		ϒclean_html = Ωutils.ϒclean_html
		ϒerror_to_compat_str = Ωutils.ϒerror_to_compat_str
		ExtractorError = Ωutils.ExtractorError
		ϒget_element_by_id = Ωutils.ϒget_element_by_id
		ϒint_or_none = Ωutils.ϒint_or_none
		ϒjs_to_json = Ωutils.ϒjs_to_json
		ϒlimit_length = Ωutils.ϒlimit_length
		ϒparse_count = Ωutils.ϒparse_count
		ϒsanitized_Request = Ωutils.ϒsanitized_Request
		ϒtry_get = Ωutils.ϒtry_get
		ϒurlencode_postdata = Ωutils.ϒurlencode_postdata
		FacebookIE = λ.Cal(λ.TypeType, λ.NewStr("FacebookIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				FacebookIE_IE_NAME            λ.Object
				FacebookIE__CHROME_USER_AGENT λ.Object
				FacebookIE__NETRC_MACHINE     λ.Object
				FacebookIE__TESTS             λ.Object
				FacebookIE__VALID_URL         λ.Object
				FacebookIE__extract_from_url  λ.Object
				FacebookIE__login             λ.Object
				FacebookIE__real_extract      λ.Object
				FacebookIE__real_initialize   λ.Object
			)
			FacebookIE__VALID_URL = λ.NewStr("(?x)\n                (?:\n                    https?://\n                        (?:[\\w-]+\\.)?(?:facebook\\.com|facebookcorewwwi\\.onion)/\n                        (?:[^#]*?\\#!/)?\n                        (?:\n                            (?:\n                                video/video\\.php|\n                                photo\\.php|\n                                video\\.php|\n                                video/embed|\n                                story\\.php\n                            )\\?(?:.*?)(?:v|video_id|story_fbid)=|\n                            [^/]+/videos/(?:[^/]+/)?|\n                            [^/]+/posts/|\n                            groups/[^/]+/permalink/\n                        )|\n                    facebook:\n                )\n                (?P<id>[0-9]+)\n                ")
			FacebookIE__NETRC_MACHINE = λ.NewStr("facebook")
			FacebookIE_IE_NAME = λ.NewStr("facebook")
			FacebookIE__CHROME_USER_AGENT = λ.NewStr("Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.97 Safari/537.36")
			FacebookIE__TESTS = λ.NewList(
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("https://www.facebook.com/video.php?v=637842556329505&fref=nf"),
					λ.NewStr("md5"): λ.NewStr("6a40d33c0eccbb1af76cf0485a052659"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("637842556329505"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("re:Did you know Kei Nishikori is the first Asian man to ever reach a Grand Slam"),
						λ.NewStr("uploader"):    λ.NewStr("Tennis on Facebook"),
						λ.NewStr("upload_date"): λ.NewStr("20140908"),
						λ.NewStr("timestamp"):   λ.NewInt(1410199200),
					}),
					λ.NewStr("skip"): λ.NewStr("Requires logging in"),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("https://www.facebook.com/video.php?v=274175099429670"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("274175099429670"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("re:^Asif Nawab Butt posted a video"),
						λ.NewStr("uploader"):    λ.NewStr("Asif Nawab Butt"),
						λ.NewStr("upload_date"): λ.NewStr("20140506"),
						λ.NewStr("timestamp"):   λ.NewInt(1399398998),
						λ.NewStr("thumbnail"):   λ.NewStr("re:^https?://.*"),
					}),
					λ.NewStr("expected_warnings"): λ.NewList(λ.NewStr("title")),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("note"): λ.NewStr("Video with DASH manifest"),
					λ.NewStr("url"):  λ.NewStr("https://www.facebook.com/video.php?v=957955867617029"),
					λ.NewStr("md5"):  λ.NewStr("b2c28d528273b323abe5c6ab59f0f030"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("957955867617029"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("When you post epic content on instagram.com/433 8 million followers, this is ..."),
						λ.NewStr("uploader"):    λ.NewStr("Demy de Zeeuw"),
						λ.NewStr("upload_date"): λ.NewStr("20160110"),
						λ.NewStr("timestamp"):   λ.NewInt(1452431627),
					}),
					λ.NewStr("skip"): λ.NewStr("Requires logging in"),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("https://www.facebook.com/maxlayn/posts/10153807558977570"),
					λ.NewStr("md5"): λ.NewStr("037b1fa7f3c2d02b7a0d7bc16031ecc6"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):       λ.NewStr("544765982287235"),
						λ.NewStr("ext"):      λ.NewStr("mp4"),
						λ.NewStr("title"):    λ.NewStr("\"What are you doing running in the snow?\""),
						λ.NewStr("uploader"): λ.NewStr("FailArmy"),
					}),
					λ.NewStr("skip"): λ.NewStr("Video gone"),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("https://m.facebook.com/story.php?story_fbid=1035862816472149&id=116132035111903"),
					λ.NewStr("md5"): λ.NewStr("1deb90b6ac27f7efcf6d747c8a27f5e3"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):       λ.NewStr("1035862816472149"),
						λ.NewStr("ext"):      λ.NewStr("mp4"),
						λ.NewStr("title"):    λ.NewStr("What the Flock Is Going On In New Zealand  Credit: ViralHog"),
						λ.NewStr("uploader"): λ.NewStr("S. Saint"),
					}),
					λ.NewStr("skip"): λ.NewStr("Video gone"),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("note"): λ.NewStr("swf params escaped"),
					λ.NewStr("url"):  λ.NewStr("https://www.facebook.com/barackobama/posts/10153664894881749"),
					λ.NewStr("md5"):  λ.NewStr("97ba073838964d12c70566e0085c2b91"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("10153664894881749"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("Average time to confirm recent Supreme Court nominees: 67 days Longest it's t..."),
						λ.NewStr("thumbnail"):   λ.NewStr("re:^https?://.*"),
						λ.NewStr("timestamp"):   λ.NewInt(1456259628),
						λ.NewStr("upload_date"): λ.NewStr("20160223"),
						λ.NewStr("uploader"):    λ.NewStr("Barack Obama"),
					}),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("https://www.facebook.com/cnn/videos/10155529876156509/"),
					λ.NewStr("md5"): λ.NewStr("9571fae53d4165bbbadb17a94651dcdc"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("10155529876156509"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("She survived the holocaust — and years later, she’s getting her citizenship s..."),
						λ.NewStr("timestamp"):   λ.NewInt(1477818095),
						λ.NewStr("upload_date"): λ.NewStr("20161030"),
						λ.NewStr("uploader"):    λ.NewStr("CNN"),
						λ.NewStr("thumbnail"):   λ.NewStr("re:^https?://.*"),
						λ.NewStr("view_count"):  λ.IntType,
					}),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("https://www.facebook.com/yaroslav.korpan/videos/1417995061575415/"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("1417995061575415"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("md5:1db063d6a8c13faa8da727817339c857"),
						λ.NewStr("timestamp"):   λ.NewInt(1486648217),
						λ.NewStr("upload_date"): λ.NewStr("20170209"),
						λ.NewStr("uploader"):    λ.NewStr("Yaroslav Korpan"),
					}),
					λ.NewStr("params"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("skip_download"): λ.True,
					}),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("https://www.facebook.com/LaGuiaDelVaron/posts/1072691702860471"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("1072691702860471"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("md5:ae2d22a93fbb12dad20dc393a869739d"),
						λ.NewStr("timestamp"):   λ.NewInt(1477305000),
						λ.NewStr("upload_date"): λ.NewStr("20161024"),
						λ.NewStr("uploader"):    λ.NewStr("La Guía Del Varón"),
						λ.NewStr("thumbnail"):   λ.NewStr("re:^https?://.*"),
					}),
					λ.NewStr("params"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("skip_download"): λ.True,
					}),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("https://www.facebook.com/groups/1024490957622648/permalink/1396382447100162/"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("1396382447100162"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("md5:19a428bbde91364e3de815383b54a235"),
						λ.NewStr("timestamp"):   λ.NewInt(1486035494),
						λ.NewStr("upload_date"): λ.NewStr("20170202"),
						λ.NewStr("uploader"):    λ.NewStr("Elisabeth Ahtn"),
					}),
					λ.NewStr("params"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("skip_download"): λ.True,
					}),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("https://www.facebook.com/video.php?v=10204634152394104"),
					λ.NewStr("only_matching"): λ.True,
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("https://www.facebook.com/amogood/videos/1618742068337349/?fref=nf"),
					λ.NewStr("only_matching"): λ.True,
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("https://www.facebook.com/ChristyClarkForBC/videos/vb.22819070941/10153870694020942/?type=2&theater"),
					λ.NewStr("only_matching"): λ.True,
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("facebook:544765982287235"),
					λ.NewStr("only_matching"): λ.True,
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("https://www.facebook.com/groups/164828000315060/permalink/764967300301124/"),
					λ.NewStr("only_matching"): λ.True,
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("https://zh-hk.facebook.com/peoplespower/videos/1135894589806027/"),
					λ.NewStr("only_matching"): λ.True,
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("https://www.facebookcorewwwi.onion/video.php?v=274175099429670"),
					λ.NewStr("only_matching"): λ.True,
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("https://www.facebook.com/onlycleverentertainment/videos/1947995502095005/"),
					λ.NewStr("only_matching"): λ.True,
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("https://www.facebook.com/WatchESLOne/videos/359649331226507/"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):       λ.NewStr("359649331226507"),
						λ.NewStr("ext"):      λ.NewStr("mp4"),
						λ.NewStr("title"):    λ.NewStr("#ESLOne VoD - Birmingham Finals Day#1 Fnatic vs. @Evil Geniuses"),
						λ.NewStr("uploader"): λ.NewStr("ESL One Dota 2"),
					}),
					λ.NewStr("params"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("skip_download"): λ.True,
					}),
				}),
			)
			FacebookIE__login = λ.NewFunction("_login",
				[]λ.Param{
					{Name: "self"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒcheck_form     λ.Object
						ϒcheck_req      λ.Object
						ϒcheck_response λ.Object
						ϒerror          λ.Object
						ϒfb_dtsg        λ.Object
						ϒh              λ.Object
						ϒlgnrnd         λ.Object
						ϒlogin_form     λ.Object
						ϒlogin_page     λ.Object
						ϒlogin_page_req λ.Object
						ϒlogin_results  λ.Object
						ϒlsd            λ.Object
						ϒpassword       λ.Object
						ϒrequest        λ.Object
						ϒself           = λargs[0]
						ϒuseremail      λ.Object
						τmp0            λ.Object
						τmp1            λ.Object
					)
					τmp0 = λ.Cal(λ.GetAttr(ϒself, "_get_login_info", nil))
					ϒuseremail = λ.GetItem(τmp0, λ.NewInt(0))
					ϒpassword = λ.GetItem(τmp0, λ.NewInt(1))
					if λ.IsTrue(λ.NewBool(ϒuseremail == λ.None)) {
						return λ.None
					}
					ϒlogin_page_req = λ.Cal(ϒsanitized_Request, λ.GetAttr(ϒself, "_LOGIN_URL", nil))
					λ.Cal(λ.GetAttr(ϒself, "_set_cookie", nil), λ.NewStr("facebook.com"), λ.NewStr("locale"), λ.NewStr("en_US"))
					ϒlogin_page = λ.Call(λ.GetAttr(ϒself, "_download_webpage", nil), λ.NewArgs(
						ϒlogin_page_req,
						λ.None,
					), λ.KWArgs{
						{Name: "note", Value: λ.NewStr("Downloading login page")},
						{Name: "errnote", Value: λ.NewStr("Unable to download login page")},
					})
					ϒlsd = λ.Cal(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewStr("<input type=\"hidden\" name=\"lsd\" value=\"([^\"]*)\""), ϒlogin_page, λ.NewStr("lsd"))
					ϒlgnrnd = λ.Cal(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewStr("name=\"lgnrnd\" value=\"([^\"]*?)\""), ϒlogin_page, λ.NewStr("lgnrnd"))
					ϒlogin_form = λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("email"):              ϒuseremail,
						λ.NewStr("pass"):               ϒpassword,
						λ.NewStr("lsd"):                ϒlsd,
						λ.NewStr("lgnrnd"):             ϒlgnrnd,
						λ.NewStr("next"):               λ.NewStr("http://facebook.com/home.php"),
						λ.NewStr("default_persistent"): λ.NewStr("0"),
						λ.NewStr("legacy_return"):      λ.NewStr("1"),
						λ.NewStr("timezone"):           λ.NewStr("-60"),
						λ.NewStr("trynum"):             λ.NewStr("1"),
					})
					ϒrequest = λ.Cal(ϒsanitized_Request, λ.GetAttr(ϒself, "_LOGIN_URL", nil), λ.Cal(ϒurlencode_postdata, ϒlogin_form))
					λ.Cal(λ.GetAttr(ϒrequest, "add_header", nil), λ.NewStr("Content-Type"), λ.NewStr("application/x-www-form-urlencoded"))
					τmp0, τmp1 = func() (λexit λ.Object, λret λ.Object) {
						defer λ.CatchMulti(
							nil,
							&λ.Catcher{λ.NewTuple(
								Ωerror.URLError,
								λ.GetAttr(ϒcompat_http_client, "HTTPException", nil),
								Ωsocket.ϒerror,
							), func(λex λ.BaseException) {
								ϒerr := λex
								λ.Cal(λ.GetAttr(λ.GetAttr(ϒself, "_downloader", nil), "report_warning", nil), λ.Mod(λ.NewStr("unable to log in: %s"), λ.Cal(ϒerror_to_compat_str, ϒerr)))
								λexit, λret = λ.BlockExitReturn, λ.None
								return
							}},
						)
						ϒlogin_results = λ.Call(λ.GetAttr(ϒself, "_download_webpage", nil), λ.NewArgs(
							ϒrequest,
							λ.None,
						), λ.KWArgs{
							{Name: "note", Value: λ.NewStr("Logging in")},
							{Name: "errnote", Value: λ.NewStr("unable to fetch login page")},
						})
						if λ.IsTrue(λ.NewBool(λ.Cal(Ωre.ϒsearch, λ.NewStr("<form(.*)name=\"login\"(.*)</form>"), ϒlogin_results) != λ.None)) {
							ϒerror = λ.Call(λ.GetAttr(ϒself, "_html_search_regex", nil), λ.NewArgs(
								λ.NewStr("(?s)<div[^>]+class=([\"\\']).*?login_error_box.*?\\1[^>]*><div[^>]*>.*?</div><div[^>]*>(?P<error>.+?)</div>"),
								ϒlogin_results,
								λ.NewStr("login error"),
							), λ.KWArgs{
								{Name: "default", Value: λ.None},
								{Name: "group", Value: λ.NewStr("error")},
							})
							if λ.IsTrue(ϒerror) {
								panic(λ.Raise(λ.Call(ExtractorError, λ.NewArgs(λ.Mod(λ.NewStr("Unable to login: %s"), ϒerror)), λ.KWArgs{
									{Name: "expected", Value: λ.True},
								})))
							}
							λ.Cal(λ.GetAttr(λ.GetAttr(ϒself, "_downloader", nil), "report_warning", nil), λ.NewStr("unable to log in: bad username/password, or exceeded login rate limit (~3/min). Check credentials or wait."))
							λexit, λret = λ.BlockExitReturn, λ.None
							return
						}
						ϒfb_dtsg = λ.Call(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewArgs(
							λ.NewStr("name=\"fb_dtsg\" value=\"(.+?)\""),
							ϒlogin_results,
							λ.NewStr("fb_dtsg"),
						), λ.KWArgs{
							{Name: "default", Value: λ.None},
						})
						ϒh = λ.Call(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewArgs(
							λ.NewStr("name=\"h\"\\s+(?:\\w+=\"[^\"]+\"\\s+)*?value=\"([^\"]+)\""),
							ϒlogin_results,
							λ.NewStr("h"),
						), λ.KWArgs{
							{Name: "default", Value: λ.None},
						})
						if λ.IsTrue(func() λ.Object {
							if λv := λ.NewBool(!λ.IsTrue(ϒfb_dtsg)); λ.IsTrue(λv) {
								return λv
							} else {
								return λ.NewBool(!λ.IsTrue(ϒh))
							}
						}()) {
							λexit, λret = λ.BlockExitReturn, λ.None
							return
						}
						ϒcheck_form = λ.NewDictWithTable(map[λ.Object]λ.Object{
							λ.NewStr("fb_dtsg"):              ϒfb_dtsg,
							λ.NewStr("h"):                    ϒh,
							λ.NewStr("name_action_selected"): λ.NewStr("dont_save"),
						})
						ϒcheck_req = λ.Cal(ϒsanitized_Request, λ.GetAttr(ϒself, "_CHECKPOINT_URL", nil), λ.Cal(ϒurlencode_postdata, ϒcheck_form))
						λ.Cal(λ.GetAttr(ϒcheck_req, "add_header", nil), λ.NewStr("Content-Type"), λ.NewStr("application/x-www-form-urlencoded"))
						ϒcheck_response = λ.Call(λ.GetAttr(ϒself, "_download_webpage", nil), λ.NewArgs(
							ϒcheck_req,
							λ.None,
						), λ.KWArgs{
							{Name: "note", Value: λ.NewStr("Confirming login")},
						})
						if λ.IsTrue(λ.NewBool(λ.Cal(Ωre.ϒsearch, λ.NewStr("id=\"checkpointSubmitButton\""), ϒcheck_response) != λ.None)) {
							λ.Cal(λ.GetAttr(λ.GetAttr(ϒself, "_downloader", nil), "report_warning", nil), λ.NewStr("Unable to confirm login, you have to login in your browser and authorize the login."))
						}
						return λ.BlockExitNormally, nil
					}()
					if τmp0 == λ.BlockExitReturn {
						return τmp1
					}
					return λ.None
				})
			FacebookIE__real_initialize = λ.NewFunction("_real_initialize",
				[]λ.Param{
					{Name: "self"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒself = λargs[0]
					)
					λ.Cal(λ.GetAttr(ϒself, "_login", nil))
					return λ.None
				})
			FacebookIE__extract_from_url = λ.NewFunction("_extract_from_url",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
					{Name: "video_id"},
					{Name: "fatal_if_no_video", Def: λ.True},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒdash_manifest                 λ.Object
						ϒextract_from_jsmods_instances λ.Object
						ϒextract_video_data            λ.Object
						ϒf                             λ.Object
						ϒfatal_if_no_video             = λargs[3]
						ϒformat_id                     λ.Object
						ϒformats                       λ.Object
						ϒinfo_dict                     λ.Object
						ϒm_msg                         λ.Object
						ϒpreference                    λ.Object
						ϒquality                       λ.Object
						ϒreq                           λ.Object
						ϒself                          = λargs[0]
						ϒserver_js_data                λ.Object
						ϒsrc                           λ.Object
						ϒsrc_type                      λ.Object
						ϒtahoe_data                    λ.Object
						ϒtahoe_js_data                 λ.Object
						ϒthumbnail                     λ.Object
						ϒtimestamp                     λ.Object
						ϒuploader                      λ.Object
						ϒurl                           = λargs[1]
						ϒvideo_data                    λ.Object
						ϒvideo_id                      = λargs[2]
						ϒvideo_title                   λ.Object
						ϒview_count                    λ.Object
						ϒwebpage                       λ.Object
						τmp0                           λ.Object
						τmp1                           λ.Object
						τmp2                           λ.Object
						τmp3                           λ.Object
						τmp4                           λ.Object
						τmp5                           λ.Object
						τmp6                           λ.Object
					)
					ϒreq = λ.Cal(ϒsanitized_Request, ϒurl)
					λ.Cal(λ.GetAttr(ϒreq, "add_header", nil), λ.NewStr("User-Agent"), λ.GetAttr(ϒself, "_CHROME_USER_AGENT", nil))
					ϒwebpage = λ.Cal(λ.GetAttr(ϒself, "_download_webpage", nil), ϒreq, ϒvideo_id)
					ϒvideo_data = λ.None
					ϒextract_video_data = λ.NewFunction("extract_video_data",
						[]λ.Param{
							{Name: "instances"},
						},
						0, false, false,
						func(λargs []λ.Object) λ.Object {
							var (
								ϒinstances  = λargs[0]
								ϒitem       λ.Object
								ϒvideo_item λ.Object
								τmp0        λ.Object
								τmp1        λ.Object
							)
							τmp0 = λ.Cal(λ.BuiltinIter, ϒinstances)
							for {
								if τmp1 = λ.NextDefault(τmp0, λ.AfterLast); τmp1 == λ.AfterLast {
									break
								}
								ϒitem = τmp1
								if λ.IsTrue(λ.Eq(λ.GetItem(λ.GetItem(ϒitem, λ.NewInt(1)), λ.NewInt(0)), λ.NewStr("VideoConfig"))) {
									ϒvideo_item = λ.GetItem(λ.GetItem(ϒitem, λ.NewInt(2)), λ.NewInt(0))
									if λ.IsTrue(λ.Cal(λ.GetAttr(ϒvideo_item, "get", nil), λ.NewStr("video_id"))) {
										return λ.GetItem(ϒvideo_item, λ.NewStr("videoData"))
									}
								}
							}
							return λ.None
						})
					ϒserver_js_data = λ.Call(λ.GetAttr(ϒself, "_parse_json", nil), λ.NewArgs(
						λ.Call(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewArgs(
							λ.NewStr("handleServerJS\\(({.+})(?:\\);|,\")"),
							ϒwebpage,
							λ.NewStr("server js data"),
						), λ.KWArgs{
							{Name: "default", Value: λ.NewStr("{}")},
						}),
						ϒvideo_id,
					), λ.KWArgs{
						{Name: "fatal", Value: λ.False},
					})
					if λ.IsTrue(ϒserver_js_data) {
						ϒvideo_data = λ.Cal(ϒextract_video_data, λ.Cal(λ.GetAttr(ϒserver_js_data, "get", nil), λ.NewStr("instances"), λ.NewList()))
					}
					ϒextract_from_jsmods_instances = λ.NewFunction("extract_from_jsmods_instances",
						[]λ.Param{
							{Name: "js_data"},
						},
						0, false, false,
						func(λargs []λ.Object) λ.Object {
							var (
								ϒjs_data = λargs[0]
							)
							if λ.IsTrue(ϒjs_data) {
								return λ.Cal(ϒextract_video_data, func() λ.Object {
									if λv := λ.Cal(ϒtry_get, ϒjs_data, λ.NewFunction("<lambda>",
										[]λ.Param{
											{Name: "x"},
										},
										0, false, false,
										func(λargs []λ.Object) λ.Object {
											var (
												ϒx = λargs[0]
											)
											return λ.GetItem(λ.GetItem(ϒx, λ.NewStr("jsmods")), λ.NewStr("instances"))
										}), λ.ListType); λ.IsTrue(λv) {
										return λv
									} else {
										return λ.NewList()
									}
								}())
							}
							return λ.None
						})
					if λ.IsTrue(λ.NewBool(!λ.IsTrue(ϒvideo_data))) {
						ϒserver_js_data = λ.Call(λ.GetAttr(ϒself, "_parse_json", nil), λ.NewArgs(
							λ.Call(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewArgs(
								λ.NewStr("bigPipe\\.onPageletArrive\\(({.+?})\\)\\s*;\\s*}\\s*\\)\\s*,\\s*[\"\\']onPageletArrive\\s+(?:stream_pagelet|pagelet_group_mall|permalink_video_pagelet)"),
								ϒwebpage,
								λ.NewStr("js data"),
							), λ.KWArgs{
								{Name: "default", Value: λ.NewStr("{}")},
							}),
							ϒvideo_id,
						), λ.KWArgs{
							{Name: "transform_source", Value: ϒjs_to_json},
							{Name: "fatal", Value: λ.False},
						})
						ϒvideo_data = λ.Cal(ϒextract_from_jsmods_instances, ϒserver_js_data)
					}
					if λ.IsTrue(λ.NewBool(!λ.IsTrue(ϒvideo_data))) {
						if λ.IsTrue(λ.NewBool(!λ.IsTrue(ϒfatal_if_no_video))) {
							return λ.NewTuple(
								ϒwebpage,
								λ.False,
							)
						}
						ϒm_msg = λ.Cal(Ωre.ϒsearch, λ.NewStr("class=\"[^\"]*uiInterstitialContent[^\"]*\"><div>(.*?)</div>"), ϒwebpage)
						if λ.IsTrue(λ.NewBool(ϒm_msg != λ.None)) {
							panic(λ.Raise(λ.Call(ExtractorError, λ.NewArgs(λ.Mod(λ.NewStr("The video is not available, Facebook said: \"%s\""), λ.Cal(λ.GetAttr(ϒm_msg, "group", nil), λ.NewInt(1)))), λ.KWArgs{
								{Name: "expected", Value: λ.True},
							})))
						} else {
							if λ.IsTrue(λ.NewBool(λ.Contains(ϒwebpage, λ.NewStr(">You must log in to continue")))) {
								λ.Cal(λ.GetAttr(ϒself, "raise_login_required", nil))
							}
						}
						ϒtahoe_data = λ.Call(λ.GetAttr(ϒself, "_download_webpage", nil), λ.NewArgs(
							λ.Mod(λ.GetAttr(ϒself, "_VIDEO_PAGE_TAHOE_TEMPLATE", nil), ϒvideo_id),
							ϒvideo_id,
						), λ.KWArgs{
							{Name: "data", Value: λ.Cal(ϒurlencode_postdata, λ.NewDictWithTable(map[λ.Object]λ.Object{
								λ.NewStr("__a"): λ.NewInt(1),
								λ.NewStr("__pc"): λ.Call(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewArgs(
									λ.NewStr("pkg_cohort[\"\\']\\s*:\\s*[\"\\'](.+?)[\"\\']"),
									ϒwebpage,
									λ.NewStr("pkg cohort"),
								), λ.KWArgs{
									{Name: "default", Value: λ.NewStr("PHASED:DEFAULT")},
								}),
								λ.NewStr("__rev"): λ.Call(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewArgs(
									λ.NewStr("client_revision[\"\\']\\s*:\\s*(\\d+),"),
									ϒwebpage,
									λ.NewStr("client revision"),
								), λ.KWArgs{
									{Name: "default", Value: λ.NewStr("3944515")},
								}),
								λ.NewStr("fb_dtsg"): λ.Call(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewArgs(
									λ.NewStr("\"DTSGInitialData\"\\s*,\\s*\\[\\]\\s*,\\s*{\\s*\"token\"\\s*:\\s*\"([^\"]+)\""),
									ϒwebpage,
									λ.NewStr("dtsg token"),
								), λ.KWArgs{
									{Name: "default", Value: λ.NewStr("")},
								}),
							}))},
							{Name: "headers", Value: λ.NewDictWithTable(map[λ.Object]λ.Object{
								λ.NewStr("Content-Type"): λ.NewStr("application/x-www-form-urlencoded"),
							})},
						})
						ϒtahoe_js_data = λ.Call(λ.GetAttr(ϒself, "_parse_json", nil), λ.NewArgs(
							λ.Call(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewArgs(
								λ.NewStr("for\\s+\\(\\s*;\\s*;\\s*\\)\\s*;(.+)"),
								ϒtahoe_data,
								λ.NewStr("tahoe js data"),
							), λ.KWArgs{
								{Name: "default", Value: λ.NewStr("{}")},
							}),
							ϒvideo_id,
						), λ.KWArgs{
							{Name: "fatal", Value: λ.False},
						})
						ϒvideo_data = λ.Cal(ϒextract_from_jsmods_instances, ϒtahoe_js_data)
					}
					if λ.IsTrue(λ.NewBool(!λ.IsTrue(ϒvideo_data))) {
						panic(λ.Raise(λ.Cal(ExtractorError, λ.NewStr("Cannot parse data"))))
					}
					ϒformats = λ.NewList()
					τmp0 = λ.Cal(λ.BuiltinIter, ϒvideo_data)
					for {
						if τmp1 = λ.NextDefault(τmp0, λ.AfterLast); τmp1 == λ.AfterLast {
							break
						}
						ϒf = τmp1
						ϒformat_id = λ.GetItem(ϒf, λ.NewStr("stream_type"))
						if λ.IsTrue(func() λ.Object {
							if λv := ϒf; !λ.IsTrue(λv) {
								return λv
							} else {
								return λ.Cal(λ.BuiltinIsInstance, ϒf, λ.DictType)
							}
						}()) {
							ϒf = λ.NewList(ϒf)
						}
						if λ.IsTrue(func() λ.Object {
							if λv := λ.NewBool(!λ.IsTrue(ϒf)); λ.IsTrue(λv) {
								return λv
							} else {
								return λ.NewBool(!λ.IsTrue(λ.Cal(λ.BuiltinIsInstance, ϒf, λ.ListType)))
							}
						}()) {
							continue
						}
						τmp2 = λ.Cal(λ.BuiltinIter, λ.NewTuple(
							λ.NewStr("sd"),
							λ.NewStr("hd"),
						))
						for {
							if τmp3 = λ.NextDefault(τmp2, λ.AfterLast); τmp3 == λ.AfterLast {
								break
							}
							ϒquality = τmp3
							τmp4 = λ.Cal(λ.BuiltinIter, λ.NewTuple(
								λ.NewStr("src"),
								λ.NewStr("src_no_ratelimit"),
							))
							for {
								if τmp5 = λ.NextDefault(τmp4, λ.AfterLast); τmp5 == λ.AfterLast {
									break
								}
								ϒsrc_type = τmp5
								ϒsrc = λ.Cal(λ.GetAttr(λ.GetItem(ϒf, λ.NewInt(0)), "get", nil), λ.Mod(λ.NewStr("%s_%s"), λ.NewTuple(
									ϒquality,
									ϒsrc_type,
								)))
								if λ.IsTrue(ϒsrc) {
									ϒpreference = func() λ.Object {
										if λ.IsTrue(λ.Eq(ϒformat_id, λ.NewStr("progressive"))) {
											return λ.Neg(λ.NewInt(10))
										} else {
											return λ.NewInt(0)
										}
									}()
									if λ.IsTrue(λ.Eq(ϒquality, λ.NewStr("hd"))) {
										τmp6 = λ.IAdd(ϒpreference, λ.NewInt(5))
										ϒpreference = τmp6
									}
									λ.Cal(λ.GetAttr(ϒformats, "append", nil), λ.NewDictWithTable(map[λ.Object]λ.Object{
										λ.NewStr("format_id"): λ.Mod(λ.NewStr("%s_%s_%s"), λ.NewTuple(
											ϒformat_id,
											ϒquality,
											ϒsrc_type,
										)),
										λ.NewStr("url"):        ϒsrc,
										λ.NewStr("preference"): ϒpreference,
									}))
								}
							}
						}
						ϒdash_manifest = λ.Cal(λ.GetAttr(λ.GetItem(ϒf, λ.NewInt(0)), "get", nil), λ.NewStr("dash_manifest"))
						if λ.IsTrue(ϒdash_manifest) {
							λ.Cal(λ.GetAttr(ϒformats, "extend", nil), λ.Cal(λ.GetAttr(ϒself, "_parse_mpd_formats", nil), λ.Cal(ϒcompat_etree_fromstring, λ.Cal(ϒcompat_urllib_parse_unquote_plus, ϒdash_manifest))))
						}
					}
					if λ.IsTrue(λ.NewBool(!λ.IsTrue(ϒformats))) {
						panic(λ.Raise(λ.Cal(ExtractorError, λ.NewStr("Cannot find video formats"))))
					}
					λ.Cal(λ.GetAttr(ϒself, "_sort_formats", nil), ϒformats)
					ϒvideo_title = λ.Call(λ.GetAttr(ϒself, "_html_search_regex", nil), λ.NewArgs(
						λ.NewStr("<h2\\s+[^>]*class=\"uiHeaderTitle\"[^>]*>([^<]*)</h2>"),
						ϒwebpage,
						λ.NewStr("title"),
					), λ.KWArgs{
						{Name: "default", Value: λ.None},
					})
					if λ.IsTrue(λ.NewBool(!λ.IsTrue(ϒvideo_title))) {
						ϒvideo_title = λ.Call(λ.GetAttr(ϒself, "_html_search_regex", nil), λ.NewArgs(
							λ.NewStr("(?s)<span class=\"fbPhotosPhotoCaption\".*?id=\"fbPhotoPageCaption\"><span class=\"hasCaption\">(.*?)</span>"),
							ϒwebpage,
							λ.NewStr("alternative title"),
						), λ.KWArgs{
							{Name: "default", Value: λ.None},
						})
					}
					if λ.IsTrue(λ.NewBool(!λ.IsTrue(ϒvideo_title))) {
						ϒvideo_title = λ.Call(λ.GetAttr(ϒself, "_html_search_meta", nil), λ.NewArgs(
							λ.NewStr("description"),
							ϒwebpage,
							λ.NewStr("title"),
						), λ.KWArgs{
							{Name: "default", Value: λ.None},
						})
					}
					if λ.IsTrue(ϒvideo_title) {
						ϒvideo_title = λ.Cal(ϒlimit_length, ϒvideo_title, λ.NewInt(80))
					} else {
						ϒvideo_title = λ.Mod(λ.NewStr("Facebook video #%s"), ϒvideo_id)
					}
					ϒuploader = func() λ.Object {
						if λv := λ.Cal(ϒclean_html, λ.Cal(ϒget_element_by_id, λ.NewStr("fbPhotoPageAuthorName"), ϒwebpage)); λ.IsTrue(λv) {
							return λv
						} else if λv := λ.Call(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewArgs(
							λ.NewStr("ownerName\\s*:\\s*\"([^\"]+)\""),
							ϒwebpage,
							λ.NewStr("uploader"),
						), λ.KWArgs{
							{Name: "fatal", Value: λ.False},
						}); λ.IsTrue(λv) {
							return λv
						} else {
							return λ.Call(λ.GetAttr(ϒself, "_og_search_title", nil), λ.NewArgs(ϒwebpage), λ.KWArgs{
								{Name: "fatal", Value: λ.False},
							})
						}
					}()
					ϒtimestamp = λ.Cal(ϒint_or_none, λ.Call(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewArgs(
						λ.NewStr("<abbr[^>]+data-utime=[\"\\'](\\d+)"),
						ϒwebpage,
						λ.NewStr("timestamp"),
					), λ.KWArgs{
						{Name: "default", Value: λ.None},
					}))
					ϒthumbnail = λ.Cal(λ.GetAttr(ϒself, "_og_search_thumbnail", nil), ϒwebpage)
					ϒview_count = λ.Cal(ϒparse_count, λ.Call(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewArgs(
						λ.NewStr("\\bviewCount\\s*:\\s*[\"\\']([\\d,.]+)"),
						ϒwebpage,
						λ.NewStr("view count"),
					), λ.KWArgs{
						{Name: "default", Value: λ.None},
					}))
					ϒinfo_dict = λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):         ϒvideo_id,
						λ.NewStr("title"):      ϒvideo_title,
						λ.NewStr("formats"):    ϒformats,
						λ.NewStr("uploader"):   ϒuploader,
						λ.NewStr("timestamp"):  ϒtimestamp,
						λ.NewStr("thumbnail"):  ϒthumbnail,
						λ.NewStr("view_count"): ϒview_count,
					})
					return λ.NewTuple(
						ϒwebpage,
						ϒinfo_dict,
					)
				})
			FacebookIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒentries   λ.Object
						ϒinfo_dict λ.Object
						ϒreal_url  λ.Object
						ϒself      = λargs[0]
						ϒurl       = λargs[1]
						ϒvideo_id  λ.Object
						ϒwebpage   λ.Object
						τmp0       λ.Object
					)
					ϒvideo_id = λ.Cal(λ.GetAttr(ϒself, "_match_id", nil), ϒurl)
					ϒreal_url = func() λ.Object {
						if λ.IsTrue(λ.Cal(λ.GetAttr(ϒurl, "startswith", nil), λ.NewStr("facebook:"))) {
							return λ.Mod(λ.GetAttr(ϒself, "_VIDEO_PAGE_TEMPLATE", nil), ϒvideo_id)
						} else {
							return ϒurl
						}
					}()
					τmp0 = λ.Call(λ.GetAttr(ϒself, "_extract_from_url", nil), λ.NewArgs(
						ϒreal_url,
						ϒvideo_id,
					), λ.KWArgs{
						{Name: "fatal_if_no_video", Value: λ.False},
					})
					ϒwebpage = λ.GetItem(τmp0, λ.NewInt(0))
					ϒinfo_dict = λ.GetItem(τmp0, λ.NewInt(1))
					if λ.IsTrue(ϒinfo_dict) {
						return ϒinfo_dict
					}
					if λ.IsTrue(λ.NewBool(λ.Contains(ϒurl, λ.NewStr("/posts/")))) {
						ϒentries = λ.Cal(λ.ListType, λ.Cal(λ.NewFunction("<generator>",
							nil,
							0, false, false,
							func(λargs []λ.Object) λ.Object {
								return λ.NewGenerator(func(λgen λ.Generator) λ.Object {
									var (
										ϒvid λ.Object
										τmp0 λ.Object
										τmp1 λ.Object
									)
									τmp0 = λ.Cal(λ.BuiltinIter, λ.Cal(λ.GetAttr(ϒself, "_parse_json", nil), λ.Call(λ.GetAttr(ϒself, "_search_regex", nil), λ.NewArgs(
										λ.NewStr("([\"\\'])video_ids\\1\\s*:\\s*(?P<ids>\\[.+?\\])"),
										ϒwebpage,
										λ.NewStr("video ids"),
									), λ.KWArgs{
										{Name: "group", Value: λ.NewStr("ids")},
									}), ϒvideo_id))
									for {
										if τmp1 = λ.NextDefault(τmp0, λ.AfterLast); τmp1 == λ.AfterLast {
											break
										}
										ϒvid = τmp1
										λgen.Yield(λ.Cal(λ.GetAttr(ϒself, "url_result", nil), λ.Mod(λ.NewStr("facebook:%s"), ϒvid), λ.Cal(λ.GetAttr(FacebookIE, "ie_key", nil))))
									}
									return λ.None
								})
							})))
						return λ.Cal(λ.GetAttr(ϒself, "playlist_result", nil), ϒentries, ϒvideo_id)
					} else {
						τmp0 = λ.Call(λ.GetAttr(ϒself, "_extract_from_url", nil), λ.NewArgs(
							λ.Mod(λ.GetAttr(ϒself, "_VIDEO_PAGE_TEMPLATE", nil), ϒvideo_id),
							ϒvideo_id,
						), λ.KWArgs{
							{Name: "fatal_if_no_video", Value: λ.True},
						})
						_ = λ.GetItem(τmp0, λ.NewInt(0))
						ϒinfo_dict = λ.GetItem(τmp0, λ.NewInt(1))
						return ϒinfo_dict
					}
					return λ.None
				})
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("IE_NAME"):            FacebookIE_IE_NAME,
				λ.NewStr("_CHROME_USER_AGENT"): FacebookIE__CHROME_USER_AGENT,
				λ.NewStr("_NETRC_MACHINE"):     FacebookIE__NETRC_MACHINE,
				λ.NewStr("_TESTS"):             FacebookIE__TESTS,
				λ.NewStr("_VALID_URL"):         FacebookIE__VALID_URL,
				λ.NewStr("_extract_from_url"):  FacebookIE__extract_from_url,
				λ.NewStr("_login"):             FacebookIE__login,
				λ.NewStr("_real_extract"):      FacebookIE__real_extract,
				λ.NewStr("_real_initialize"):   FacebookIE__real_initialize,
			})
		}())
		FacebookPluginsVideoIE = λ.Cal(λ.TypeType, λ.NewStr("FacebookPluginsVideoIE"), λ.NewTuple(InfoExtractor), func() λ.Dict {
			var (
				FacebookPluginsVideoIE__TESTS        λ.Object
				FacebookPluginsVideoIE__VALID_URL    λ.Object
				FacebookPluginsVideoIE__real_extract λ.Object
			)
			FacebookPluginsVideoIE__VALID_URL = λ.NewStr("https?://(?:[\\w-]+\\.)?facebook\\.com/plugins/video\\.php\\?.*?\\bhref=(?P<id>https.+)")
			FacebookPluginsVideoIE__TESTS = λ.NewList(
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"): λ.NewStr("https://www.facebook.com/plugins/video.php?href=https%3A%2F%2Fwww.facebook.com%2Fgov.sg%2Fvideos%2F10154383743583686%2F&show_text=0&width=560"),
					λ.NewStr("md5"): λ.NewStr("5954e92cdfe51fe5782ae9bda7058a07"),
					λ.NewStr("info_dict"): λ.NewDictWithTable(map[λ.Object]λ.Object{
						λ.NewStr("id"):          λ.NewStr("10154383743583686"),
						λ.NewStr("ext"):         λ.NewStr("mp4"),
						λ.NewStr("title"):       λ.NewStr("What to do during the haze?"),
						λ.NewStr("uploader"):    λ.NewStr("Gov.sg"),
						λ.NewStr("upload_date"): λ.NewStr("20160826"),
						λ.NewStr("timestamp"):   λ.NewInt(1472184808),
					}),
					λ.NewStr("add_ie"): λ.NewList(λ.Cal(λ.GetAttr(FacebookIE, "ie_key", nil))),
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("https://www.facebook.com/plugins/video.php?href=https%3A%2F%2Fwww.facebook.com%2Fvideo.php%3Fv%3D10204634152394104"),
					λ.NewStr("only_matching"): λ.True,
				}),
				λ.NewDictWithTable(map[λ.Object]λ.Object{
					λ.NewStr("url"):           λ.NewStr("https://www.facebook.com/plugins/video.php?href=https://www.facebook.com/gov.sg/videos/10154383743583686/&show_text=0&width=560"),
					λ.NewStr("only_matching"): λ.True,
				}),
			)
			FacebookPluginsVideoIE__real_extract = λ.NewFunction("_real_extract",
				[]λ.Param{
					{Name: "self"},
					{Name: "url"},
				},
				0, false, false,
				func(λargs []λ.Object) λ.Object {
					var (
						ϒself = λargs[0]
						ϒurl  = λargs[1]
					)
					return λ.Cal(λ.GetAttr(ϒself, "url_result", nil), λ.Cal(ϒcompat_urllib_parse_unquote, λ.Cal(λ.GetAttr(ϒself, "_match_id", nil), ϒurl)), λ.Cal(λ.GetAttr(FacebookIE, "ie_key", nil)))
				})
			return λ.NewDictWithTable(map[λ.Object]λ.Object{
				λ.NewStr("_TESTS"):        FacebookPluginsVideoIE__TESTS,
				λ.NewStr("_VALID_URL"):    FacebookPluginsVideoIE__VALID_URL,
				λ.NewStr("_real_extract"): FacebookPluginsVideoIE__real_extract,
			})
		}())
	})
}
